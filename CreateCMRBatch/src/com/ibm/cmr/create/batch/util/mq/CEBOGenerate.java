package com.ibm.cmr.create.batch.util.mq;

import java.util.HashMap;

import org.apache.commons.lang.StringUtils;

public class CEBOGenerate {

  public static HashMap<String, String> UK_POSTCODE_CEBO_MAP = new HashMap<String, String>() {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;

    {
      put("AB", "554");
      put("AL", "743");
      put("B1", "B43");
      put("B2", "B43");
      put("B3", "B43");
      put("B4", "B43");
      put("B5", "B43");
      put("B6", "B43");
      put("B7", "B43");
      put("B8", "B43");
      put("B9", "B43");
      put("BA", "532");
      put("BB", "754");
      put("BD", "654");
      put("BH", "432");
      put("BL", "754");
      put("BN", "M21");
      put("BR", "L21");
      put("BS", "532");
      put("BT", "154");
      put("CA", "754");
      put("CB", "743");
      put("CF", "532");
      put("CH", "754");
      put("CM", "743");
      put("CO", "743");
      put("CR", "L21");
      put("CT", "L21");
      put("CV", "B43");
      put("CW", "754");
      put("DA", "L21");
      put("DD", "554");
      put("DE", "D43");
      put("DG", "554");
      put("DH", "854");
      put("DL", "854");
      put("DN", "654");
      put("DT", "432");
      put("DY", "B43");
      put("E10", "643");
      put("E11", "643");
      put("E12", "643");
      put("E13", "643");
      put("E14", "G21");
      put("E15", "643");
      put("E16", "643");
      put("E17", "643");
      put("E18", "643");
      put("E1", "G21");
      put("E2", "643");
      put("E3", "643");
      put("E4", "643");
      put("E5", "643");
      put("E6", "643");
      put("E7", "643");
      put("E8", "643");
      put("E9", "643");
      put("EC1", "J21");
      put("EC2", "J21");
      put("EC3", "G21");
      put("EC4", "J21");
      put("EH", "554");
      put("EN", "743");
      put("EX", "532");
      put("FK", "554");
      put("FY", "754");
      put("G1", "554");
      put("G2", "554");
      put("G3", "554");
      put("G4", "554");
      put("G5", "554");
      put("G6", "554");
      put("G7", "554");
      put("G8", "554");
      put("G9", "554");
      put("GG", "832");
      put("GL", "532");
      put("GU10", "432");
      put("GU11", "332");
      put("GU12", "332");
      put("GU13", "332");
      put("GU14", "332");
      put("GU15", "332");
      put("GU16", "332");
      put("GU17", "332");
      put("GU18", "332");
      put("GU19", "332");
      put("GU1", "332");
      put("GU20", "332");
      put("GU21", "332");
      put("GU22", "332");
      put("GU23", "332");
      put("GU24", "332");
      put("GU25", "332");
      put("GU26", "432");
      put("GU27", "432");
      put("GU28", "432");
      put("GU29", "432");
      put("GU2", "332");
      put("GU30", "432");
      put("GU31", "432");
      put("GU32", "432");
      put("GU33", "432");
      put("GU34", "432");
      put("GU35", "432");
      put("GU3", "332");
      put("GU4", "332");
      put("GU5", "432");
      put("GU6", "432");
      put("GU7", "432");
      put("GU8", "432");
      put("GU9", "432");
      put("GY", "832");
      put("HA", "232");
      put("HD", "654");
      put("HG", "654");
      put("HP10", "232");
      put("HP11", "232");
      put("HP12", "232");
      put("HP13", "232");
      put("HP14", "232");
      put("HP15", "232");
      put("HP16", "232");
      put("HP17", "232");
      put("HP18", "232");
      put("HP19", "232");
      put("HP1", "643");
      put("HP20", "232");
      put("HP21", "232");
      put("HP22", "232");
      put("HP23", "643");
      put("HP2", "643");
      put("HP3", "643");
      put("HP4", "643");
      put("HP5", "232");
      put("HP6", "232");
      put("HP7", "232");
      put("HP8", "232");
      put("HP9", "232");
      put("HR", "532");
      put("HS", "554");
      put("HU", "654");
      put("HX", "654");
      put("IG", "643");
      put("IM", "754");
      put("IP", "743");
      put("IV", "554");
      put("JE", "832");
      put("JJ", "832");
      put("KA", "554");
      put("KT", "332");
      put("KW", "554");
      put("KY", "554");
      put("L1", "754");
      put("L2", "754");
      put("L3", "754");
      put("L4", "754");
      put("L5", "754");
      put("L6", "754");
      put("L7", "754");
      put("L8", "754");
      put("L9", "754");
      put("LA", "754");
      put("LD", "532");
      put("LE", "D43");
      put("LL", "754");
      put("LN", "654");
      put("LS", "654");
      put("LU", "743");
      put("M1", "754");
      put("M2", "754");
      put("M3", "754");
      put("M4", "754");
      put("M5", "754");
      put("M6", "754");
      put("M7", "754");
      put("M8", "754");
      put("M9", "754");
      put("ME", "L21");
      put("MK", "743");
      put("ML", "554");
      put("MM", "754");
      put("N10", "643");
      put("N11", "643");
      put("N12", "643");
      put("N13", "643");
      put("N14", "643");
      put("N15", "643");
      put("N16", "643");
      put("N17", "643");
      put("N18", "643");
      put("N19", "643");
      put("N1", "K21");
      put("N20", "643");
      put("N21", "643");
      put("N22", "643");
      put("N2", "643");
      put("N3", "643");
      put("N4", "643");
      put("N5", "643");
      put("N6", "643");
      put("N7", "643");
      put("N8", "643");
      put("N9", "643");
      put("NE", "854");
      put("NG", "D43");
      put("NN", "D43");
      put("NP", "532");
      put("NR", "743");
      put("NW10", "232");
      put("NW11", "232");
      put("NW1", "K21");
      put("NW2", "232");
      put("NW3", "643");
      put("NW4", "232");
      put("NW5", "643");
      put("NW6", "232");
      put("NW7", "232");
      put("NW8", "232");
      put("NW9", "232");
      put("OL", "754");
      put("OX10", "232");
      put("OX11", "232");
      put("OX12", "232");
      put("OX13", "232");
      put("OX14", "232");
      put("OX15", "B43");
      put("OX16", "B43");
      put("OX17", "B43");
      put("OX1", "232");
      put("OX2", "232");
      put("OX3", "232");
      put("OX4", "232");
      put("OX5", "232");
      put("OX6", "232");
      put("OX7", "232");
      put("OX8", "232");
      put("OX9", "232");
      put("PA", "554");
      put("PE", "743");
      put("PH", "554");
      put("PL", "532");
      put("PO", "432");
      put("PR", "754");
      put("RG10", "232");
      put("RG11", "332");
      put("RG12", "332");
      put("RG13", "232");
      put("RG14", "232");
      put("RG15", "332");
      put("RG16", "232");
      put("RG17", "232");
      put("RG18", "232");
      put("RG19", "232");
      put("RG1", "232");
      put("RG20", "232");
      put("RG21", "332");
      put("RG22", "332");
      put("RG23", "332");
      put("RG24", "332");
      put("RG25", "332");
      put("RG26", "332");
      put("RG27", "332");
      put("RG28", "332");
      put("RG2", "332");
      put("RG3", "332");
      put("RG4", "232");
      put("RG5", "232");
      put("RG6", "332");
      put("RG7", "332");
      put("RG8", "232");
      put("RG9", "232");
      put("RH", "M21");
      put("RM", "743");
      put("S1", "654");
      put("S2", "654");
      put("S3", "654");
      put("S4", "654");
      put("S5", "654");
      put("S6", "654");
      put("S7", "654");
      put("S8", "654");
      put("S9", "654");
      put("SA", "532");
      put("SE", "G21");
      put("SG", "643");
      put("SK", "754");
      put("SL0", "232");
      put("SL1", "232");
      put("SL2", "232");
      put("SL3", "232");
      put("SL4", "332");
      put("SL5", "332");
      put("SL6", "232");
      put("SL7", "232");
      put("SL8", "232");
      put("SL9", "232");
      put("SM", "M21");
      put("SN", "532");
      put("SO", "432");
      put("SP", "432");
      put("SR", "854");
      put("SS", "743");
      put("ST", "D43");
      put("SW10", "232");
      put("SW11", "K21");
      put("SW12", "K21");
      put("SW13", "332");
      put("SW14", "332");
      put("SW15", "332");
      put("SW16", "K21");
      put("SW17", "K21");
      put("SW18", "332");
      put("SW19", "332");
      put("SW1", "K21");
      put("SW20", "332");
      put("SW2", "K21");
      put("SW3", "232");
      put("SW4", "K21");
      put("SW5", "232");
      put("SW6", "232");
      put("SW7", "232");
      put("SW8", "K21");
      put("SW9", "K21");
      put("SY10", "B43");
      put("SY11", "B43");
      put("SY12", "B43");
      put("SY13", "B43");
      put("SY14", "B43");
      put("SY15", "B43");
      put("SY16", "B43");
      put("SY17", "B43");
      put("SY18", "B43");
      put("SY19", "B43");
      put("SY1", "B43");
      put("SY20", "B43");
      put("SY21", "B43");
      put("SY22", "B43");
      put("SY23", "532");
      put("SY24", "532");
      put("SY25", "532");
      put("SY2", "B43");
      put("SY3", "B43");
      put("SY4", "B43");
      put("SY5", "B43");
      put("SY6", "B43");
      put("SY7", "B43");
      put("SY8", "B43");
      put("SY9", "B43");
      put("TA", "532");
      put("TD", "554");
      put("TF", "B43");
      put("TN", "L21");
      put("TQ", "532");
      put("TR", "532");
      put("TS", "854");
      put("TW", "332");
      put("UB", "232");
      put("W10", "232");
      put("W11", "232");
      put("W12", "232");
      put("W13", "232");
      put("W14", "232");
      put("W1", "K21");
      put("W2", "232");
      put("W3", "232");
      put("W4", "232");
      put("W5", "232");
      put("W6", "232");
      put("W7", "232");
      put("W8", "232");
      put("W9", "232");
      put("WA", "754");
      put("WC1", "J21");
      put("WC2", "K21");
      put("WC3", "K21");
      put("WD", "643");
      put("WF", "654");
      put("WN", "754");
      put("WR", "B43");
      put("WS", "B43");
      put("WV", "B43");
      put("YO", "654");
      put("ZE", "554");
      put("ZE", "554");
      put("****", "554");
    }
  };
  public static HashMap<String, String> FR_POSTCODE_CEBO_MAP = new HashMap<String, String>() {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;

    {
      put("01", "650");
      put("02", "662");
      put("03", "650");
      put("04", "646");
      put("05", "650");
      put("06", "646");
      put("07", "650");
      put("08", "662");
      put("09", "663");
      put("10", "662");
      put("11", "663");
      put("12", "663");
      put("13", "646");
      put("14", "665");
      put("15", "663");
      put("16", "663");
      put("17", "663");
      put("18", "664");
      put("19", "663");
      put("2A", "646");
      put("2B", "646");
      put("20", "646");
      put("21", "650");
      put("22", "664");
      put("23", "663");
      put("24", "663");
      put("25", "662");
      put("26", "650");
      put("27", "665");
      put("28", "664");
      put("29", "664");
      put("30", "663");
      put("31", "663");
      put("32", "663");
      put("33", "663");
      put("34", "663");
      put("35", "664");
      put("36", "664");
      put("37", "664");
      put("38", "650");
      put("39", "650");
      put("40", "663");
      put("41", "664");
      put("42", "650");
      put("43", "650");
      put("44", "664");
      put("45", "664");
      put("46", "663");
      put("47", "663");
      put("48", "663");
      put("49", "664");
      put("50", "665");
      put("51", "662");
      put("52", "662");
      put("53", "664");
      put("54", "662");
      put("55", "662");
      put("56", "664");
      put("57", "662");
      put("58", "650");
      put("59", "665");
      put("60", "665");
      put("61", "665");
      put("62", "665");
      put("63", "650");
      put("64", "663");
      put("65", "663");
      put("66", "663");
      put("67", "662");
      put("68", "662");
      put("69", "650");
      put("70", "662");
      put("71", "650");
      put("72", "664");
      put("73", "650");
      put("74", "650");
      put("75", "660");
      put("76", "665");
      put("77", "661");
      put("78", "661");
      put("79", "664");
      put("80", "665");
      put("81", "663");
      put("82", "663");
      put("83", "646");
      put("84", "646");
      put("85", "664");
      put("86", "664");
      put("87", "663");
      put("88", "662");
      put("89", "662");
      put("90", "662");
      put("91", "661");
      put("92", "661");
      put("93", "661");
      put("94", "661");
      put("95", "661");
      put("97", "669");
      put("98", "669");
      put("99", "669");
      put("MC", "646");
      put("GP", "669");
      put("GF", "669");
      put("MQ", "669");
      put("RE", "669");
      put("PM", "669");
      put("KM", "669");
      put("VU", "669");
      put("PF", "669");
      put("YT", "669");
      put("NC", "669");
      put("WF", "669");
      put("AD", "663");
      put("DZ", "299");
      put("TN", "299");
      put("**", "299");

    }
  };

  public static String getUK_CEBO(String postCode) {
    if (!StringUtils.isBlank(postCode) && postCode.trim().length() > 1) {
      String key = "";
      String value = "";
      if (postCode.trim().length() > 3) {
        key = postCode.trim().substring(0, 4);
        value = UK_POSTCODE_CEBO_MAP.get(key);
        if (!StringUtils.isBlank(value))
          return value;
      }
      if (postCode.trim().length() > 2) {
        key = postCode.trim().substring(0, 3);
        value = UK_POSTCODE_CEBO_MAP.get(key);
        if (!StringUtils.isBlank(value))
          return value;
      }
      if (postCode.trim().length() > 1) {
        key = postCode.trim().substring(0, 2);
        value = UK_POSTCODE_CEBO_MAP.get(key);
        if (!StringUtils.isBlank(value))
          return value;
      }
    }
    return "554";
  }

  public static String getFR_CEBO(String postCode) {
    if (!StringUtils.isBlank(postCode) && postCode.trim().length() > 1) {
      String key = "";
      String value = "";
      if (postCode.trim().length() > 1) {
        key = postCode.trim().substring(0, 2);
        value = FR_POSTCODE_CEBO_MAP.get(key);
        if (!StringUtils.isBlank(value))
          return value;
      }
    }
    return "";
  }

  public static void main(String[] args) {

    try {
      String test = null;
      System.out.println("The value1 is " + CEBOGenerate.getUK_CEBO(""));
      System.out.println("The value2 is " + CEBOGenerate.getUK_CEBO("UD"));
      System.out.println("The value3 is " + CEBOGenerate.getUK_CEBO("W1"));
      System.out.println("The value4 is " + CEBOGenerate.getUK_CEBO("G1"));
      System.out.println("The value5 is " + CEBOGenerate.getUK_CEBO("W13"));
      System.out.println("The value6 is " + CEBOGenerate.getUK_CEBO("****"));
      System.out.println("The value" + "HG3 1WA is" + CEBOGenerate.getUK_CEBO("HG3 1WA"));
      System.out.println("The value8 is " + CEBOGenerate.getUK_CEBO(test));
    } catch (Exception e) {
      e.printStackTrace();
    }

  }
}
