/*
This file was automatically generated by the EntityCreator engine on Thu Dec 19 14:13:38 IST 2019.
*/
package com.ibm.cio.cmr.request.entity;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.apache.commons.lang.StringUtils;

/**
 * The primary key class for the SCENARIO_EXCEPTIONS database table.
 * 
 * @author RoopakChugh
 */
@Embeddable
public class ScenarioExceptionsPK extends BaseEntityPk implements Serializable {

  // default serial version id, required for serializable classes.
  private static final long serialVersionUID = 1L;

  @Column(
      name = "CMR_ISSUING_CNTRY")
  private String cmrIssuingCntry;

  @Column(
      name = "CUST_TYP")
  private String custTyp;

  @Column(
      name = "CUST_SUB_TYP")
  private String custSubTyp;

  @Column(
      name = "SUBREGION_CD")
  private String subregionCd;

  public String getCmrIssuingCntry() {
    return this.cmrIssuingCntry;
  }

  public void setCmrIssuingCntry(String cmrIssuingCntry) {
    this.cmrIssuingCntry = cmrIssuingCntry;
  }

  public String getCustTyp() {
    return this.custTyp;
  }

  public void setCustTyp(String custTyp) {
    this.custTyp = custTyp;
  }

  public String getCustSubTyp() {
    return this.custSubTyp;
  }

  public void setCustSubTyp(String custSubTyp) {
    this.custSubTyp = custSubTyp;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) {
      return true;
    }
    if (!(other instanceof ScenarioExceptionsPK)) {
      return false;
    }
    ScenarioExceptionsPK o = (ScenarioExceptionsPK) other;
    return this.cmrIssuingCntry.equals(o.cmrIssuingCntry) && this.custTyp.equals(o.custTyp) && this.custSubTyp.equals(o.custSubTyp);

  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int hash = 17;
    hash = hash * prime + (this.cmrIssuingCntry != null ? this.cmrIssuingCntry.hashCode() : 0);
    hash = hash * prime + (this.custTyp != null ? this.custTyp.hashCode() : 0);
    hash = hash * prime + (this.custSubTyp != null ? this.custSubTyp.hashCode() : 0);

    return hash;
  }

  @Override
  protected boolean allKeysAssigned() {
    return !StringUtils.isEmpty(this.cmrIssuingCntry) && !StringUtils.isEmpty(this.custTyp) && !StringUtils.isEmpty(this.custSubTyp);

  }

  public String getSubregionCd() {
    return subregionCd;
  }

  public void setSubregionCd(String subregionCd) {
    this.subregionCd = subregionCd;
  }
}