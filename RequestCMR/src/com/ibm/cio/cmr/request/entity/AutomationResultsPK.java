/*
This file was automatically generated by the EntityCreator engine on Tue Aug 27 22:40:22 SGT 2019.
 */
package com.ibm.cio.cmr.request.entity;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * The primary key class for the AUTOMATION_RESULTS database table.
 * 
 * @author JeffZAMORA
 */
@Embeddable
public class AutomationResultsPK extends BaseEntityPk implements Serializable {

  // default serial version id, required for serializable classes.
  private static final long serialVersionUID = 1L;

  /**
   * Automation Result Identifier
   */
  @Column(
      name = "AUTOMATION_RESULT_ID")
  private long automationResultId;

  /**
   * Request Identifier
   */
  @Column(
      name = "REQ_ID")
  private long reqId;

  /**
   * Process Code
   */
  @Column(
      name = "PROCESS_CD")
  private String processCd;

  public long getAutomationResultId() {
    return this.automationResultId;
  }

  public void setAutomationResultId(long automationResultId) {
    this.automationResultId = automationResultId;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) {
      return true;
    }
    if (!(other instanceof AutomationResultsPK)) {
      return false;
    }
    AutomationResultsPK o = (AutomationResultsPK) other;
    return this.automationResultId == o.automationResultId;

  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int hash = 17;
    hash = hash * prime + (this.automationResultId > 0 ? new java.lang.Long(this.automationResultId).hashCode() : 0);
    hash = hash * prime + (this.reqId > 0 ? new java.lang.Long(this.reqId).hashCode() : 0);
    hash = hash * prime + this.processCd.hashCode();

    return hash;
  }

  @Override
  protected boolean allKeysAssigned() {
    return this.automationResultId > 0;

  }

  public long getReqId() {
    return reqId;
  }

  public void setReqId(long reqId) {
    this.reqId = reqId;
  }

  public String getProcessCd() {
    return processCd;
  }

  public void setProcessCd(String processCd) {
    this.processCd = processCd;
  }
}