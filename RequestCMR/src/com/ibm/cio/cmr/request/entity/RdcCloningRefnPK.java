/*
This file was automatically generated by the EntityCreator engine on Mon Jan 18 14:49:01 IST 2021.
*/
package com.ibm.cio.cmr.request.entity;

import java.io.Serializable;
import javax.persistence.*;

import org.apache.commons.lang3.StringUtils;

/**
 * The primary key class for the RDC_CLONING_REFN database table.
 * 
 * @author PriyRanjan
 */
@Embeddable
public class RdcCloningRefnPK extends BaseEntityPk implements Serializable {

  // default serial version id, required for serializable classes.
  private static final long serialVersionUID = 1L;

  @Column(name = "CMR_CLONING_PROCESS_ID")
  private long cmrCloningProcessId;

  /** 
   * SAP Instance
   */ 
  private String mandt;

  /** 
   * SAP Customer Number
   */ 
  private String kunnr;

  public long getCmrCloningProcessId(){
    return this.cmrCloningProcessId;
  }

  public void setCmrCloningProcessId(long cmrCloningProcessId){
    this.cmrCloningProcessId = cmrCloningProcessId;
  }


  public String getMandt(){
    return this.mandt;
  }

  public void setMandt(String mandt){
    this.mandt = mandt;
  }


  public String getKunnr(){
    return this.kunnr;
  }

  public void setKunnr(String kunnr){
    this.kunnr = kunnr;
  }




  public boolean equals(Object other) {
    if (this == other) {
      return true;
    }
    if (!(other instanceof RdcCloningRefnPK)) {
      return false;
    }
    RdcCloningRefnPK o = (RdcCloningRefnPK) other;
    return this.cmrCloningProcessId == o.cmrCloningProcessId && this.mandt.equals(o.mandt) && this.kunnr.equals(o.kunnr);


  }

  public int hashCode() {
    final int prime = 31;
    int hash = 17;
    hash = hash * prime + (this.cmrCloningProcessId > 0 ? new java.lang.Long(this.cmrCloningProcessId).hashCode() : 0);
    hash = hash * prime + (this.mandt != null ? this.mandt.hashCode() : 0);
    hash = hash * prime + (this.kunnr != null ? this.kunnr.hashCode() : 0);


    return hash;
  }

  @Override
  protected boolean allKeysAssigned() {
    return this.cmrCloningProcessId > 0 && !StringUtils.isEmpty(this.mandt) && !StringUtils.isEmpty(this.kunnr);

  }
}