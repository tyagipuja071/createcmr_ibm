# Query Bundle
# All queries should be added here. For dynamic queries, add here the base SQL

#Login sqls
LOGIN.HAS_PREF=select p.REQUESTER_ID,  p.DFT_ISSUING_CNTRY, d.USER_ID, p.PROC_CENTER_NM, p.REQUESTER_NM,  \
       p.DEFAULT_LINE_OF_BUSN, p.DEFAULT_REQUEST_RSN, p.DEFAULT_REQ_TYPE, \
       p.DEFAULT_NO_OF_RECORDS||'' DEFAULT_NO_OF_RECORDS, c.ISSUING_CNTRY, p.DFT_COUNTY, p.DFT_STATE_PROV \
from CREQCMR.USER_PREF p \
left outer join CREQCMR.DELEGATE d \
  on p.REQUESTER_ID = d.USER_ID \
left outer join CREQCMR.USER_PREF_COUNTRIES c \
  on p.REQUESTER_ID = c.REQUESTER_ID \
where p.REQUESTER_ID = :USER_ID

#Dropdown SQLs
BDS=select * from CREQCMR.BDS_TBL_INFO where FIELD_ID = :FIELD_ID
PROC_CENTER=select distinct PROC_CENTER_NM, PROC_CENTER_NM from CREQCMR.PROC_CENTER
LOV=select trim(lov.CD), case when lov.DISP_TYPE = 'T' then lov.TXT \
        when lov.DISP_TYPE = 'C' then lov.CD \
        when lov.DISP_TYPE = 'B' then case when lov.CD = '' then lov.TXT else lov.CD||'-'||lov.TXT end \
        else lov.TXT end DISPLAY, DEFAULT_IND \
from CREQCMR.LOV lov \
where lov.FIELD_ID = :FIELD_ID \
and ((lov.CMR_ISSUING_CNTRY = :CMR_CNTRY and exists (select 1 from CREQCMR.LOV lov2 where lov2.CMR_ISSUING_CNTRY = :CMR_CNTRY and lov.FIELD_ID = lov2.FIELD_ID)) \
or (lov.CMR_ISSUING_CNTRY = '*' and not exists (select 1 from CREQCMR.LOV lov2 where lov2.CMR_ISSUING_CNTRY = :CMR_CNTRY and lov.FIELD_ID = lov2.FIELD_ID)) \
) 

#Status desc 

status_desc=select * from creqcmr.lov where field_id = '##RequestStatus'  and cd=:CD

#Processing Status desc

procStatus_desc=select * from creqcmr.lov where field_id = '##ProcessingStatus'  and cd=:CD


#Action desc 

action_desc=select * from CREQCMR.STATUS_ACT where action =:ACTION

YOUR_ACTIONS=\
select st.ACTION, sa.ACTION_DESC DESC \
from CREQCMR.STATUS_TRANS st \
left outer join CREQCMR.STATUS_ACT sa   \
   on st.ACTION = sa.ACTION   \
where st.CURR_REQ_STATUS = :REQSTATUS \
and st.CURR_LOCKED_IND = :LOCKIND \
and (st.REQ_TYPE = :REQTYPE or st.REQ_TYPE = '*') \
and (st.SEP_VAL_IND = :SEPVALIND or st.SEP_VAL_IND = '*' ) \
and (st.DISABLE_AUTO_PROC = :DISABLEAUTOPROC or st.DISABLE_AUTO_PROC = '*') \
order by st.DISP_ORDER

YOUR_ACTIONS_UNLOCK=select 'UNL', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'UNL') DESC from SYSIBM.SYSDUMMY1 \
union all \
select 'XIT', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'XIT') DESC from SYSIBM.SYSDUMMY1 

YOUR_ACTIONS_NEW=select 'SAV', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'SAV') DESC from SYSIBM.SYSDUMMY1 \
union all \
select 'XIT', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'XIT') DESC from SYSIBM.SYSDUMMY1  

YOUR_ACTIONS_NONE=select 1 from SYSIBM.SYSDUMMY1 where 1 <> 1


YOUR_ACTIONS_SFP=select 'CLM', ('Edit Request') DESC from SYSIBM.SYSDUMMY1 \
union all \
select 'SFP', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'SFP') DESC from SYSIBM.SYSDUMMY1 \
union all \
select 'CNR', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'CNR') DESC from SYSIBM.SYSDUMMY1 \
union all \
select 'XIT', (select ACTION_DESC from CREQCMR.STATUS_ACT where ACTION = 'XIT') DESC from SYSIBM.SYSDUMMY1

FORCESTATUS=SELECT DISTINCT t.CURR_REQ_STATUS, D.STATUS_DESC \
FROM CREQCMR.STATUS_TRANS T \
LEFT OUTER JOIN CReqCMR.STATUS_DESC  D \
  On T.CURR_REQ_STATUS = D.REQ_STATUS \
ORDER BY T.CURR_REQ_STATUS 

FORCELOCK=SELECT distinct CURR_LOCKED_IND, \
case when CURR_LOCKED_IND = 'Y' then 'Locked' else 'Unlocked' end LOCK \
FROM CReqCMR.STATUS_TRANS \
where CURR_REQ_STATUS = :newReqStatus \
union all \
select 'N', 'Unlocked'\
from SYSIBM.SYSDUMMY1 \
where :newReqStatus in ('CAN', 'AUT', 'RET', 'REP')

#User Preference SQLs
USERPREF.GETRECORD=select * from CREQCMR.USER_PREF where REQUESTER_ID = :REQUESTER_ID
USERPREF.GETDELEGATES=select * from CREQCMR.DELEGATE where USER_ID = :USER_ID order by CREATE_TS asc
USERPREF.GETDELEGATE=select * from CREQCMR.DELEGATE where USER_ID = :USER_ID and DELEGATE_ID = :DELEGATE_ID
#NOTIFY List sqls
NOTIFY.GETRECORDS=select * from CREQCMR.NOTIF_LIST where REQ_ID=:REQ_ID and NOTIF_ID=:NOTIF_ID 
         
#Workflow SQLs
WORKFLOW.GETRECORD=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID
WORKFLOW.OPEN_REQ_LIST=\
select reason.TXT REQ_REASON,  \
     a.*,data.*, stat.STATUS_DESC OVERALL_STATUS,  \
     case when a.REQ_TYPE = 'C' then 'Create'  \
      when a.REQ_TYPE = 'U' then 'Update'  \
      when a.REQ_TYPE = 'M' then 'Mass Update'  \
      when a.REQ_TYPE = 'R' then 'Reactivate'  \
      when a.REQ_TYPE = 'D' then 'Delete'  \
      when a.REQ_TYPE = 'N' then 'Mass Create'  \
      when a.REQ_TYPE = 'E' then 'Update by Enterprise #'  \
      when a.REQ_TYPE = 'X' then 'Single Reactivate'  \
     else a.REQ_TYPE end REQ_TYPE_TEXT,   \
     case when a.LOCK_IND = 'Y' then a.LOCK_BY_NM  \
     else  \
       case when a.LAST_PROC_CENTER_NM = :PROC_CENTER  \
          and a.REQ_STATUS in ('PPN', 'PCP', 'CPN', 'APN', 'AWA') then '[P]'  \
        when (a.REQUESTER_ID  = :REQUESTER_ID)  \
          and a.REQ_STATUS in ('DRA', 'PRJ') then '[R]' \
       else ''  \
       end  \
     end  CLAIM_FIELD ,  \
     lov.txt OWNER_DESC,  \
     bds.SYS_LOC_DESC COUNTRY_DESC, procStatus.txt PROCESSING_STATUS,  \
     claim.CLAIM CAN_CLAIM_ALL, \
     claim.CLAIM CAN_CLAIM, \
     ''  TYPE_DESCRIPTION,  \
     (select case when timestampdiff(16,char(current timestamp - min(ar.LAST_UPDT_TS))) < 1 then 'Y' when min(ar.LAST_UPDT_TS) is not null then 'Y1' else null end from CREQCMR.APPROVAL_REQ ar where ar.REQ_ID = a.REQ_ID and ar.STATUS = 'PAPR') PENDING_APPROVALS,  \
     child.C_REQ_ID,  \
     child.C_REQ_STATUS  \
from CREQCMR.ADMIN a   \
left outer join CREQCMR.DATA data  \
   on a.REQ_ID = data.REQ_ID   \
left outer join CREQCMR.STATUS_DESC stat  \
   on a.REQ_STATUS = stat.REQ_STATUS   \
left outer join CREQCMR.LOV lov  \
   on data.CMR_OWNER = lov.CD  \
   and lov.FIELD_ID = '##CMROwner'  \
   and lov.CMR_ISSUING_CNTRY = '*'  \
left outer join CREQCMR.LOV procStatus  \
   on a.PROCESSED_FLAG = procStatus.CD  \
   and procStatus.FIELD_ID = '##ProcessingStatus'  \
   and procStatus.CMR_ISSUING_CNTRY = '*' \
left outer join CMMA.REFT_SYS_LOC_W bds  \
   on data.CMR_ISSUING_CNTRY = bds.SYS_LOC_CD  \
left outer join CREQCMR.LOV reason  \
   on a.REQ_REASON = reason.CD  \
   and reason.FIELD_ID = '##RequestReason'  \
   and reason.CMR_ISSUING_CNTRY = '*'  \
left outer join (select c.REQ_ID C_REQ_ID, c.REQ_STATUS, cs.STATUS_DESC C_REQ_STATUS  \
         from CREQCMR.ADMIN c, CREQCMR.STATUS_DESC cs  \
         where c.REQ_STATUS = cs.REQ_STATUS) child  \
   on a.CHILD_REQ_ID = child.C_REQ_ID  \
left outer join (select distinct c.REQ_STATUS, c.INTERNAL_TYP,  'Y' CLAIM \
           from CREQCMR.CLAIM_ROLES c, CMMA.USER_ROLES r \
           where c.CLAIM_ROLE_ID = r.ROLE_ID \
           and nvl(c.CLAIM_SUB_ROLE_ID,'') = nvl(r.SUB_ROLE_ID,'') \
           and r.USER_ID = :REQUESTER_ID) claim \
  on a.REQ_STATUS = claim.REQ_STATUS \
  and a.INTERNAL_TYP = claim.INTERNAL_TYP      \
where a.REQ_STATUS not in ('COM','CAN','CLO')  \
and (a.REQUESTER_ID = :REQUESTER_ID  \
   or ( (a.REQ_STATUS = 'PPN' or a.REQ_STATUS = 'AWA') and a.LAST_PROC_CENTER_NM = :PROC_CENTER)  \
   or a.LOCK_BY = :REQUESTER_ID  \
   or ( EXISTS (select 1  \
          from CREQCMR.WF_HIST H, CREQCMR.ADMIN AD  \
          where  H.REQ_ID = AD.REQ_ID  \
          AND a.REQ_ID=AD.REQ_ID  \
          and AD.REQ_STATUS in ('PPN', 'PCP', 'CPN', 'APN', 'AUT') \
          and  (H.SENT_TO_ID = :PROC_CENTER))))  



WORKFLOW.COMPLETED_REQ_LIST=\
select reason.TXT REQ_REASON,a.*,data.*, stat.STATUS_DESC OVERALL_STATUS, case when a.REQ_TYPE = 'C' then 'Create' \
                                                  when a.REQ_TYPE = 'U' then 'Update' \
                                                  when a.REQ_TYPE = 'M' then 'Mass Update' \
                                                  when a.REQ_TYPE = 'R' then 'Reactivate' \
                                                  when a.REQ_TYPE = 'D' then 'Delete' \
                                                  when a.REQ_TYPE = 'N' then 'Mass Create' \
                                                  when a.REQ_TYPE = 'E' then 'Update by Enterprise #' \
                                                  when a.REQ_TYPE = 'X' then 'Single Reactivate' \
                                                  else a.REQ_TYPE end REQ_TYPE_TEXT,  \
       case when a.LOCK_IND = 'Y' then \
           a.LOCK_BY_NM \
       else \
           case when a.LAST_PROC_CENTER_NM = :PROC_CENTER \
                  and a.REQ_STATUS = 'COM' then '[P]' \
           else '' \
           end \
       end  CLAIM_FIELD , \
       lov.txt OWNER_DESC ,bds.SYS_LOC_DESC COUNTRY_DESC,procStatus.txt PROCESSING_STATUS, \
     claim.CLAIM CAN_CLAIM_ALL, \
     claim.CLAIM CAN_CLAIM, \
     ''  TYPE_DESCRIPTION,  \
     '' PENDING_APPROVALS, \
    child.C_REQ_ID, child.C_REQ_STATUS \
from CREQCMR.ADMIN a  \
left outer join CREQCMR.DATA data \
     on a.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join CREQCMR.LOV lov \
     on data.CMR_OWNER = lov.CD \
     and lov.FIELD_ID = '##CMROwner' \
     and lov.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV procStatus \
     on a.PROCESSED_FLAG = procStatus.CD \
     and procStatus.FIELD_ID = '##ProcessingStatus' \
left outer join CMMA.REFT_SYS_LOC_W bds \
     on data.CMR_ISSUING_CNTRY = bds.SYS_LOC_CD \
left outer join (select distinct c.REQ_STATUS, c.INTERNAL_TYP,  'Y' CLAIM \
           from CREQCMR.CLAIM_ROLES c, CMMA.USER_ROLES r \
           where c.CLAIM_ROLE_ID = r.ROLE_ID \
           and nvl(c.CLAIM_SUB_ROLE_ID,'') = nvl(r.SUB_ROLE_ID,'') \
           and r.USER_ID = :REQUESTER_ID) claim \
  on a.REQ_STATUS = claim.REQ_STATUS \
  and a.INTERNAL_TYP = claim.INTERNAL_TYP      \
left outer join CREQCMR.LOV reason \
     on a.REQ_REASON = reason.CD \
     and reason.FIELD_ID = '##RequestReason' \
     and reason.CMR_ISSUING_CNTRY = '*' \
left outer join (select c.REQ_ID C_REQ_ID, c.REQ_STATUS, cs.STATUS_DESC C_REQ_STATUS \
                 from CREQCMR.ADMIN c, CREQCMR.STATUS_DESC cs \
                 where c.REQ_STATUS = cs.REQ_STATUS) child \
     on a.CHILD_REQ_ID = child.C_REQ_ID \
where a.REQ_STATUS  in ('COM') \
and  ( \
  a.REQUESTER_ID = :REQUESTER_ID \
or (\
  EXISTS (select 1 \
          from CREQCMR.WF_HIST H, CREQCMR.ADMIN AD \
          where  H.REQ_ID = AD.REQ_ID \
          AND a.REQ_ID=AD.REQ_ID \
          and AD.REQ_STATUS in ('PCP', 'PVA', 'COM')\
          and H.CREATE_BY_ID = :REQUESTER_ID ) \
         ) \
or (\
   a.LAST_PROC_CENTER_NM = :PROC_CENTER \
         ) \
) 

WORKFLOW.REJECTED_REQ_LIST=\
select HIST_latest.REJ_REASON,reason.TXT REQ_REASON, a.*,data.*, stat.STATUS_DESC OVERALL_STATUS, case when a.REQ_TYPE = 'C' then 'Create' \
                                                  when a.REQ_TYPE = 'U' then 'Update' \
                                                  when a.REQ_TYPE = 'M' then 'Mass Update' \
                                                  when a.REQ_TYPE = 'R' then 'Reactivate' \
                                                  when a.REQ_TYPE = 'D' then 'Delete' \
                                                  when a.REQ_TYPE = 'N' then 'Mass Create' \
                                                  when a.REQ_TYPE = 'E' then 'Update by Enterprise #' \
                                                  when a.REQ_TYPE = 'X' then 'Single Reactivate' \
                                                  else a.REQ_TYPE end REQ_TYPE_TEXT,  \
       case when a.LOCK_IND = 'Y' then \
           a.LOCK_BY_NM \
       else \
           case when a.LAST_PROC_CENTER_NM = :PROC_CENTER \
                   then '[P]' \
                when (a.REQUESTER_ID  = :REQUESTER_ID) \
                   then '[R]'\
           else '' \
           end \
       end  CLAIM_FIELD , \
  lov.txt OWNER_DESC ,bds.SYS_LOC_DESC COUNTRY_DESC,procStatus.txt PROCESSING_STATUS, \
     claim.CLAIM CAN_CLAIM_ALL, \
     claim.CLAIM CAN_CLAIM, \
     ''  TYPE_DESCRIPTION,  \
     '' PENDING_APPROVALS, \
    child.C_REQ_ID, child.C_REQ_STATUS \
from CREQCMR.ADMIN a  \
left outer join CREQCMR.DATA data \
     on a.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join (select * from CREQCMR.WF_HIST wh \
                 where  not exists (select 1 from CREQCMR.WF_HIST wh1 \
                    where wh1.REQ_ID = wh.REQ_ID \
                    and wh1.REQ_STATUS = wh.REQ_STATUS \
                    and wh1.CREATE_TS > wh.CREATE_TS) ) HIST_latest \
on a.REQ_ID = HIST_latest.REQ_ID \
AND a.REQ_STATUS = HIST_latest.REQ_STATUS \
left outer join CREQCMR.LOV lov \
     on data.CMR_OWNER = lov.CD \
     and lov.FIELD_ID = '##CMROwner' \
     and lov.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV procStatus \
     on a.PROCESSED_FLAG = procStatus.CD \
     and procStatus.FIELD_ID = '##ProcessingStatus' \
left outer join CMMA.REFT_SYS_LOC_W bds \
     on data.CMR_ISSUING_CNTRY = bds.SYS_LOC_CD \
left outer join (select distinct c.REQ_STATUS, c.INTERNAL_TYP,  'Y' CLAIM \
           from CREQCMR.CLAIM_ROLES c, CMMA.USER_ROLES r \
           where c.CLAIM_ROLE_ID = r.ROLE_ID \
           and nvl(c.CLAIM_SUB_ROLE_ID,'') = nvl(r.SUB_ROLE_ID,'') \
           and r.USER_ID = :REQUESTER_ID) claim \
  on a.REQ_STATUS = claim.REQ_STATUS \
  and a.INTERNAL_TYP = claim.INTERNAL_TYP      \
left outer join CREQCMR.LOV reason \
     on a.REQ_REASON = reason.CD \
     and reason.FIELD_ID = '##RequestReason' \
     and reason.CMR_ISSUING_CNTRY = '*' \
left outer join (select c.REQ_ID C_REQ_ID, c.REQ_STATUS, cs.STATUS_DESC C_REQ_STATUS \
                 from CREQCMR.ADMIN c, CREQCMR.STATUS_DESC cs \
                 where c.REQ_STATUS = cs.REQ_STATUS) child \
     on a.CHILD_REQ_ID = child.C_REQ_ID \
where a.REQ_STATUS  = 'PRJ' and  \
( \
  a.REQUESTER_ID = :REQUESTER_ID \
or (\
  EXISTS (select 1 \
          from CREQCMR.WF_HIST H, CREQCMR.ADMIN AD \
          where  H.REQ_ID = AD.REQ_ID \
          AND a.REQ_ID=AD.REQ_ID \
          and AD.REQ_STATUS in ('PCP', 'PVA', 'COM')\
          and H.CREATE_BY_ID = :REQUESTER_ID ) \
         ) \
  or a.LAST_PROC_CENTER_NM = :PROC_CENTER  \
)       
    
WORKFLOW.ALL_REQ_LIST=\
select reason.TXT REQ_REASON,a.*,data.*, stat.STATUS_DESC OVERALL_STATUS, case when a.REQ_TYPE = 'C' then 'Create' \
                                                  when a.REQ_TYPE = 'U' then 'Update' \
                                                  when a.REQ_TYPE = 'M' then 'Mass Update' \
                                                  when a.REQ_TYPE = 'R' then 'Reactivate' \
                                                  when a.REQ_TYPE = 'D' then 'Delete' \
                                                  when a.REQ_TYPE = 'N' then 'Mass Create' \
                                                  when a.REQ_TYPE = 'E' then 'Update by Enterprise #' \
                                                  when a.REQ_TYPE = 'X' then 'Single Reactivate' \
                                                  else a.REQ_TYPE end REQ_TYPE_TEXT,  \
       case when a.LOCK_IND = 'Y' then \
           a.LOCK_BY_NM \
       else \
           case when a.LAST_PROC_CENTER_NM = :PROC_CENTER \
                  and a.REQ_STATUS in ('PPN', 'PCP', 'CPN', 'COM', 'APN', 'AWA') then '[P]' \
                when (a.REQUESTER_ID  = :REQUESTER_ID) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then '[R]'\
           else '' \
           end \
       end  CLAIM_FIELD ,\
       lov.txt OWNER_DESC ,bds.SYS_LOC_DESC COUNTRY_DESC,procStatus.txt PROCESSING_STATUS, \
     claim.CLAIM CAN_CLAIM_ALL, \
     claim.CLAIM CAN_CLAIM, \
     ''  TYPE_DESCRIPTION,  \
    (select case when timestampdiff(16,char(current timestamp - min(ar.LAST_UPDT_TS))) < 1 then 'Y' when min(ar.LAST_UPDT_TS) is not null then 'Y1' else null end from CREQCMR.APPROVAL_REQ ar where ar.REQ_ID = a.REQ_ID and ar.STATUS = 'PAPR') PENDING_APPROVALS, \
    child.C_REQ_ID, child.C_REQ_STATUS \
from CREQCMR.ADMIN a  \
left outer join CREQCMR.DATA data \
     on a.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join CREQCMR.LOV lov \
     on data.CMR_OWNER = lov.CD \
     and lov.FIELD_ID = '##CMROwner' \
     and lov.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV procStatus \
     on a.PROCESSED_FLAG = procStatus.CD \
     and procStatus.FIELD_ID = '##ProcessingStatus' \
left outer join CMMA.REFT_SYS_LOC_W bds \
     on data.CMR_ISSUING_CNTRY = bds.SYS_LOC_CD \
left outer join (select distinct c.REQ_STATUS, c.INTERNAL_TYP,  'Y' CLAIM \
           from CREQCMR.CLAIM_ROLES c, CMMA.USER_ROLES r \
           where c.CLAIM_ROLE_ID = r.ROLE_ID \
           and nvl(c.CLAIM_SUB_ROLE_ID,'') = nvl(r.SUB_ROLE_ID,'') \
           and r.USER_ID = :REQUESTER_ID) claim \
  on a.REQ_STATUS = claim.REQ_STATUS \
  and a.INTERNAL_TYP = claim.INTERNAL_TYP      \
left outer join CREQCMR.LOV reason \
     on a.REQ_REASON = reason.CD \
     and reason.FIELD_ID = '##RequestReason' \
     and reason.CMR_ISSUING_CNTRY = '*' \
left outer join (select c.REQ_ID C_REQ_ID, c.REQ_STATUS, cs.STATUS_DESC C_REQ_STATUS \
                 from CREQCMR.ADMIN c, CREQCMR.STATUS_DESC cs \
                 where c.REQ_STATUS = cs.REQ_STATUS) child \
     on a.CHILD_REQ_ID = child.C_REQ_ID \
where (a.REQUESTER_ID = :REQUESTER_ID \
     or a.LOCK_BY = :REQUESTER_ID \
     or ( EXISTS (select 1 \
                  from CREQCMR.WF_HIST H, CREQCMR.ADMIN AD \
                  where  H.REQ_ID = AD.REQ_ID \
                   AND a.REQ_ID=AD.REQ_ID \
                  and  (H.SENT_TO_ID = :PROC_CENTER) \
                  and (nvl(a.LOCK_IND,'') <> 'Y' )))) 
                  
WORKFLOW.SRCH_REQ_LIST_NO_CUST=\
select reason.TXT REQ_REASON, a.*,data.*, stat.STATUS_DESC OVERALL_STATUS, case when a.REQ_TYPE = 'C' then 'Create' \
                                                  when a.REQ_TYPE = 'U' then 'Update' \
                                                  when a.REQ_TYPE = 'M' then 'Mass Update' \
                                                  when a.REQ_TYPE = 'R' then 'Reactivate' \
                                                  when a.REQ_TYPE = 'D' then 'Delete' \
                                                  when a.REQ_TYPE = 'N' then 'Mass Create' \
                                                  when a.REQ_TYPE = 'E' then 'Update by Enterprise #' \
                                                  when a.REQ_TYPE = 'X' then 'Single Reactivate' \
                                                  else a.REQ_TYPE end REQ_TYPE_TEXT,  \
       case when a.LOCK_IND = 'Y' then \
           a.LOCK_BY_NM \
       else \
           case when a.LAST_PROC_CENTER_NM = :PROC_CENTER \
                  and a.REQ_STATUS in ('PPN', 'PCP', 'CPN', 'COM') then '[P]' \
                when (a.REQUESTER_ID  = :REQUESTER_ID or a.ORIGINATOR_ID = :REQUESTER_ID) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then '[R]'\
                when exists (select 1 \
                             from CREQCMR.DELEGATE D \
                             where D.DELEGATE_ID = :REQUESTER_ID \
                             AND ((D.User_ID = a.REQUESTER_ID) \
                             OR (a.LOCK_BY is not null and D.User_ID = a.LOCK_BY) \
                             OR (a.ORIGINATOR_ID is not null and D.User_ID = a.ORIGINATOR_ID))) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then '[R]'\
           else '' \
           end \
       end  CLAIM_FIELD ,\
       lov.txt OWNER_DESC ,bds.SYS_LOC_DESC COUNTRY_DESC,procStatus.txt PROCESSING_STATUS, \
     claim.CLAIM CAN_CLAIM_ALL, \
     claim.CLAIM CAN_CLAIM, \
     ''  TYPE_DESCRIPTION,  \
    (select case when timestampdiff(16,char(current timestamp - min(ar.LAST_UPDT_TS))) < 1 then 'Y' when min(ar.LAST_UPDT_TS) is not null then 'Y1' else null end from CREQCMR.APPROVAL_REQ ar where ar.REQ_ID = a.REQ_ID and ar.STATUS = 'PAPR') PENDING_APPROVALS, \
    child.C_REQ_ID, child.C_REQ_STATUS \
from CREQCMR.ADMIN a  \
left outer join CREQCMR.DATA data \
     on a.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join CREQCMR.LOV lov \
     on data.CMR_OWNER = lov.CD \
     and lov.FIELD_ID = '##CMROwner' \
     and lov.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV procStatus \
     on a.PROCESSED_FLAG = procStatus.CD \
     and procStatus.FIELD_ID = '##ProcessingStatus' \
left outer join CMMA.REFT_SYS_LOC_W bds \
     on data.CMR_ISSUING_CNTRY = bds.SYS_LOC_CD \
left outer join (select distinct c.REQ_STATUS, c.INTERNAL_TYP,  'Y' CLAIM \
           from CREQCMR.CLAIM_ROLES c, CMMA.USER_ROLES r \
           where c.CLAIM_ROLE_ID = r.ROLE_ID \
           and nvl(c.CLAIM_SUB_ROLE_ID,'') = nvl(r.SUB_ROLE_ID,'') \
           and r.USER_ID = :REQUESTER_ID) claim \
  on a.REQ_STATUS = claim.REQ_STATUS \
  and a.INTERNAL_TYP = claim.INTERNAL_TYP      \
left outer join CREQCMR.LOV reason \
     on a.REQ_REASON = reason.CD \
     and reason.FIELD_ID = '##RequestReason' \
     and reason.CMR_ISSUING_CNTRY = '*' \
left outer join (select c.REQ_ID C_REQ_ID, c.REQ_STATUS, cs.STATUS_DESC C_REQ_STATUS \
                 from CREQCMR.ADMIN c, CREQCMR.STATUS_DESC cs \
                 where c.REQ_STATUS = cs.REQ_STATUS) child \
     on a.CHILD_REQ_ID = child.C_REQ_ID \
where 1 = 1
 
WORKFLOW.SRCH_REQ_LIST=select reason.TXT REQ_REASON,a.*,data.*,d.*, stat.STATUS_DESC OVERALL_STATUS, case when a.REQ_TYPE = 'C' then 'Create' \
                                                  when a.REQ_TYPE = 'U' then 'Update' \
                                                  when a.REQ_TYPE = 'M' then 'Mass Update' \
                                                  when a.REQ_TYPE = 'R' then 'Reactivate' \
                                                  when a.REQ_TYPE = 'D' then 'Delete' \
                                                  when a.REQ_TYPE = 'N' then 'Mass Create' \
                                                  when a.REQ_TYPE = 'E' then 'Update by Enterprise #' \
                                                  when a.REQ_TYPE = 'X' then 'Single Reactivate' \
                                                  else a.REQ_TYPE end REQ_TYPE_TEXT,  \
       case when a.LOCK_IND = 'Y' then \
           a.LOCK_BY_NM \
       else \
           case when a.LAST_PROC_CENTER_NM = :PROC_CENTER \
                  and a.REQ_STATUS in ('PPN', 'PCP', 'CPN', 'COM') then '[P]' \
                when (a.REQUESTER_ID  = :REQUESTER_ID or a.ORIGINATOR_ID = :REQUESTER_ID) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then '[R]'\
                when exists (select 1 \
                             from CREQCMR.DELEGATE D \
                             where D.DELEGATE_ID = :REQUESTER_ID \
                             AND ((D.User_ID = a.REQUESTER_ID) \
                             OR (a.LOCK_BY is not null and D.User_ID = a.LOCK_BY) \
                             OR (a.ORIGINATOR_ID is not null and D.User_ID = a.ORIGINATOR_ID))) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then '[R]'\
           else '' \
           end \
       end  CLAIM_FIELD , \
    lov.txt OWNER_DESC ,bds.SYS_LOC_DESC COUNTRY_DESC,procStatus.txt PROCESSING_STATUS, \
    (select 'Y' \
    from CREQCMR.CLAIM_ROLES \
    where INTERNAL_TYP = a.INTERNAL_TYP \
    and REQ_STATUS = a.REQ_STATUS \
    and CMR_ISSUING_CNTRY = data.CMR_ISSUING_CNTRY \
    and (a.LOCK_IND is null or a.LOCK_IND <> 'Y') \
    and CLAIM_ROLE_ID||(case when CLAIM_SUB_ROLE_ID is null or CLAIM_SUB_ROLE_ID = '' then '' else CLAIM_SUB_ROLE_ID end) in  \
      (select ROLE_ID||(case when SUB_ROLE_ID is null or SUB_ROLE_ID = '' then '' else SUB_ROLE_ID end) \
       from CMMA.USER_ROLES  \
       where USER_ID = :REQUESTER_ID)) CAN_CLAIM, \
    (select 'Y'  \
    from CREQCMR.CLAIM_ROLES \
    where INTERNAL_TYP = a.INTERNAL_TYP \
    and REQ_STATUS = a.REQ_STATUS \
    and CMR_ISSUING_CNTRY = '*' \
    and (a.LOCK_IND is null or a.LOCK_IND <> 'Y') \
    and CLAIM_ROLE_ID||(case when CLAIM_SUB_ROLE_ID is null or CLAIM_SUB_ROLE_ID = '' then '' else CLAIM_SUB_ROLE_ID end) in  \
      (select ROLE_ID||(case when SUB_ROLE_ID is null or SUB_ROLE_ID = '' then '' else SUB_ROLE_ID end) \
       from CMMA.USER_ROLES  \
       where USER_ID = :REQUESTER_ID)) CAN_CLAIM_ALL, \
    case when it.INTERNAL_TYP_DESC is not null then it.INTERNAL_TYP_DESC \
         when itww.INTERNAL_TYP_DESC is not null then itww.INTERNAL_TYP_DESC \
         when itall.INTERNAL_TYP_DESC is not null then itall.INTERNAL_TYP_DESC \
    end TYPE_DESCRIPTION, \
    (select case when timestampdiff(16,char(current timestamp - min(ar.LAST_UPDT_TS))) < 1 then 'Y' when min(ar.LAST_UPDT_TS) is not null then 'Y1' else null end from CREQCMR.APPROVAL_REQ ar where ar.REQ_ID = a.REQ_ID and ar.STATUS = 'PAPR') PENDING_APPROVALS \
from CREQCMR.ADMIN a  \
left outer join CREQCMR.DATA data \
     on a.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.ADDR d \
     on a.REQ_ID = d.REQ_ID \
     and d.ADDR_TYPE = 'ZS01' \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join CREQCMR.LOV lov \
     on data.CMR_OWNER = lov.CD \
     and lov.FIELD_ID = '##CMROwner' \
     and lov.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV procStatus \
     on a.PROCESSED_FLAG = procStatus.CD \
     and procStatus.FIELD_ID = '##ProcessingStatus' \
left outer join CMMA.REFT_SYS_LOC_W bds \
     on data.CMR_ISSUING_CNTRY = bds.SYS_LOC_CD \
left outer join CREQCMR.CMR_INTERNAL_TYPES it \
     on a.INTERNAL_TYP = it.INTERNAL_TYP \
     and a.REQ_TYPE = it.REQ_TYP \
     and data.CMR_ISSUING_CNTRY = it.CMR_ISSUING_CNTRY \
left outer join CREQCMR.CMR_INTERNAL_TYPES itww \
     on a.INTERNAL_TYP = itww.INTERNAL_TYP \
     and a.REQ_TYPE = itww.REQ_TYP \
     and itww.CMR_ISSUING_CNTRY = 'WW' \
left outer join CREQCMR.CMR_INTERNAL_TYPES itall \
     on a.INTERNAL_TYP = itall.INTERNAL_TYP \
     and a.REQ_TYPE = itall.REQ_TYP \
     and itall.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV reason \
     on a.REQ_REASON = reason.CD \
     and reason.FIELD_ID = '##RequestReason' \
     and reason.CMR_ISSUING_CNTRY = '*' \
where  not exists (select 1 from CREQCMR.ADDR x where x.REQ_ID = d.REQ_ID and x.ADDR_TYPE = d.ADDR_TYPE and x.ADDR_SEQ < d.ADDR_SEQ)
WORKFLOW.CLAUSE_USERID=and (a.REQUESTER_ID = :USERID or a.requester_id in (select del.user_id from creqcmr.delegate del where del.delegate_id = :USERID ) )
WORKFLOW.CLAUSE_REQUESTERID=and a.REQUESTER_ID = :WF_REQUESTER_ID 
WORKFLOW.CLAUSE_ORGID=and a.ORIGINATOR_ID = :WF_ORG_ID 
WORKFLOW.CLAUSE_CLAIMBYID=and a.LOCK_BY = :WFCLM_BY_ID 
WORKFLOW.CLAUSE_PROC_CNTR=and ( (EXISTS (select 1 \
                                        from CREQCMR.ADMIN AD, CREQCMR.WF_HIST H \
                                        where  AD.REQ_ID = H.req_id \
                                        and a.REQ_ID = ad.REQ_ID \
                                        and ((H.REQ_STATUS = 'PPN' and H.SENT_TO_ID = :PROCESSING_CENTRE) \
                                              or (H.REQ_STATUS <> 'PPN' and H.CREATE_BY_ID in (select up.REQUESTER_ID from CREQCMR.USER_PREF up where up.PROC_CENTER_NM = :PROCESSING_CENTRE)   )) )) \
                               or a.LAST_PROC_CENTER_NM = :PROCESSING_CENTRE )                                               
                 
WORKFLOW.CLAUSE_CUSNAME=and UPPER(a.MAIN_CUST_NM1||' '||a.MAIN_CUST_NM2) like :CUSTOMER_NAME 
WORKFLOW.CLAUSE_REQID=and a.REQ_ID = :REQUEST_ID 
WORKFLOW.CLAUSE_REQSTAT_OPA=and a.REQ_STATUS in ('DRA', 'PPN', 'PVA', 'PCP', 'PCR', 'PRJ', 'PCO', 'CPN')
WORKFLOW.CLAUSE_REQSTAT_OPP=and a.REQ_STATUS in ('PPN', 'PVA', 'PCP', 'PCR', 'PCO', 'CPN') 
WORKFLOW.CLAUSE_REQSTAT=and a.REQ_STATUS = :REQUEST_STATUS 
WORKFLOW.CLAUSE_EXP=and a.EXPEDITE_IND = :EXPEDITE_CHKVALUE 
WORKFLOW.CLAUSE_CRT_FRM=and a.CREATE_TS >= :CREATE_FROM  
WORKFLOW.CLAUSE_CRT_TO=and a.CREATE_TS <= :CREATE_TO 
WORKFLOW.CLAUSE_LSTUPD_FRM=and a.LAST_UPDT_TS >= :LASTUPDT_FROM 
WORKFLOW.CLAUSE_LSTUPD_TO=and a.LAST_UPDT_TS <= :LASTUPDT_TO 
WORKFLOW.CLAUSE_CMRISSU_CNTRY=and data.CMR_ISSUING_CNTRY = :CMR_ISSU_CNTRY 
WORKFLOW.CLAUSE_CMR_OWNER=and data.CMR_OWNER = :CMR_OWNER
WORKFLOW.CLAUSE_CMR_NO=\
and (data.CMR_NO = :CMR_NO \
     or exists (select 1 \
                from CREQCMR.MASS_UPDT m \
                where m.PAR_REQ_ID = a.REQ_ID \
                and m.CMR_NO = :CMR_NO) \
     or exists (select 1 \
                from CREQCMR.MASS_CREATE m \
                where m.PAR_REQ_ID = a.REQ_ID \
                and m.CMR_NO = :CMR_NO) ) 
WORKFLOW.CLAUSE_REQ_TYPE=and a.REQ_TYPE = :REQUEST_TYPE
WORKFLOW.CLAUSE_PROC_STATUS=and a.PROCESSED_FLAG = :PROCESSED_FLAG
WORKFLOW.CLAUSE_PROCESSED_BY=and exists (select 1 \
                                         from CREQCMR.WF_HIST wf \
                                         where a.REQ_ID = wf.REQ_ID \
                                         and wf.REQ_STATUS in ('PVA') \
                                         and wf.CREATE_BY_ID = :PROCESSED_BY \
                                         and not exists (select 1 \
                                                         from CREQCMR.WF_HIST wf1 \
                                                         where wf.REQ_ID = wf1.REQ_ID \
                                                         and wf.WF_ID < wf1.WF_ID  \
                                                         and wf1.REQ_STATUS = 'PVA'))
WORKFLOW.CLAUSE_PENDING_APPR=and exists (select 1 \
                                         from CREQCMR.APPROVAL_REQ ar \
                                         where a.REQ_ID = ar.REQ_ID \
                                         and ar.STATUS = 'PAPR') 

WORKFLOW.CLAUSE_PAYGO=and a.PAYGO_PROCESS_INDC = 'Y'
WORKFLOW.CLAUSE_POOL=and a.POOL_CMR_INDC = 'Y'
WORKFLOW.CLAUSE_SOURCE=and upper(a.SOURCE_SYST_ID) = :SOURCE

WORK_FLOW.HISTORY=\
select wf.*, lov.TXT OVERALL_STATUS \
from CREQCMR.WF_HIST wf \
left outer join CREQCMR.LOV lov \
     on wf.REQ_STATUS = lov.CD \
     and '##RequestStatus' = lov.FIELD_ID \
where REQ_ID = :REQ_ID order by create_ts asc

WORK_FLOW.COMPLETE_LAST=update CREQCMR.WF_HIST set COMPLETE_TS = current timestamp where WF_ID = (select max(WF_ID) from CREQCMR.WF_HIST where REQ_ID = :REQ_ID)

#RequestEntry SQLs
REQUESTENTRY.MAIN=\
select a.*, d.*, c.*, stat.STATUS_DESC OVERALL_STATUS, \
       case when a.LOCK_IND = 'Y' then \
              case when a.LOCK_BY = :REQUESTER_ID then '' \
              when exists (select 1 \
                             from CREQCMR.DELEGATE D \
                             where D.DELEGATE_ID = :REQUESTER_ID \
                             AND (D.User_ID = a.LOCK_BY)) \
                    then 'L' \
                    when a.ORIGINATOR_ID = :REQUESTER_ID \
                         or exists (select 1 \
                             from CREQCMR.DELEGATE D \
                             where D.DELEGATE_ID = :REQUESTER_ID \
                             AND (D.User_ID = a.ORIGINATOR_ID)) \
                    then 'O' \
              else \
                   '' \
              end \
       else \
           case when a.LAST_PROC_CENTER_NM = :PROC_CENTER \
                  and a.REQ_STATUS in ('PPN', 'PCP', 'CPN', 'COM', 'APN', 'AWA') then 'P' \
                when (a.REQUESTER_ID  = :REQUESTER_ID or a.ORIGINATOR_ID = :REQUESTER_ID) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then 'R'\
                when exists (select 1 \
                             from CREQCMR.DELEGATE D \
                             where D.DELEGATE_ID = :REQUESTER_ID \
                             AND ((D.User_ID = a.REQUESTER_ID) \
                             OR (D.User_ID = a.LOCK_BY) \
                             OR (D.User_ID = a.ORIGINATOR_ID))) \
                  and a.REQ_STATUS in ('DRA', 'PRJ') then 'D'\
           else '' \
           end \
       end  CLAIM_ROLE, \
       '' SUB_INDUSTRY_DESC, '' ISIC_DESC,procStatus.txt PROCESSING_STATUS, \
    (select 'Y' \
    from CREQCMR.CLAIM_ROLES \
    where INTERNAL_TYP = a.INTERNAL_TYP \
    and REQ_STATUS = a.REQ_STATUS \
    and CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY \
    and (a.LOCK_IND is null or a.LOCK_IND <> 'Y') \
    and CLAIM_ROLE_ID||(case when CLAIM_SUB_ROLE_ID is null or CLAIM_SUB_ROLE_ID = '' then '' else CLAIM_SUB_ROLE_ID end) in  \
      (select ROLE_ID||(case when SUB_ROLE_ID is null or SUB_ROLE_ID = '' then '' else SUB_ROLE_ID end) \
       from CMMA.USER_ROLES  \
       where USER_ID = :REQUESTER_ID)) CAN_CLAIM, \
    (select 'Y'  \
    from CREQCMR.CLAIM_ROLES \
    where INTERNAL_TYP = a.INTERNAL_TYP \
    and REQ_STATUS = a.REQ_STATUS \
    and CMR_ISSUING_CNTRY = '*' \
    and (a.LOCK_IND is null or a.LOCK_IND <> 'Y') \
    and CLAIM_ROLE_ID||(case when CLAIM_SUB_ROLE_ID is null or CLAIM_SUB_ROLE_ID = '' then '' else CLAIM_SUB_ROLE_ID end) in  \
      (select ROLE_ID||(case when SUB_ROLE_ID is null or SUB_ROLE_ID = '' then '' else SUB_ROLE_ID end) \
       from CMMA.USER_ROLES  \
       where USER_ID = :REQUESTER_ID)) CAN_CLAIM_ALL, \
    (select AUTO_PROC_ENABLED from CREQCMR.SUPP_CNTRY where CNTRY_CD = d.CMR_ISSUING_CNTRY) AUTO_PROCESSING \
from CREQCMR.ADMIN a \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join CREQCMR.DATA d \
    on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.LOV procStatus \
     on a.PROCESSED_FLAG = procStatus.CD \
     and procStatus.FIELD_ID = '##ProcessingStatus' \
left outer join CREQCMR.SCORECARD c \
    on a.REQ_ID = c.REQ_ID \
where a.REQ_ID = :REQ_ID

REQUESTENTRY.ADDR.SEARCH_BY_REQID=\
select a.*, case when lov.TXT is not null then lov.TXT \
                 when lov_all.TXT is not null then lov_all.TXT \
                 else a.ADDR_TYPE end ADDR_TYPE_TEXT,  \
                 a.RDC_CREATE_DT ADDR_CREATE_DATE,  \
                 a.RDC_LAST_UPDT_DT ADDR_LAST_UPD_DATE,  \
            case when a.ADDR_STD_ACCEPT_IND = 'Y' then 'Accepted'  \
                 when a.ADDR_STD_ACCEPT_IND = 'N' then 'Rejected'  \
                 when a.ADDR_STD_RESULT is null or trim(a.ADDR_STD_RESULT) = '' then 'Not Done'  \
                 else tgme.STATUS end ADDR_RESULT_TEXT, \
            aRdc.ADDR_TXT OLD_ADDR_TXT, aRdc.ADDR_TXT_2 OLD_ADDR_TXT_2,  \
            country.COUNTRY_DESC, state.STATE_PROV_DESC  \
from CREQCMR.ADDR a \
left outer join CREQCMR.DATA d \
   on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.TGME_CODES tgme  \
   on a.ADDR_STD_RESULT = tgme.CD  \
left outer join CREQCMR.LOV lov \
  on a.ADDR_TYPE = lov.CD \
  and lov.FIELD_ID = '##AddressType' \
  and lov.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY    \
left outer join CREQCMR.LOV lov_all \
  on a.ADDR_TYPE = lov_all.CD \
  and lov_all.FIELD_ID = '##AddressType' \
  and lov_all.CMR_ISSUING_CNTRY = '*'    \
left outer join creqcmr.ADDR_RDC aRdc \
  on aRdc.req_id = a.req_id \
  and aRdc.addr_type = a.addr_type \
  and aRdc.addr_seq = a.addr_seq \
left outer join CMMA.REFT_COUNTRY_W country \
  on a.LAND_CNTRY = country.COUNTRY_CD \
left outer join CMMA.REFT_STATE_PROV_W state \
  on a.STATE_PROV = state.STATE_PROV_CD \
  and country.REFT_COUNTRY_KEY = state.REFT_COUNTRY_KEY \
where a.REQ_ID =  :REQ_ID \
ORDER BY case \
           when lov.DISP_ORDER is not null then lov.DISP_ORDER \
           when lov_all.DISP_ORDER is not null then lov_all.DISP_ORDER \
         else \
           20 end, a.ADDR_SEQ  
           
REQUESTENTRY.ADDR.SEARCH_BY_REQID_IT=\
select a.*, case when lov.TXT is not null then lov.TXT \
                 when lov_all.TXT is not null then lov_all.TXT \
                 else a.ADDR_TYPE end ADDR_TYPE_TEXT,  \
                 a.RDC_CREATE_DT ADDR_CREATE_DATE,  \
                 a.RDC_LAST_UPDT_DT ADDR_LAST_UPD_DATE,  \
            case when a.ADDR_STD_ACCEPT_IND = 'Y' then 'Accepted'  \
                 when a.ADDR_STD_ACCEPT_IND = 'N' then 'Rejected'  \
                 when a.ADDR_STD_RESULT is null or trim(a.ADDR_STD_RESULT) = '' then 'Not Done'  \
                 else tgme.STATUS end ADDR_RESULT_TEXT, \
            aRdc.ADDR_TXT OLD_ADDR_TXT, aRdc.ADDR_TXT_2 OLD_ADDR_TXT_2,  \
            country.COUNTRY_DESC, state.STATE_PROV_DESC  \
from CREQCMR.ADDR a \
left outer join CREQCMR.DATA d \
   on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.TGME_CODES tgme  \
   on a.ADDR_STD_RESULT = tgme.CD  \
left outer join CREQCMR.LOV lov \
  on a.ADDR_TYPE = lov.CD \
  and lov.FIELD_ID = '##AddressType' \
  and lov.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY    \
left outer join CREQCMR.LOV lov_all \
  on a.ADDR_TYPE = lov_all.CD \
  and lov_all.FIELD_ID = '##AddressType' \
  and lov_all.CMR_ISSUING_CNTRY = '*'    \
left outer join creqcmr.ADDR_RDC aRdc \
  on aRdc.req_id = a.req_id \
  and aRdc.addr_type = a.addr_type \
  and aRdc.addr_seq = a.addr_seq \
left outer join CMMA.REFT_COUNTRY_W country \
  on a.LAND_CNTRY = country.COUNTRY_CD \
left outer join CMMA.REFT_STATE_PROV_W state \
  on a.STATE_PROV = state.STATE_PROV_CD \
  and state.COMMENTS <> 'Italy CB' \
  and a.LAND_CNTRY = 'IT' \
  and country.REFT_COUNTRY_KEY = state.REFT_COUNTRY_KEY \
where a.REQ_ID =  :REQ_ID \
ORDER BY case \
           when lov.DISP_ORDER is not null then lov.DISP_ORDER \
           when lov_all.DISP_ORDER is not null then lov_all.DISP_ORDER \
         else \
           20 end, a.ADDR_SEQ        

REQUESTENTRY.ADDRRDC.SEARCH_BY_REQID=select * from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID

REQUESTENTRY.ADDRRDC.SEARCH_BY_REQID_TYPE_SEQ=select * from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ

REQUESTENTRY.REQ_CMT_LOG.SEARCH_BY_REQID=select * from CREQCMR.REQ_CMT_LOG where REQ_ID = :REQ_ID  order by CREATE_TS DESC
REQUESTENTRY.ADMIN.SEARCH_BY_REQID=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID 
REQUESTENTRY.DATA.SEARCH_BY_REQID=select * from CREQCMR.DATA where REQ_ID = :REQ_ID 
REQUESTENTRY.SCORECARD.SEARCH_BY_REQID=select * from CREQCMR.SCORECARD where REQ_ID = :REQ_ID
REQUESTENTRY.ATTACHMENT.GETRECORD=Select * from CREQCMR.ATTACHMENT where REQ_ID = :REQ_ID and DOC_LINK = :LINK
REQUESTENTRY.ATTACHMENT.SEARCH_BY_REQID=\
select a.REQ_ID, a.DOC_LINK, l.TXT DOC_CONTENT, a.DOC_ATTACH_BY_ID, a.DOC_ATTACH_BY_NM, a.ATTACH_TS, a.CMT \
from CREQCMR.ATTACHMENT a \
left outer join CREQCMR.LOV l \
on a.DOC_CONTENT = l.CD \
and l.FIELD_ID = '##DocContent' \
where  a.REQ_ID = :REQ_ID
RECORD.GETATTACHMENT=\
select a.REQ_ID, a.DOC_LINK, l.TXT DOC_CONTENT, a.DOC_ATTACH_BY_ID, a.DOC_ATTACH_BY_NM, a.ATTACH_TS, a.CMT \
from CREQCMR.ATTACHMENT a \
left outer join CREQCMR.LOV l \
on a.DOC_CONTENT = l.CD \
and l.FIELD_ID = '##DocContent' \
where a.REQ_ID = :REQ_ID \
and a.DOC_LINK = :LINK
REQUESTENTRY.NOTIFLIST.SEARCH=\
select nl.*, case when up.RECEIVE_MAIL_IND = 'Y' then '' else 'No emails' end RECEIVE_MAIL_IND, \
             case when nl.NOTIF_ID = :REQUESTER_ID then 'N' else 'Y' end REMOVABLE \
from CREQCMR.NOTIF_LIST nl \
left outer join CREQCMR.USER_PREF up \
   on nl.NOTIF_ID = up.REQUESTER_ID \
where nl.REQ_ID = :REQ_ID
REQUESTENTRY.GETNEXTSTATUS=select * from CREQCMR.STATUS_TRANS where CURR_REQ_STATUS = :CURR_REQ_STATUS and CURR_LOCKED_IND = :CURR_LOCKED_IND \
and ACTION = :ACTION
REQUESTENTRY.GETNOTIFLIST=\
select nl.NOTIF_ID, (select STATUS_DESC from CREQCMR.STATUS_DESC where REQ_STATUS=:REQ_STATUS) STATUS \
from CREQCMR.NOTIF_LIST nl \
left outer join CREQCMR.USER_PREF pref \
    on nl.NOTIF_ID = pref.REQUESTER_ID \
where nl.REQ_ID = :REQ_ID  \
and nl.NOTIF_ID <> :USER_ID  \
and nvl(pref.RECEIVE_MAIL_IND,'Y') = 'Y'

REQUESTENTRY.IERP.GETNOTIFLIST=\
select nl.NOTIF_ID, (select STATUS_DESC from CREQCMR.STATUS_DESC where REQ_STATUS=:REQ_STATUS) STATUS \
from CREQCMR.NOTIF_LIST nl \
left outer join CREQCMR.USER_PREF pref \
    on nl.NOTIF_ID = pref.REQUESTER_ID \
where nl.REQ_ID = :REQ_ID  \
and nvl(pref.RECEIVE_MAIL_IND,'Y') = 'Y'

REQUESTENTRY.GETCMRANDSITEID=select * from CREQCMR.DATA where REQ_ID = :REQ_ID
REQUESTENTRY.GETPROCESSINGCENTER=select * from CREQCMR.PROC_CENTER where CMR_ISSUING_CNTRY = :CNTRY
REQUESTENTRY.CHECKNOTIFLIST=select 1 from CREQCMR.NOTIF_LIST where REQ_ID = :REQ_ID and NOTIF_ID = :USER_ID
REQUESTENTRY.GETREJECTREASON=select TXT,CD from CREQCMR.LOV where FIELD_ID = '##RejectReasonProc' and CD = :CD
# Addr std results
REQUESTENTRY.GETADDRSTDRESULT=\
select case when a.ADDR_STD_ACCEPT_IND = 'Y' then  'Y' \
            when a.ADDR_STD_ACCEPT_IND = 'N' then 'X' \
            when a.ADDR_STD_RESULT is null or trim(a.ADDR_STD_RESULT) = '' then 'N' \
      when tgme.STATUS = 'Address is correct' then 'Y' \
      when tgme.STATUS = 'Not Required' then 'Y' \
      when tgme.STATUS = 'Not Done' then 'N' \
      else 'X' end \
from CREQCMR.ADDR A  \
left outer join CREQCMR.TGME_CODES tgme \
  on a.ADDR_STD_RESULT = tgme.CD \
where A.REQ_ID = :REQ_ID
FIELDINFO.INIT=select inf.*, lbl.LBL LBL_CNTRY \
from CREQCMR.FIELD_INFO inf \
left outer join CREQCMR.FIELD_LBL lbl \
    on inf.FIELD_ID = lbl.FIELD_ID \
    and inf.CMR_ISSUING_CNTRY = lbl.CMR_ISSUING_CNTRY \
order by inf.FIELD_ID asc, case when inf.CMR_ISSUING_CNTRY = '*' then 0 else 1 end
FIELDINFO.INITLBL=select * \
from CREQCMR.FIELD_LBL l \
where not exists (select 1 from CREQCMR.FIELD_INFO i \
                  where i.FIELD_ID = l.FIELD_ID \
                  and i.CMR_ISSUING_CNTRY = l.CMR_ISSUING_CNTRY)
FIELDINFO.GETCHOICES=select CD,TXT, case when CMR_ISSUING_CNTRY = '*' then 'all' else CMR_ISSUING_CNTRY end CNTRY \
from CREQCMR.LOV \
where FIELD_ID = :FIELD \
order by case when CMR_ISSUING_CNTRY = '*' then 0 else CMR_ISSUING_CNTRY end,DISP_ORDER

AUTOPROCCNTRY.GET=\
select CNTRY_CD||'-'||SUPP_REQ_TYPE||(case when nvl(PROCESSING_TYP, '') <> '' then '-'||PROCESSING_TYP else '' end) \
from CREQCMR.SUPP_CNTRY \
where AUTO_PROC_ENABLED = 'Y'

GEOS.INIT=select g.GEO_CD, g.CMR_ISSUING_CNTRY, s.DEFAULT_LANDED_CNTRY \
from CREQCMR.CNTRY_GEO_DEF g \
left outer join CREQCMR.SUPP_CNTRY s \
  on g.CMR_ISSUING_CNTRY = s.CNTRY_CD \
order by g.GEO_CD, g.CMR_ISSUING_CNTRY 


CROSSB.INIT=Select DISTINCT LOC_CD , case when CUST_TYP='CROSS' then 'Y' else 'N' end ISCROSSB from CREQCMR.CUST_SCENARIOS WITH UR
REQUESTENTRY.DELETE_ADDRESS=delete from CREQCMR.ADDR where REQ_ID = :REQ_ID
REQUESTENTRY.DELETE_ADDRESS_RDC=delete from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID
REQUESTENTRY.DELETE_ADDRESS_RDC_SINGLE=delete from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :TYPE and ADDR_SEQ = :SEQ
REQUESTENTRY.GET_RDC_DATA=\
select  t1.SYS_LOC_DESC||' - '||t1.SYS_LOC_CD CMR_ISSUING_CNTRY, \
  d.ABBREV_NM, d.AFFILIATE, d.BP_REL_TYPE||' - '||t7.BP_REL_TYPE_DESC BP_REL_TYPE, \
        case when d.CAP_IND = 'Y' then 'Yes' else 'No' end CAP_IND, \
  d.CMR_NO, \
        d.COMPANY, d.CUST_PREF_LANG||' - '||t6.LANG_DESC CUST_PREF_LANG, d.ENTERPRISE, d.INAC_CD, \
  case when d.INAC_TYPE = 'I' then 'I - INAC' when d.INAC_TYPE = 'N' then 'N - NAC' else '' end INAC_TYPE, \
  d.MEM_LVL||' - '||t8.BP_MEM_LVL_DESC MEM_LVL, d.PPSCEID, d.REQ_ID, d.SEARCH_TERM, d.SENSITIVE_FLAG, d.SITE_PARTY_ID, \
  d.TAX_CD1, d.TAX_CD2, d.VAT, \
        t2a.INDCL_CD||' - '||t2a.INDCL_DESC SUB_INDUSTRY_CD, t2.REFT_UNSIC_CD||' - '||t2.REFT_UNSIC_DESC ISIC_CD, \
        case when d.CMR_OWNER = 'KAU' then 'Lenovo' \
       when d.CMR_OWNER = 'TRU' then 'Truro' \
             when d.CMR_OWNER = 'FON' then 'Fonseca' \
             else 'IBM' end CMR_OWNER, \
  t3.CMR_CLASS_CD||' - '||t3.CMR_CLASS_DESC CUST_CLASS, \
        t4.ISU_CD||' - '||t4.ISU_DESC ISU_CD, \
  t5.QUAD_CLIENT_CD||' - '||t5.QUAD_CLIENT_DESC CLIENT_TIER, \
  d.COV_ID, d.BG_ID, d.GBG_ID, d.BG_RULE_ID, d.GEO_LOC_CD, d.DUNS_NO, \
  d.MISC_BILL_CD, d.RESTRICT_TO||' - '||cd_res.TXT RESTRICT_TO, d.NON_IBM_COMPANY_IND||' - '||cd_comp.TXT NON_IBM_COMPANY_IND, \
  d.CSO_SITE, \
  d.ICC_TAX_CLASS, d.ICC_TAX_EXEMPT_STATUS, d.SIZE_CD, d.BP_ACCT_TYP, \
  d.BP_NAME||' - '||cd_bp.TXT BP_NAME, d.ORD_BLK, \
  d.MKTG_DEPT, d.MTKG_AR_DEPT, d.PCC_MKTG_DEPT, d.PCC_AR_DEPT, d.SVC_TERRITORY_ZONE, d.SVC_AR_OFFICE, \
  d.COLLECTION_CD, d.SPECIAL_TAX_CD, d.ENGINEERING_BO, d.REP_TEAM_MEMBER_NO, d.SALES_BO_CD, d.ABBREV_LOCN, d.MODE_OF_PAYMENT, d.AP_CUST_CLUSTER_ID, \
  d.INSTALL_BRANCH_OFF, d.ADMIN_DEPT_CD, d.SALES_TEAM_CD, d.CREDIT_CD, d.CUST_INVOICE_COPIES, d.LOCN_NO, \
  d.MEXICO_BILLING_NAME, d.MARKETING_CHNL_INDC_VALUE, d.COLL_BO_ID, d.SALES_BO_CD, d.COLLECTOR_NO, d.MRC_CD, d.REP_TEAM_MEMBER_NO, \
  case when d.MILITARY = 'Y' then 'Yes' else 'No' end MILITARY \
from CREQCMR.DATA_RDC d \
left outer join CMMA.REFT_SYS_LOC_W t1  \
  on d.CMR_ISSUING_CNTRY = t1.SYS_LOC_CD \
left outer join CMMA.REFT_INDCL_W t2a  \
  on d.SUB_INDUSTRY_CD = t2a.INDCL_CD \
left outer join CMMA.REFT_UNSIC_W t2 \
  on t2a.REFT_INDCL_KEY = t2.REFT_INDCL_KEY \
  and d.ISIC_CD = t2.REFT_UNSIC_CD \
  and t2.GEO_CD = case when d.CMR_ISSUING_CNTRY = '897' then 'US' else 'WW' end \
left outer join CMMA.REFT_CMR_CLASS_W t3  \
  on d.CUST_CLASS = t3.CMR_CLASS_CD \
left outer join CMMA.REFT_ISU_W t4 \
  on d.ISU_CD = t4.ISU_CD \
left outer join CMMA.REFT_CLIENT_TIER_W t5 \
  on d.CLIENT_TIER = t5.QUAD_CLIENT_CD \
left outer join CMMA.REFT_LANG_W t6 \
  on d.CUST_PREF_LANG = t6.LANG_CD \
left outer join CMMA.REFT_BP_REL_TYPE t7 \
  on d.BP_REL_TYPE = t7.BP_REL_TYPE_CD \
left outer join CMMA.REFT_BP_MEM_LVL t8 \
  on d.MEM_LVL = t8.BP_MEM_LVL_CD \
left outer join CREQCMR.LOV cd_res \
  on d.RESTRICT_TO = cd_res.CD \
  and cd_res.FIELD_ID = '##RestrictTo' \
left outer join CREQCMR.LOV cd_comp \
  on d.NON_IBM_COMPANY_IND = cd_comp.CD \
  and cd_comp.FIELD_ID = '##NonIBMCompInd' \
left outer join CREQCMR.LOV cd_bp \
  on d.BP_NAME = cd_bp.CD \
  and cd_bp.FIELD_ID = '##BPName' \
where REQ_ID = :REQ_ID 

REQUESTENTRY.GETACTIONDESC=select ACTION_DESC, ACTION from CREQCMR.STATUS_ACT where ACTION = :ACTION
REQUESTENTRY.DNBFILL=\
select 'COUNTRY' FIELD, SYS_LOC_CD VALUE \
from CMMA.REFT_SYS_LOC_W \
where trim(SYS_LOC_DESC) = (select COUNTRY_DESC from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :LAND1)  \
union all \
select 'COUNTY' FIELD, c.COUNTY_CD VALUE \
from CMMA.REFT_COUNTY_CD_W c, CMMA.REFT_STATE_PROV_W s \
where c.REFT_STATE_PROV_KEY = s.REFT_STATE_PROV_KEY \
and s.STATE_PROV_CD = :STATE \
and s.REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :LAND1) \
and upper(c.COUNTY_CD_DESC) like :COUNTY

REQUESTENTRY.DNB.GETSUBIND=select INDCL_CD \
from CMMA.REFT_INDCL_W \
where REFT_INDCL_KEY = (select REFT_INDCL_KEY \
                        from CMMA.REFT_UNSIC_W \
                        where REFT_UNSIC_CD = :ISIC and GEO_CD = 'US')

REQUESTENTRY.CLEARSAPNO=update CREQCMR.ADDR set SAP_NO = null where REQ_ID = :REQ_ID
REQUESTENTRY.CLEARADDRRESULT=update CREQCMR.ADDR set ADDR_STD_RESULT = null, ADDR_STD_TS = null, ADDR_STD_ACCEPT_IND = null,  ADDR_STD_REJ_REASON = null, ADDR_STD_REJ_CMT = null where REQ_ID = :REQ_ID and ADDR_STD_RESULT = 'X' and (IMPORT_IND = 'Y' or IMPORT_IND = 'D')
REQUESTENTRY.CLEARSAPNO_RDC=update CREQCMR.ADDR_RDC set SAP_NO = null where REQ_ID = :REQ_ID
REQUESTENTRY.GETVALIDATIONURLS=\
select v.DISPLAY_SEQ_NO, case when v.CNTRY_CD <> '000' then s.SYS_LOC_DESC else 'Worldwide' end CNTRY_CD, \
       v.DESCR_TXT, v.URL, v.CREATE_TS, v.CREATE_BY, v.UPDT_TS, v.UPDT_BY, v.COMMENTS \
from \
CREQCMR.VALIDATION_URLS v \
left outer join CMMA.REFT_SYS_LOC_W s \
  on v.CNTRY_CD = s.SYS_LOC_CD \
where v.CNTRY_CD = :CNTRY_CD \
 OR v.CNTRY_CD = '000'  \
order by v.CNTRY_CD, v.DISPLAY_SEQ_NO

REQUESTENTRY.SUBIND_SUC_COLL_BO=Select ISSUING_CNTRY, COLL_BO_ID, COLL_BO_DESC from CREQCMR.COLLECTOR_BO
#System Administration queries
SYSTEM.GETREQUEST=\
select a.REQ_ID, stat.STATUS_DESC REQ_STATUS, case when a.LOCK_IND = 'Y' then 'Locked' else 'Unlocked' end LOCK_IND, \
       case when lov.TXT is null then 'Not Processed' else lov.TXT end PROCESSED_FLAG, a.*  \
       from CREQCMR.ADMIN a \
left outer join CREQCMR.STATUS_DESC stat \
     on a.REQ_STATUS = stat.REQ_STATUS  \
left outer join CREQCMR.LOV lov \
     on a.PROCESSED_FLAG = lov.CD \
     and lov.FIELD_ID = '##ProcessingStatus' \
where (a.REQ_ID = :REQ_ID or a.REQ_ID in (:REQLIST))

SYSTEM.GETPROCCENTER=select PROC_CENTER_NM from CREQCMR.PROC_CENTER \
where CMR_ISSUING_CNTRY = (select CMR_ISSUING_CNTRY from CREQCMR.DATA where REQ_ID = :REQ_ID) 

#AJAX Queries
QUERY.TRANSITION=select t.NEW_REQ_STATUS, (select s.STATUS_DESC from CREQCMR.STATUS_DESC s where t.NEW_REQ_STATUS = s.REQ_STATUS) STATUS, \
(select PROC_CENTER_NM from CREQCMR.PROC_CENTER where CMR_ISSUING_CNTRY = :CNTRY) PROC_CENTER \
from CREQCMR.STATUS_TRANS t where t.CURR_REQ_STATUS = :STATUS and t.CURR_LOCKED_IND = :LOCKIND and t.ACTION = :ACTION and (t.REQ_TYPE = '*' or t.REQ_TYPE = :REQTYPE)
QUERY.BPIBMDIRECTCMR=select b.CMR_NO,'' from CREQCMR.ADMIN a,CREQCMR.DATA b, CREQCMR.ADMIN c,CREQCMR.DATA d WHERE A.REQ_ID=b.REQ_ID AND c.CHILD_REQ_ID=a.REQ_ID AND \
 c.REQ_ID=d.REQ_ID AND a.REQ_STATUS='COM' AND c.SOURCE_SYST_ID='CreateCMR-BP' AND (d.EMAIL3 IS NULL OR d.EMAIL3='E') AND c.REQ_ID=:REQ_ID 
QUERY.BPSOURCEFLAG=select a.SOURCE_SYST_ID,b.EMAIL3 from CREQCMR.ADMIN a,CREQCMR.DATA b WHERE a.REQ_ID=b.REQ_ID AND a.REQ_ID=:REQ_ID  
RECORD.ADMIN=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID
RECORD.ATTACHMENT=select * from CREQCMR.ATTACHMENT where REQ_ID = :REQ_ID and DOC_LINK = :DOC_LINK
RECORD.ADDR_RDC=\
 select  a.ADDR_SEQ, a.ADDR_STD_ACCEPT_IND, a.ADDR_STD_REJ_CMT, a.ADDR_STD_REJ_REASON, a.ADDR_STD_RESULT, a.ADDR_STD_TS,  \
  a.ADDR_TXT, a.ADDR_TYPE||' - '||(case when l.TXT is not null then l.TXT when lov_all.TXT is not null then lov_all.TXT else 'Not Classified' end) ADDR_TYPE, \
  a.BLDG, a.CITY1, a.CITY2, t3.COUNTY_CD_DESC COUNTY,  \
  a.CUST_FAX, a.CUST_NM1, a.CUST_NM2, a.CUST_NM3,  \
  a.CUST_NM4, a.CUST_PHONE, a.DEPT, a.FLOOR, a.IMPORT_IND,  \
  t1.COUNTRY_DESC||' - '||t1.COUNTRY_CD LAND_CNTRY, a.OFFICE, a.POST_CD, a.PO_BOX, a.PO_BOX_CITY,   \
  a.PO_BOX_POST_CD, a.REQ_ID, a.SAP_NO,  \
  t2.STATE_PROV_CD||' - '||t2.STATE_PROV_DESC STATE_PROV,  \
  a.DIVN DIVN, a.ADDR_TXT_2 ADDR_TXT_2, a.TAX_CD_1, a.TAX_CD_2, a.VAT, a.PAIRED_ADDR_SEQ, \
  a.TRANSPORT_ZONE TRANSPORT_ZONE,a.CUST_LANG_CD,a.HW_INSTL_MSTR_FLG, a.PAR_CMR_NO ,a.BILLING_PSTL_ADDR, a.ESTAB_FUNC_CD, a.COMPANY_SIZE, a.CONTACT, a.ROL  \
from CREQCMR.ADDR_RDC a \
left outer join CREQCMR.DATA d \
  on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.LOV l  \
  on a.ADDR_TYPE = l.CD  \
  and l.FIELD_ID = '##AddressType'  \
  and l.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY \
left outer join CREQCMR.LOV lov_all \
  on a.ADDR_TYPE = lov_all.CD \
  and lov_all.FIELD_ID = '##AddressType' \
  and lov_all.CMR_ISSUING_CNTRY = '*'    \
left outer join CMMA.REFT_COUNTRY_W t1  \
  on a.LAND_CNTRY = t1.COUNTRY_CD  \
left outer join CMMA.REFT_STATE_PROV_W t2  \
  on a.STATE_PROV = t2.STATE_PROV_CD \
  and t1.REFT_COUNTRY_KEY = t2.REFT_COUNTRY_KEY \
left outer join CMMA.REFT_COUNTY_CD_W t3  \
  on a.COUNTY = t3.COUNTY_CD  \
  and t2.REFT_STATE_PROV_KEY = t3.REFT_STATE_PROV_KEY \
where a.REQ_ID = :REQ_ID  \
and a.ADDR_TYPE = :ADDR_TYPE  \
and a.ADDR_SEQ = :ADDR_SEQ 

RECORD.ADDRESSTGME=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ


QUERY.ADDRDETAIL=select ad.REQ_ID, ad.ADDR_TYPE,ad.ADDR_SEQ, ad.CUST_NM1, ad.CUST_NM2, ad.CUST_NM3, \
     case when data.CMR_ISSUING_CNTRY='760' then ad.CUST_NM4||coalesce(ad.PO_BOX_CITY,'') else ad.CUST_NM4 end CUST_NM4, \
     case when data.CMR_ISSUING_CNTRY='760' then ad.ADDR_TXT||coalesce(ad.ADDR_TXT_2,'') else ad.ADDR_TXT end ADDR_TXT, \
     ad.CITY1, ad.CITY2, ad.STATE_PROV, ad.POST_CD, ad.LAND_CNTRY, ad.COUNTY, ad.BLDG,  \
     ad.FLOOR, ad.OFFICE, ad.DEPT, ad.PO_BOX, ad.PO_BOX_CITY, ad.PO_BOX_POST_CD, ad.CUST_FAX, ad.CUST_PHONE,  \
     ad.TRANSPORT_ZONE, ad.ADDR_STD_RESULT, ad.ADDR_STD_ACCEPT_IND, ad.ADDR_STD_REJ_REASON, ad.ADDR_STD_REJ_CMT,  \
     ad.ADDR_STD_TS, ad.SAP_NO, ad.IMPORT_IND, ad.DPL_CHK_RESULT, ad.DPL_CHK_INFO ,data.CMR_NO, \
     case when lov.TXT is not null then lov.TXT when lov_all.TXT is not null then lov_all.TXT else '' end TXT, \
     bds_STATE_PROV.STATE_PROV_DESC, bds_COUNTY.COUNTY_CD_DESC , bds_LANDED_COUNTY.COUNTRY_DESC, '',  \
     ad.DPL_CHK_BY_ID,ad.DPL_CHK_BY_NM,ad.DPL_CHK_TS, ad.DPL_CHK_ERR_LIST, ad.STD_CITY_NM, ad.COUNTY_NAME, ad.DIVN, ad.ADDR_TXT_2,  \
     case when length(trim(ad.RDC_CREATE_DT)) = 8 then SUBSTR(ad.RDC_CREATE_DT, 1, 4)||'-'||SUBSTR(ad.RDC_CREATE_DT, 5, 2)||'-'||SUBSTR(ad.RDC_CREATE_DT, 7, 2) else '' end CREATE_DT, \
     VARCHAR_FORMAT(RDC_LAST_UPDT_DT, 'YYYY-MM-DD') UPDATE_DT, \
     case when data.CMR_ISSUING_CNTRY='631' then ad.TAX_CD_1 else '' end TAXCD1_COL, \
     case when data.CMR_ISSUING_CNTRY='631' then ad.TAX_CD_2 else '' end TAXCD2_COL,  \
     case when data.CMR_ISSUING_CNTRY in ('631','862') then ad.VAT else '' end VAT_COL, \
     case when data.CMR_ISSUING_CNTRY in ('641','724','619','621','627','647','791','640','759','839','843','859','358','359','363','603','607','620','626','644','642','651','668','677','680','693','694','695','699','704','705','707','708','740','741','752','762','767','768','772','787','805','808','820','821','823','826','832','849','850','865','889','758','848','862','726','373','382','383','635','637','656','662','667','670','691','692','700','717','718','753','810','840','841','876','879','880','881','610','636','645','669','698','725','745','764','769','770','782','804','825','827','831','833','835','842','851','857','883','780','864','806','678','702','846','631','781','613','629','655','661','663','681','683','731','735','799','811','813','829','869','871','815') then ad.IERP_SITE_PRTY_ID else '' end,  \
     ad.TAX_OFFICE, ad.PREF_SEQ_NO, ad.LOCN_CD, ad.PAYMENT_ADDR_NO,ad.BILLING_PSTL_ADDR, \
     ia.INTL_CUST_NM1, ia.INTL_CUST_NM2, ia.INTL_CUST_NM4, ia.addr_txt, ia.city1, ia.city2, \
     gad.CONTACT_NAME, gad.FUNC, gad.PHONE , ad.PAR_CMR_NO , ad.ESTAB_FUNC_CD, ad.COMPANY_SIZE, ad.CONTACT, ad.ROL,ad.CUST_LANG_CD, ia.INTL_CUST_NM3,ad.HW_INSTL_MSTR_FLG \
from CREQCMR.ADDR ad  \
left outer join CREQCMR.DATA data  \
on ad.REQ_ID = data.REQ_ID   \
left outer join CREQCMR.LOV lov   \
  on ad.ADDR_TYPE = lov.CD  \
  and '##AddressType' = lov.FIELD_ID  \
  and lov.CMR_ISSUING_CNTRY = data.CMR_ISSUING_CNTRY \
left outer join CREQCMR.LOV lov_all \
  on ad.ADDR_TYPE = lov_all.CD \
  and lov_all.FIELD_ID = '##AddressType' \
  and lov_all.CMR_ISSUING_CNTRY = '*'    \
left outer join CMMA.REFT_COUNTRY_W bds_LANDED_COUNTY  \
  on ad.LAND_CNTRY = bds_LANDED_COUNTY.COUNTRY_CD \
left outer join CMMA.REFT_STATE_PROV_W bds_STATE_PROV \
  on ad.STATE_PROV = bds_STATE_PROV.STATE_PROV_CD \
  and bds_LANDED_COUNTY.REFT_COUNTRY_KEY = bds_STATE_PROV.REFT_COUNTRY_KEY \
left outer join CMMA.REFT_COUNTY_CD_W bds_COUNTY  \
  on ad.COUNTY =  bds_COUNTY.COUNTY_CD \
  and bds_STATE_PROV.REFT_STATE_PROV_KEY = bds_COUNTY.REFT_STATE_PROV_KEY \
left outer join CREQCMR.INTL_ADDR ia \
  on ad.REQ_ID = ia.REQ_ID \
  and ad.ADDR_SEQ = ia.ADDR_SEQ \
  and ad.ADDR_TYPE = ia.ADDR_TYPE \
left outer join CREQCMR.GEO_ADL_CONT_DTL gad \
  on ad.REQ_ID = gad.REQ_ID \
  and ad.ADDR_SEQ = gad.CONTACT_NUM \
  and ad.ADDR_TYPE = gad.CONTACT_TYPE \
where ad.REQ_ID = :REQ_ID   \
and ad.ADDR_TYPE = :ADDR_TYPE  \
and ad.ADDR_SEQ = :ADDR_SEQ

#DB validators
QUERY.DB.DB-SAPR3.KNA1=select 'Y','OK' from SYSIBM.SYSDUMMY1
QUERY.DB.DB-SAPR3.ZZKV_SIC=select 'Y', 'OK' from CMMA.REFT_UNSIC_W where REFT_UNSIC_CD = :VALUE

RECORD.DPLDETAILS=\
select  a.REQ_ID, a.ADDR_TYPE, a. ADDR_SEQ,  \
      case when a.DPL_CHK_RESULT = 'P' then 'Passed' when a.DPL_CHK_RESULT = 'F' then 'Failed' else 'Not Done' end DPL_CHK_RESULT,  \
      a.DPL_CHK_ERR_LIST, a.DPL_CHK_TS, a.DPL_CHK_BY_ID, a.DPL_CHK_BY_NM, trim(admin.MAIN_CUST_NM1||(case when admin.MAIN_CUST_NM2 is not null then ' '||admin.MAIN_CUST_NM2 else '' end)) CUST_NM1,  \
    a.LAND_CNTRY||' - '||t.COUNTRY_DESC LAND_CNTRY, a.ADDR_TXT, a.CITY1, a.POST_CD, a.STATE_PROV||' - '||u.STATE_PROV_DESC STATE_PROV  \
from CREQCMR.ADDR a  \
left outer join CREQCMR.ADMIN admin \
  on a.REQ_ID = admin.REQ_ID \
left outer join CMMA.REFT_COUNTRY_W t  \
  on a.LAND_CNTRY = t.COUNTRY_CD  \
left outer join CMMA.REFT_STATE_PROV_W u  \
  on a.STATE_PROV = u.STATE_PROV_CD  \
where a.REQ_ID = :REQ_ID  \
and a.ADDR_TYPE = :ADDR_TYPE  \
and a.ADDR_SEQ = :ADDR_SEQ  

RECORD.DPLDETAILS_BYADDR=\
select  a.REQ_ID, a.ADDR_TYPE, a. ADDR_SEQ,  \
      case when a.DPL_CHK_RESULT = 'P' then 'Passed' when a.DPL_CHK_RESULT = 'F' then 'Failed' else 'Not Done' end DPL_CHK_RESULT,  \
      a.DPL_CHK_ERR_LIST, a.DPL_CHK_TS, a.DPL_CHK_BY_ID, a.DPL_CHK_BY_NM, trim(a.CUST_NM1||(case when a.CUST_NM2 is not null then ' '||a.CUST_NM2 else '' end)) CUST_NM1,  \
    a.LAND_CNTRY||' - '||t.COUNTRY_DESC LAND_CNTRY, a.ADDR_TXT, a.CITY1, a.POST_CD, a.STATE_PROV||' - '||u.STATE_PROV_DESC STATE_PROV  \
from CREQCMR.ADDR a  \
left outer join CREQCMR.ADMIN admin \
  on a.REQ_ID = admin.REQ_ID \
left outer join CMMA.REFT_COUNTRY_W t  \
  on a.LAND_CNTRY = t.COUNTRY_CD  \
left outer join CMMA.REFT_STATE_PROV_W u  \
  on a.STATE_PROV = u.STATE_PROV_CD  \
where a.REQ_ID = :REQ_ID  \
and a.ADDR_TYPE = :ADDR_TYPE  \
and a.ADDR_SEQ = :ADDR_SEQ 

#Taxinfo Modal SQLs
TAXINFO.GETRECORDS=select * from CREQCMR.GEO_TAX_INFO where REQ_ID=:REQ_ID and GEO_TAX_INFO_ID=:GEO_TAX_INFO_ID
QUERY.COUNTTAXINFORECORDS=select count(*), '' from CREQCMR.GEO_TAX_INFO where REQ_ID=:REQ_ID 
QUERY.TAXINFORECORDSBYREQID=select TAX_CD, TAX_SEPARATION_INDC from CREQCMR.GEO_TAX_INFO where REQ_ID=:REQ_ID
REQUESTENTRY.TAXINFO.SEARCH_BY_REQID=select * from CREQCMR.GEO_TAX_INFO where REQ_ID = :REQ_ID 
TAXINFO.GETGEOTAXINFOID=select MAX(GEO_TAX_INFO_ID)||'','DUMMY' from CREQCMR.GEO_TAX_INFO where REQ_ID=:REQ_ID
QUERY.TAXINFODETAIL=SELECT gt.REQ_ID, gt.GEO_TAX_INFO_ID,  gt.TAX_NUM,  gt.TAX_CD, \
gt.TAX_SEPARATION_INDC, gt.BILLING_PRINT_INDC, gt.CONTRACT_PRINT_INDC, gt.CNTRY_USE FROM CREQCMR.GEO_TAX_INFO gt \
WHERE gt.REQ_ID=:REQ_ID AND GEO_TAX_INFO_ID=:GEO_TAX_INFO_ID
TAXINFO.COUNTTAXINFORECORDS=SELECT COUNT(*), 'XXX' FROM CREQCMR.GEO_TAX_INFO WHERE REQ_ID=:REQ_ID

#Address Modal sqls
ADDRESS.GETRECORDS=select * from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE and ADDR_SEQ=:ADDR_SEQ
DATA.GETCMRNO.SWISS=select cmr_no from CREQCMR.DATA where REQ_ID=:REQ_ID
DATA.GETCMRNO.AUSTRIA=select cmr_no from CREQCMR.DATA where REQ_ID=:REQ_ID
ADMIN.GETREQTYPE.SWISS=select req_type from CREQCMR.ADMIN where REQ_ID=:REQ_ID
ADMIN.GETREQTYPE.AUSTRIA=select req_type from CREQCMR.ADMIN where REQ_ID=:REQ_ID
ADDRESS.GETADDRSEQ.SWISS_U=select MAX( substring(ADDR_SEQ,11,15))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID
ADDRESS.GETADDRSEQ.SWISS_C=select MAX(ADDR_SEQ)||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID 
ADDRESS.GETADDRSEQ.AUSTRIA_U=select MAX( substring(ADDR_SEQ,11,15))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID
ADDRESS.GETADDRSEQ.AUSTRIA_C=select MAX(ADDR_SEQ)||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID 
ADDRESS.GETADDRSEQ=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE \
AND trim(translate(ADDR_SEQ,'', '0123456789')) = ''
ADDRESS.GETMADDRSEQ=select MAX(ADDR_SEQ)||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID
ADDRESS.GETMADDRSEQ_IGF=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID \
AND ADDR_SEQ NOT IN ('598', '599') \
AND trim(translate(ADDR_SEQ,'', '0123456789')) = ''
ADDRESS.GETMADDRSEQ_TR=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_SEQ < 598
ADDRESS.GETMADDRSEQ_CEE=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID \
AND ADDR_SEQ NOT IN ('598', '599') \
AND trim(translate(ADDR_SEQ,'', '0123456789')) = ''
ADDRESS.GETMADDRSEQ_5=select 1 from CREQCMR.ADDR where REQ_ID=:REQ_ID AND (ADDR_SEQ = '5' OR ADDR_SEQ = '00005')
ADDRESS.GETMADDRSEQ_AT=select MAX(INT(A.ADDR_SEQ))||'','DUMMY', MAX(D.CMR_NO) \
from CREQCMR.ADDR A \
LEFT JOIN CREQCMR."DATA" D ON A.REQ_ID = D.REQ_ID \
where LENGTH(TRIM(TRANSLATE(A.ADDR_SEQ,' ','0123456789' )))=0 \
AND A.ADDR_SEQ NOT IN ('598', '599')\
AND A.REQ_ID=:REQ_ID
ADDRESS.GETMADDRSEQ_RDC_AT=select distinct zzkv_seqno from sapr3.kna1 where mandt = :MANDT and katr6 = '618' AND zzkv_cusno = :ZZKV_CUSNO with ur
ADDRESS.GETMAINADDRREC=select * from \
(select addr.*, lov.DISP_ORDER from CREQCMR.ADDR addr left outer join CREQCMR.LOV lov on addr.ADDR_TYPE = lov.CD and '##AddressType' = lov.FIELD_ID ) d \
where  not exists (select 1 from CREQCMR.ADDR x where x.REQ_ID = d.REQ_ID and x.ADDR_TYPE = d.ADDR_TYPE and x.ADDR_SEQ < d.ADDR_SEQ) \
and d.REQ_ID =:REQ_ID order by d.DISP_ORDER  fetch first 1 rows only

ADDRESS.GETCOUNTYNAME=select c.COUNTY_CD_DESC \
from CMMA.REFT_COUNTY_CD_W c, CMMA.REFT_STATE_PROV_W s, CMMA.REFT_COUNTRY_W n \
where s.REFT_STATE_PROV_KEY = c.REFT_STATE_PROV_KEY \
and s.STATE_PROV_CD = :STATE \
and n.REFT_COUNTRY_KEY = s.REFT_COUNTRY_KEY \
and n.COUNTRY_CD = :COUNTRY \
and c.COUNTY_CD = :COUNTY

TGME.GETCODEDESC=select * from CREQCMR.TGME_CODES where CD = :CD
TGME.GETSTATEPROVDESC=select STATE_PROV_DESC,STATE_PROV_CD from CMMA.REFT_STATE_PROV_W \
where (STATE_PROV_CD = :STATE or STATE_PROV_CD like :CODE) \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :LAND1) \
order by case when STATE_PROV_CD = :STATE then 0 else 1 end

TGME.GETSTATEPROVCD=select STATE_PROV_CD,'' \
from CMMA.REFT_STATE_PROV_W \
where ( upper(trim(STATE_PROV_DESC)) like :STATE \
or upper(trim(STATE_PROV_DESC)) like :CLEAN) \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY  \
      from CMMA.REFT_COUNTRY_W \
      where COUNTRY_CD = :LAND1) \
order by case when upper(trim(STATE_PROV_DESC)) like :STATE then 0 else 1 end 

QUERY.GETLANDSTATEBYREQID=select STATE_PROV, LAND_CNTRY, '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE
LEGACY.GET_ISR_BYSBO=select distinct(REP_TEAM_CD),* from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY=:CNTRY AND SALES_BO_CD=:SBO
QUERY.GETZS01RECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZS01' and ADDR_SEQ <> :ADDR_SEQ
QUERY.GETZS02RECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZS02' and ADDR_SEQ <> :ADDR_SEQ
QUERY.GETZP01RECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZP01' and ADDR_SEQ <> :ADDR_SEQ
QUERY.GETADDRECORDSBYTYPE=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE and ADDR_SEQ <> :ADDR_SEQ 
QUERY.GETZS01VALRECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZS01'
QUERY.GETZS01STATEBYREQID=select STATE_PROV, '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZS01'
QUERY.GETTGMESTATUS=Select STATUS,'' from CREQCMR.TGME_CODES WHERE CD=:CD
QUERY.GETADDRSTDREASON=select TXT, CD from CREQCMR.LOV where FIELD_ID = '##AddrStdRejectReason' and CD = :CD  fetch first 1 rows only 
QUERY.GETTGMEVALID=select LAND_CNTRY, '' from CREQCMR.TGME_CNTRY where LAND_CNTRY = :CD
QUERY.GETTAXINFORECORDS=select count(*), '' from CREQCMR.GEO_TAX_INFO where REQ_ID=:REQ_ID and GEO_TAX_INFO_ID <> :GEO_TAX_INFO_ID
QUERY.GETRECORDSFORTAXCODE=select count(*), '' from CREQCMR.GEO_TAX_INFO where REQ_ID=:REQ_ID and TAX_CD=:TAX_CD
QUERY.GETZP01VALRECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZP01'
QUERY.GETZI01VALRECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZI01'
QUERY.GETZD01VALRECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZD01'
QUERY.GET_CMT_FOR_LANDED=select CMR_ISSUING_CNTRY, '' from CREQCMR.PROC_CENTER where CMT in (select COUNTRY_DESC from CMMA.REFT_COUNTRY_W country where country_cd = :COUNTRY_CD)
QUERY.GET_COUNT_OF_RECORDS_BY_ADDRTYP=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE= :ADDR_TYP
QUERY.GET.NAME4STR.TR= SELECT CUST_NM4,ADDR_TXT_2,'' from creqcmr.addr where ADDR_TYPE= :ADDR_TYPE AND REQ_ID= :REQ_ID AND ADDR_SEQ= :ADDR_SEQ

DPL.GETCANDIDATES=select distinct ad.LAND_CNTRY, \
       case \
         when length(a.MAIN_CUST_NM1) > 0 then a.MAIN_CUST_NM1 \
         when length(ad.CUST_NM1) > 0 then ad.CUST_NM1  \
         else '' \
       end || \
       case \
         when length(a.MAIN_CUST_NM2) > 0 then ' '||a.MAIN_CUST_NM2 \
         when length(ad.CUST_NM2) > 0 then ad.CUST_NM2 \
         else '' \
       end \
from CREQCMR.ADMIN a, CREQCMR.ADDR ad \
where ad.REQ_ID = a.REQ_ID  \
and a.REQ_ID = :REQ_ID

DPL.GETCANDIDATES=select distinct ad.LAND_CNTRY, case when length(a.MAIN_CUST_NM1) > 0 then a.MAIN_CUST_NM1 else '' end || \
       case when length(a.MAIN_CUST_NM2) > 0 then ' '||a.MAIN_CUST_NM2 else '' end \
from CREQCMR.ADMIN a, CREQCMR.ADDR ad \
where ad.REQ_ID = a.REQ_ID  \
and a.REQ_ID = :REQ_ID

DPL.GETCANDIDATES.BYADDR=select ad.LAND_CNTRY, case when length(ad.CUST_NM1) > 0 then ad.CUST_NM1 else '' end || \
       case when length(ad.CUST_NM2) > 0 then ' '||ad.CUST_NM2 else '' end, ad.ADDR_TYPE, ad.ADDR_SEQ \
from CREQCMR.ADMIN a, CREQCMR.ADDR ad \
where ad.REQ_ID = a.REQ_ID  \
and a.REQ_ID = :REQ_ID

DPL.UPDATEPASSED=update CREQCMR.ADDR set DPL_CHK_RESULT = 'P', DPL_CHK_TS = current timestamp, DPL_CHK_BY_ID = :DPL_CHK_BY_ID, DPL_CHK_BY_NM = :DPL_CHK_BY_NM where REQ_ID = :REQ_ID and LAND_CNTRY = :CNTRY 
DPL.UPDATEFAILED=update CREQCMR.ADDR set DPL_CHK_RESULT = 'F', DPL_CHK_INFO = :INFO, DPL_CHK_TS = current timestamp, DPL_CHK_BY_ID = :DPL_CHK_BY_ID, DPL_CHK_BY_NM = :DPL_CHK_BY_NM, DPL_CHK_ERR_LIST = :DPL_CHK_ERR_LIST where REQ_ID = :REQ_ID and LAND_CNTRY = :CNTRY 

DPL.UPDATEPASSED.BYADDR=update CREQCMR.ADDR set DPL_CHK_RESULT = 'P', DPL_CHK_TS = current timestamp, DPL_CHK_BY_ID = :DPL_CHK_BY_ID, DPL_CHK_BY_NM = :DPL_CHK_BY_NM where REQ_ID = :REQ_ID and LAND_CNTRY = :CNTRY and trim(upper(CUST_NM1))||(case when length(CUST_NM2) > 0 then ' '||trim(upper(CUST_NM2)) else '' end) =  :NAME and (DPL_CHK_RESULT is null or trim(DPL_CHK_RESULT) <> 'N')
DPL.UPDATEFAILED.BYADDR=update CREQCMR.ADDR set DPL_CHK_RESULT = 'F', DPL_CHK_INFO = :INFO, DPL_CHK_TS = current timestamp, DPL_CHK_BY_ID = :DPL_CHK_BY_ID, DPL_CHK_BY_NM = :DPL_CHK_BY_NM, DPL_CHK_ERR_LIST = :DPL_CHK_ERR_LIST where REQ_ID = :REQ_ID and LAND_CNTRY = :CNTRY and trim(upper(CUST_NM1))||(case when length(CUST_NM2) > 0 then ' '||trim(upper(CUST_NM2)) else '' end) =  :NAME and (DPL_CHK_RESULT is null or trim(DPL_CHK_RESULT) <> 'N')
DPL.UPDATENOTREQUIRED.BYADDR=update CREQCMR.ADDR set DPL_CHK_RESULT = 'N', DPL_CHK_TS = current timestamp, DPL_CHK_INFO = null where REQ_ID = :REQ_ID

DPL.GETDPLCOUNTS=\
select 'ALL', count(*) from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE not like '%X%' \
union all \
select 'PASSED', count(*) from CREQCMR.ADDR where REQ_ID = :REQ_ID and DPL_CHK_RESULT = 'P' and ADDR_TYPE not like '%X%' \
union all \
select 'FAILED', count(*) from CREQCMR.ADDR where REQ_ID = :REQ_ID and DPL_CHK_RESULT = 'F' and ADDR_TYPE not like '%X%' \
union all \
select 'NOTDONE', count(*) from CREQCMR.ADDR where REQ_ID = :REQ_ID and (DPL_CHK_RESULT is null or trim(DPL_CHK_RESULT) = '') and ADDR_TYPE not like '%X%' \
union all \
select 'NOTREQUIRED', count(*) from CREQCMR.ADDR where REQ_ID = :REQ_ID and DPL_CHK_RESULT = 'N' and ADDR_TYPE not like '%X%' 

DPL.GETSCORECARD=select * from CREQCMR.SCORECARD where REQ_ID = :REQ_ID
DPL.CLEARADDR=update CREQCMR.ADDR set DPL_CHK_RESULT = null, DPL_CHK_INFO = null, DPL_CHK_BY_ID = null, DPL_CHK_BY_NM = null, \
DPL_CHK_ERR_LIST = null, DPL_CHK_TS = null where REQ_ID = :REQ_ID and DPL_CHK_RESULT <> 'NR'
DPL.CLEARSCORECARD=update CREQCMR.SCORECARD set DPL_CHK_RESULT = 'Not Done', DPL_CHK_USR_ID = null, DPL_CHK_USR_NM = null, DPL_CHK_TS = null where REQ_ID = :REQ_ID
QUERY.GETISOCNTRY=\
select COUNTRY_CD LAND1, ''   \
from CMMA.REFT_COUNTRY_W   \
where upper(trim(COUNTRY_DESC)) = (select upper(trim(SYS_LOC_DESC))   \
                            from CMMA.REFT_SYS_LOC_W   \
                            where SYS_LOC_CD = :COUNTRY)   

REQUEST.SUMMARY=\
select a.*, d.*, c.SYS_LOC_DESC COUNTRY_DESC, lov.TXT PROCESSING_DESC, sic.REFT_UNSIC_DESC ISIC_DESC \
from CREQCMR.ADMIN a \
left outer join CREQCMR.DATA d \
  on a.REQ_ID = d.REQ_ID \
left outer join CMMA.REFT_SYS_LOC_W c  \
  on d.CMR_ISSUING_CNTRY = c.SYS_LOC_CD  \
left outer join CMMA.REFT_UNSIC_W sic  \
  on d.ISIC_CD = sic.REFT_UNSIC_CD  \
  and sic.GEO_CD = case when d.CMR_ISSUING_CNTRY = '897' then 'US' else 'WW' end \
left outer join CREQCMR.LOV lov  \
  on a.PROCESSED_FLAG = lov.CD \
  and lov.FIELD_ID = '##ProcessingStatus'   \
  and lov.CMR_ISSUING_CNTRY = '*' \
where a.REQ_ID = :REQ_ID 

GET.KNA1.KUNNR_U=SELECT KUNNR,ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = '848' \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
AND AUFSD = :AUFSD \
AND  LOEVM != 'X' \
WITH UR
GET.ZS01.KUNNR=SELECT KUNNR,ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
AND AUFSD <> '93' \
AND  LOEVM != 'X' \
WITH UR
GET.ZI01.KUNNR=SELECT KUNNR,ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KTOKD = 'ZI01' \
AND AUFSD <> '93' \
AND  LOEVM != 'X' \
WITH UR
GET.NAME3.KNA1.BYKUNNR=SELECT MANDT,KUNNR,NAME3 FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR


GET.NAME4.KNA1.BYKUNNR=SELECT MANDT,KUNNR,NAME4 FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

GET.DEPT.KNA1.BYKUNNR=SELECT KUNNR,ZZKV_DEPT FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

GET.KNVV.WAERS=SELECT WAERS,MANDT,KUNNR FROM SAPR3.KNVV \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND LOEVM != 'X' \
WITH UR

GET.KNVV.ZTERM=SELECT ZTERM,MANDT,KUNNR FROM SAPR3.KNVV \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND LOEVM != 'X' \
WITH UR

GET.KUNNR_EXT.BP_MBR_LVL_TYPE=SELECT BP_MBR_LVL_TYPE,KUNNR FROM SAPR3.KUNNR_EXT \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

GET.DEPT.KNA1.BYCMR=SELECT ZZKV_DEPT FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
WITH UR

GET.ROL.KNA1.BYCMR=SELECT INSPBYDEBI FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND MANDT = :MANDT \
AND KATR6 = :KATR6 \
AND KTOKD = 'ZS01' \
WITH UR

GET.KVK.KNA1.STCD1=SELECT STCD1 FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
WITH UR

GET.KVK.CMRTCEXT.CODFIS=select CODFIS from CMRDB2D.CMRTCEXT where RCYAA = :COUNTRY and RCUXA = :CMR_NO
SUMMARY.OLDDATA=select * from CREQCMR.DATA_RDC where REQ_ID = :REQ_ID
SUMMARY.OLDADDR=select * from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :SEQ

SUMMARY.NAMEADDR=\
select ad.ADDR_SEQ, \
  ad.ADDR_TYPE, \
  ad.REQ_ID, \
  ad.SAP_NO, \
  ad.ADDR_TXT, \
  ad.BLDG, \
  ad.CITY1, \
  ad.CITY2, \
  trim(new_cd_county.COUNTY_CD_DESC) COUNTY, \
  ad.CUST_FAX, \
  ad.CUST_LANG_CD, \
  ad.HW_INSTL_MSTR_FLG, \
  ad.CUST_NM1, \
  ad.CUST_NM2, \
  ad.CUST_NM3, \
  ad.CUST_NM4, \
  ad.CUST_PHONE, \
  ad.DEPT, \
  ad.FLOOR, \
  ad.IMPORT_IND, \
  ad.LAND_CNTRY||' - '||trim(new_cd_land1.COUNTRY_DESC) LAND_CNTRY, \
  ad.OFFICE, \
  ad.POST_CD, \
  ad.PO_BOX, \
  ad.PO_BOX_CITY, \
  ad.PO_BOX_POST_CD, \
  ad.STATE_PROV||' - '||trim(new_cd_state.STATE_PROV_DESC) STATE_PROV, \
  ad.TRANSPORT_ZONE TRANSPORT_ZONE, \
  ad.DIVN DIVN, \
  ad.ADDR_TXT_2 ADDR_TXT_2, \
  ad.IMPORT_IND, \
  ad.TAX_CD_1 TAX_CD_1, \
  ad.TAX_CD_2 TAX_CD_2, \
  ad.VAT VAT, \
  ad.BILLING_PSTL_ADDR, \
  ad.PAIRED_ADDR_SEQ, \
  ad.CONTACT CONTACT, \
  ad.TAX_OFFICE, \
  ad.EXT_WALLET_ID, \
  old.ADDR_TXT ADDR_TXT_OLD, \
  old.ADDR_TYPE ADDR_TYPE_OLD, \
  old.BLDG BLDG_OLD, \
  old.CITY1 CITY1_OLD, \
  old.CITY2 CITY2_OLD, \
  trim(old_cd_county.COUNTY_CD_DESC) COUNTY_OLD, \
  old.CUST_FAX CUST_FAX_OLD, \
  old.CUST_LANG_CD CUST_LANG_CD_OLD, \
  old.HW_INSTL_MSTR_FLG HW_INSTL_MSTR_FLG_OLD, \
  old.CUST_NM1 CUST_NM1_OLD, \
  old.CUST_NM2 CUST_NM2_OLD, \
  old.CUST_NM3 CUST_NM3_OLD, \
  old.CUST_NM4 CUST_NM4_OLD, \
  old.CUST_PHONE CUST_PHONE_OLD, \
  old.DEPT DEPT_OLD, \
  old.FLOOR FLOOR_OLD, \
  old.LAND_CNTRY ||' - '||trim(old_cd_land1.COUNTRY_DESC) LAND_CNTRY_OLD, \
  old.OFFICE OFFICE_OLD, \
  old.POST_CD POST_CD_OLD, \
  old.PO_BOX PO_BOX_OLD, \
  old.PO_BOX_CITY PO_BOX_CITY_OLD, \
  old.PO_BOX_POST_CD PO_BOX_POST_CD_OLD, \
  old.SAP_NO SAP_NO_OLD, \
  old.STATE_PROV||' - '||trim(old_cd_state.STATE_PROV_DESC) STATE_PROV_OLD, \
  old.TRANSPORT_ZONE TRANSPORT_ZONE_OLD, \
  old.DIVN DIVN_OLD, \
  old.ADDR_TXT_2 ADDR_TXT_2_OLD, \
  old.TAX_CD_1 TAX_CD_1_OLD, \
  old.TAX_CD_2 TAX_CD_2_OLD, \
  old.VAT VAT_OLD, \
  old.CONTACT CONTACT_OLD, \
  old.TAX_OFFICE TAX_OFFICE_OLD, \
  old.BILLING_PSTL_ADDR BILLING_PSTL_ADDR_OLD, \
  old.EXT_WALLET_ID EXT_WALLET_ID_OLD, \
  (select CMR_ISSUING_CNTRY from CREQCMR.DATA d where d.REQ_ID = ad.REQ_ID) CMR_COUNTRY, \
  (select CMR_NO from CREQCMR.DATA d where d.REQ_ID = ad.REQ_ID) CMR_NUMBER \
from CREQCMR.ADDR ad \
left outer join CREQCMR.ADDR_RDC old \
  on ad.REQ_ID = old.REQ_ID \
  and ad.ADDR_TYPE = old.ADDR_TYPE \
  and ad.ADDR_SEQ = old.ADDR_SEQ \
left outer join CMMA.REFT_COUNTRY_W old_cd_land1 \
  on old.LAND_CNTRY = old_cd_land1.COUNTRY_CD \
left outer join CMMA.REFT_COUNTRY_W new_cd_land1 \
  on ad.LAND_CNTRY = new_cd_land1.COUNTRY_CD \
left outer join CMMA.REFT_STATE_PROV_W old_cd_state \
  on old.STATE_PROV = old_cd_state.STATE_PROV_CD \
  and old_cd_land1.REFT_COUNTRY_KEY = old_cd_state.REFT_COUNTRY_KEY \
left outer join CMMA.REFT_STATE_PROV_W new_cd_state \
  on ad.STATE_PROV = new_cd_state.STATE_PROV_CD \
  and new_cd_land1.REFT_COUNTRY_KEY = new_cd_state.REFT_COUNTRY_KEY \
left outer join CMMA.REFT_COUNTY_CD_W old_cd_county \
  on old_cd_state.REFT_STATE_PROV_KEY = old_cd_county.REFT_STATE_PROV_KEY \
  and old.COUNTY = old_cd_county.COUNTY_CD \
left outer join CMMA.REFT_COUNTY_CD_W new_cd_county \
  on new_cd_state.REFT_STATE_PROV_KEY = new_cd_county.REFT_STATE_PROV_KEY \
  and ad.COUNTY = new_cd_county.COUNTY_CD \
where ad.REQ_ID = :REQ_ID \
order by case  \
           when ad.ADDR_TYPE = 'ZS01' then 1 \
           when ad.ADDR_TYPE = 'ZI01' then 2 \
           when ad.ADDR_TYPE = 'ZP01' then 3 \
           when ad.ADDR_TYPE = 'ZD01' then 4 \
           else 5 \
         end
SUMMARY.GET_ADDRESS_TYPES=select CD, TXT \
from CREQCMR.LOV where FIELD_ID = '##AddressType' \
and CMR_ISSUING_CNTRY = :CNTRY

SUMMARY.NAMEADDR.REMOVED=\
select ad.ADDR_TYPE, ad.ADDR_SEQ, ad.REQ_ID, 'X' IMPORT_IND \
from CREQCMR.ADDR_RDC ad \
where ad.REQ_ID = :REQ_ID \
and not exists (select 1  \
         from CREQCMR.ADDR o \
         where ad.ADDR_TYPE = o.ADDR_TYPE \
         and ad.ADDR_SEQ = o.ADDR_SEQ \
         and ad.REQ_ID = o.REQ_ID)
           

IL.SUMMARY.NAMEADDR.MISMATCH=\
select ad.ADDR_TYPE, ad.ADDR_SEQ, ad.REQ_ID, 'L' IMPORT_IND \
from CREQCMR.ADDR ad \
where ad.REQ_ID = :REQ_ID \
and not exists (select 1  \
         from CREQCMR.ADDR_RDC o \
         where ad.ADDR_TYPE = o.ADDR_TYPE \
         and ad.ADDR_SEQ = o.ADDR_SEQ \
         and ad.REQ_ID = o.REQ_ID) \
and (ad.ADDR_SEQ != null or ad.ADDR_SEQ != '') \
and ad.IMPORT_IND != 'N'

REQUEST.SUMMARY_SOLDTO=\
select ad.* , case when lov.TXT is not null then lov.TXT when lov_all.TXT is not null then lov_all.TXT else ad.ADDR_TYPE end ADDR_TYPE_TXT,  \
    t3.COUNTRY_DESC Landed_COUNTRY ,  \
    t1.STATE_PROV_DESC, t2.COUNTY_CD_DESC  \
from CREQCMR.ADDR ad   \
left outer join CREQCMR.DATA d \
   on ad.REQ_ID = d.REQ_ID \
left outer join CREQCMR.LOV lov   \
on ad.ADDR_TYPE = lov.CD   \
and '##AddressType' = lov.FIELD_ID   \
and lov.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY \
left outer join CREQCMR.LOV lov_all \
  on ad.ADDR_TYPE = lov_all.CD \
  and lov_all.FIELD_ID = '##AddressType' \
  and lov_all.CMR_ISSUING_CNTRY = '*'    \
left outer join CMMA.REFT_COUNTRY_W  t3   \
  on ad.LAND_CNTRY = t3.COUNTRY_CD   \
left outer join CMMA.REFT_STATE_PROV_W t1   \
  on ad.STATE_PROV = t1.STATE_PROV_CD     \
  and ad.LAND_CNTRY = (select COUNTRY_CD from CMMA.REFT_COUNTRY_W where REFT_COUNTRY_KEY = t1.REFT_COUNTRY_KEY)\
left outer join CMMA.REFT_COUNTY_CD_W t2 \
  on t1.REFT_STATE_PROV_KEY = t2.REFT_STATE_PROV_KEY \
  and ad.COUNTY = t2.COUNTY_CD \
where ad.REQ_ID = :REQ_ID   \
and ad.addr_type ='ZS01'   \
order by ad.addr_seq desc   


REQUEST.SUMMARY_Other_addr=\
select 1 from CREQCMR.ADDR ad \
where ad.REQ_ID = :REQ_ID and ad.addr_type <>'ZS01'



#CreateCMR new queries
   
CMRSERVICES.GET_ADDRESS=\
select a.MAIN_CUST_NM1 CUST_NM1, a.MAIN_CUST_NM2 CUST_NM2,ad.*   \
from CREQCMR.ADDR ad, CREQCMR.ADMIN a, CREQCMR.DATA d  \
where ad.REQ_ID = :REQ_ID \
and a.REQ_ID = ad.REQ_ID  \
and a.REQ_ID = d.REQ_ID \
order by case when d.CMR_ISSUING_CNTRY = '897' then \
           case when ad.ADDR_TYPE = 'ZP01' then 0   \
                when ad.ADDR_TYPE = 'ZI01' then 1   \
                when ad.ADDR_TYPE = 'ZS01' then 2   \
                when ad.ADDR_TYPE = 'ZD01' then 3   \
                else 4 end \
         else  \
           case when ad.ADDR_TYPE = 'ZS01' then 0   \
                when ad.ADDR_TYPE = 'ZI01' then 1   \
                when ad.ADDR_TYPE = 'ZP01' then 2   \
                when ad.ADDR_TYPE = 'ZD01' then 3   \
                else 4 end \
         end, ad.ADDR_SEQ 

              
CMRSERVICES.GET_GBG=select (select GBL_BUY_GRP_ID from CMMA.GBL_BUY_GRP where GBL_BUY_GRP_KEY = bg.GBL_BUY_GRP_KEY) GLOBAL_BUYING_GROUP_ID, bg.BUY_GRP_ID BUYING_GROUP_ID from CMMA.BUY_GRP bg 

LOGIN.GET_ROLES=select r.* \
from CMMA.USERS u, (select ur.USER_ID, r.ROLE_ID, ur.SUB_ROLE_ID, ur.CNTRY_CD, r.APPLICATION_CD \
           from CMMA.ROLES r, CMMA.USER_ROLES ur \
           where r.ROLE_ID = ur.ROLE_ID \
           and r.STATUS = 1) r \
where u.USER_ID = r.USER_ID \
and u.STATUS = 1 \
and upper(u.USER_ID) = upper(:USER_ID) \
and r.APPLICATION_CD like '%C%' 

USER_PREF.ROLES=select r1.ROLE_NAME||(case when r2.ROLE_NAME is null or r2.ROLE_NAME = '' then '' else ' ('||r2.ROLE_NAME||')' end)  ROLE, '' DUMMY \
from CMMA.USERS u, (select ur.USER_ID, r.ROLE_ID, ur.SUB_ROLE_ID, ur.CNTRY_CD, r.APPLICATION_CD  \
           from CMMA.ROLES r, CMMA.USER_ROLES ur \
           where r.ROLE_ID = ur.ROLE_ID) r \
left outer join CMMA.ROLES r1 \
 on r.ROLE_ID = r1.ROLE_ID \
left outer join CMMA.ROLES r2 \
 on r.SUB_ROLE_ID = r2.ROLE_ID \
where u.USER_ID = r.USER_ID  \
and upper(u.USER_ID) = upper(:USER_ID) \
and r.APPLICATION_CD like '%C%' 

REQUESTENTRY.UPDATE_ADDRESS_NAMES=update CREQCMR.ADDR set CUST_NM1 = :CUST_NM1, CUST_NM2 = :CUST_NM2 where REQ_ID = :REQ_ID

REQUESTENTRY.FIND_INTERNAL_TYPE=\
select * \
from CREQCMR.CMR_INTERNAL_TYPES \
where REQ_TYP = :REQ_TYPE \
and (CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY or CMR_ISSUING_CNTRY = 'WW' or CMR_ISSUING_CNTRY = '*') \
and STATUS = '1' \
order by \
     case \
       when CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY  then 0 \
       when CMR_ISSUING_CNTRY = 'WW' then 1 \
       when CMR_ISSUING_CNTRY = '*' then 2 \
     else cast(CMR_ISSUING_CNTRY as INTEGER) \
     end, REQ_TYP, PRIORITY

SYSTEM.USERLIST=select * \
from CMMA.USERS \
order by USER_NAME

SYSTEM.USER=select * \
from CMMA.USERS \
where USER_ID = :ID

SYSTEM.CMR_INTERNAL_TYPES=select * \
from CREQCMR.CMR_INTERNAL_TYPES \
where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY \
and INTERNAL_TYP = :INTERNAL_TYP

SYSTEM.CMR_INTERNAL_TYPESLIST=select * \
from CREQCMR.CMR_INTERNAL_TYPES \
order by CMR_ISSUING_CNTRY,INTERNAL_TYP
SYSTEM.FIELDINFOLIST=select * \
from CREQCMR.FIELD_INFO \
where FIELD_ID = :FIELD_ID \
and CMR_ISSUING_CNTRY like :CNTRY \
order by case when CMR_ISSUING_CNTRY = '*' then '0' else CMR_ISSUING_CNTRY end, SEQ_NO

#Field Info Maint
QUERY.SYSTEM.FIELDIDLIST=select distinct FIELD_ID,'' from CREQCMR.FIELD_INFO order by FIELD_ID
QUERY.SYSTEM.MAXSEQNO=select max(SEQ_NO),'' from CREQCMR.FIELD_INFO where FIELD_ID = :ID and CMR_ISSUING_CNTRY = :CNTRY
QUERY.SYSTEM.SUPPCNTRY=select CNTRY_CD, NM from CREQCMR.SUPP_CNTRY order by NM
QUERY.SYSTEM.FIELDIDCHECK=select 1,'' from CREQCMR.FIELD_INFO where FIELD_ID = :ID and CMR_ISSUING_CNTRY = :CNTRY
QUERY.SYSTEM.FIELDIDCHECK2=select 1,'' from CREQCMR.FIELD_INFO where FIELD_ID = :ID and CMR_ISSUING_CNTRY = '*'
QUERY.SYSTEM.ISUCD=select BRSCH,BRTXT from sapr3.T016T where mandt=:MANDT
QUERY.SYSTEM.CTC=SELECT KATR3,VTEXT FROM SAPR3.TVK3T WHERE MANDT=:MANDT

SYSTEM.FIELD=select * \
from CREQCMR.FIELD_INFO \
where FIELD_ID = :FIELD_ID and SEQ_NO =:SEQ_NO and CMR_ISSUING_CNTRY =:CMR_ISSUING_CNTRY

SYSTEM.VALIDATION_URLSLIST=select u.DISPLAY_SEQ_NO, case when u.CNTRY_CD = '000' then 'Worldwide' else r.SYS_LOC_CD||' - '||r.SYS_LOC_DESC end COMMENTS, \
       u.DESCR_TXT, u.URL, u.CREATE_TS, u.CREATE_BY, u.UPDT_TS, u.UPDT_BY, u.CNTRY_CD \
from CREQCMR.VALIDATION_URLS u \
left outer join CMMA.REFT_SYS_LOC_W r \
on u.CNTRY_CD = r.SYS_LOC_CD \
order by u.CNTRY_CD, u.DISPLAY_SEQ_NO

SYSTEM.VALIDATION_URL=select * from CREQCMR.VALIDATION_URLS where DISPLAY_SEQ_NO=:DISPLAY_SEQ_NO and CNTRY_CD=:CNTRY_CD

QUERY.CHECKVALIDATION_URL=select 1,'' from CREQCMR.VALIDATION_URLS where DISPLAY_SEQ_NO=:DISPLAY_SEQ_NO and CNTRY_CD=:CNTRY_CD

#select ur.USER_ID, r1.ROLE_NAME||(case when r1.STATUS = '0' then '[Not Active]' else '' end) ROLE_ID, \
#       r2.ROLE_NAME||(case when r2.STATUS = '0' then '[Not Active]' else '' end) SUB_ROLE_ID, ur.CNTRY_CD,  \
3       ur.CREATE_TS, ur.CREATE_BY, ur.UPDATE_TS, ur.UPDATE_BY \
    
    
SYSTEM.GET_ROLES=\
select ur.*, r1.ROLE_NAME ROLE_DESC, r1.STATUS ROLE_STATUS, r2.ROLE_NAME SUB_ROLE_DESC \
from CMMA.USER_ROLES ur \
left outer join CMMA.ROLES r1 \
  on ur.ROLE_ID = r1.ROLE_ID \
left outer join CMMA.ROLES r2 \
  on ur.SUB_ROLE_ID = r2.ROLE_ID \
where ur.USER_ID = :USER_ID 
   
SYSTEM.REMOVE_ROLE=delete from CMMA.USER_ROLES where USER_ID = :USER_ID and ROLE_ID = :ROLE_ID and SUB_ROLE_ID = :SUB_ROLE_ID

QUERY.CHECKUSER=select 1,'' from CMMA.USERS where USER_ID = :USERID

GET.KNA1.REVIVED=SELECT * FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
AND AUFSD NOT IN ('90','93') \
AND LOEVM != 'X' \
AND nvl(KATR10,'')<>'GTS' \
WITH UR

GET.KNVVEXT.REVIVED=SELECT * FROM SAPR3.KNVV_EXT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT \
WITH UR

QUERY.CHECKCMRINTERNALTYPES=select 1,'' from CREQCMR.CMR_INTERNAL_TYPES where CMR_ISSUING_CNTRY = :CMRISSUINGCNTRY and INTERNAL_TYP = :INTERNALTYP
QUERY.CHECKFIELDINFO=select 1,'' from CREQCMR.FIELD_INFO where FIELD_ID = :FIELD_ID and SEQ_NO =:SEQ_NO and CMR_ISSUING_CNTRY =:CMR_ISSUING_CNTRY

SYSTEM.CLAIM_ROLES=select cr.*, case when cr.CMR_ISSUING_CNTRY = '*' then '* - Worldwide' else sc.CNTRY_CD||' - '||sc.NM end COUNTRY, \
sd.REQ_STATUS||' - '||sd.STATUS_DESC REQ_STATUS_DESC, \
cr.INTERNAL_TYP||' - '||it.INTERNAL_TYP_DESC INTERNAL_TYP_DESC \
  from CREQCMR.CLAIM_ROLES cr \
  left outer join CREQCMR.SUPP_CNTRY sc \
  on cr.CMR_ISSUING_CNTRY = sc.CNTRY_CD \
  left outer join CREQCMR.STATUS_DESC sd \
  on cr.REQ_STATUS = sd.REQ_STATUS \
  left outer join CREQCMR.CMR_INTERNAL_TYPES it \
  on cr.INTERNAL_TYP = it.INTERNAL_TYP \
where cr.CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY \
and cr.INTERNAL_TYP = :INTERNAL_TYP \
and cr.REQ_STATUS = :REQ_STATUS

SYSTEM.GET.CLAIMROLESLIST=select cr.*, case when cr.CMR_ISSUING_CNTRY = '*' then 'Worldwide' else sc.CNTRY_CD||' - '||sc.NM end COUNTRY, \
sd.REQ_STATUS||' - '||sd.STATUS_DESC REQ_STATUS_DESC, \
cr.CLAIM_ROLE_ID||' - '||claimRole.ROLE_NAME CLAIM_ROLE_DESC, \
case when cr.CLAIM_SUB_ROLE_ID is null or cr.CLAIM_SUB_ROLE_ID = '' then '' else cr.CLAIM_SUB_ROLE_ID||' - '||claimSubRole.ROLE_NAME end CLAIM_SUB_ROLE_DESC, \
cr.INTERNAL_TYP||' - '||it.INTERNAL_TYP_DESC INTERNAL_TYP_DESC \
  from CREQCMR.CLAIM_ROLES cr \
  left outer join CREQCMR.SUPP_CNTRY sc \
  on cr.CMR_ISSUING_CNTRY = sc.CNTRY_CD \
  left outer join CREQCMR.STATUS_DESC sd \
  on cr.REQ_STATUS = sd.REQ_STATUS \
  left outer join CMMA.ROLES claimRole \
  on cr.CLAIM_ROLE_ID = claimRole.ROLE_ID \
  left outer join CMMA.ROLES claimSubRole \
  on cr.CLAIM_SUB_ROLE_ID = claimSubRole.ROLE_ID \
  left outer join CREQCMR.CMR_INTERNAL_TYPES it \
  on cr.INTERNAL_TYP = it.INTERNAL_TYP \
order by cr.CMR_ISSUING_CNTRY, cr.INTERNAL_TYP

QUERY.CHECKCLAIMROLE=select 1,'' from CREQCMR.CLAIM_ROLES where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY and INTERNAL_TYP = :INTERNAL_TYP and REQ_STATUS = :REQ_STATUS

QUERY.SYSTEM.CNTRY_CLAIMROLES=select * from (select a.CNTRY_CD, a.CNTRY_CD||' - '||a.NM CNTRY_DESC \
from CREQCMR.SUPP_CNTRY a, CREQCMR.CMR_INTERNAL_TYPES c \
where a.CNTRY_CD = c.CMR_ISSUING_CNTRY \
union \
select '*' CNTRY_CD, '* - Worldwide' CNTRY_DESC \
from SYSIBM.SYSDUMMY1) a \
order by a.CNTRY_CD 

CMR_INTERNAL_TYPES=select INTERNAL_TYP, INTERNAL_TYP_DESC from CREQCMR.CMR_INTERNAL_TYPES where CMR_ISSUING_CNTRY=:CMR_CNTRY

SYSTEM.GET.PROCCENTERLIST=select pc.CMR_ISSUING_CNTRY, pc.PROC_CENTER_NM, pc.CMT, case when sc.NM is null or sc.NM = '' then pc.CMR_ISSUING_CNTRY else sc.CNTRY_CD||' - '||sc.NM end COUNTRY  \
from CREQCMR.PROC_CENTER pc \
left outer join CREQCMR.SUPP_CNTRY sc \
on pc.CMR_ISSUING_CNTRY = sc.CNTRY_CD

QUERY.CHECKPROCCENTER=select 1,'' from CREQCMR.PROC_CENTER where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY

SYSTEM.PROCCENTER=select pc.CMR_ISSUING_CNTRY, pc.PROC_CENTER_NM, pc.CMT, case when sc.NM is null or sc.NM = '' then pc.CMR_ISSUING_CNTRY else sc.CNTRY_CD||' - '||sc.NM end COUNTRY  \
from CREQCMR.PROC_CENTER pc \
left outer join CREQCMR.SUPP_CNTRY sc \
on pc.CMR_ISSUING_CNTRY = sc.CNTRY_CD \
where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY

QUERY.SYSTEM.CNTRY_PROCCENTER=select * from (select a.CNTRY_CD, a.CNTRY_CD||' - '||a.NM CNTRY_DESC \
from CREQCMR.SUPP_CNTRY a) a \
order by a.CNTRY_CD

BATCH.MONITOR_TRANSCONN=SELECT ADMIN.REQ_ID, NOTIFY_REQ.* \
FROM CREQCMR.ADMIN ADMIN \
LEFT OUTER JOIN TRANSCONN.NOTIFY_REQ NOTIFY_REQ \
 ON ADMIN.REQ_ID=NOTIFY_REQ.REQ_ID \
WHERE NOTIFIED_IND <> :NOTIFIED_IND \
AND ADMIN.REQ_TYPE <> 'N' \
ORDER BY CASE WHEN ADMIN.REQ_TYPE = 'E' then 1 else 0 end, NOTIFY_REQ.CHANGE_TS

BATCH.MONITOR_MQ_INTF_REQ_QUEUE=SELECT ADMIN.REQ_ID, MQ_INTF_REQ_QUEUE.* \
FROM CREQCMR.ADMIN ADMIN \
LEFT OUTER JOIN CREQCMR.MQ_INTF_REQ_QUEUE MQ_INTF_REQ_QUEUE \
  ON ADMIN.REQ_ID=MQ_INTF_REQ_QUEUE.REQ_ID \
WHERE MQ_INTF_REQ_QUEUE.MQ_IND <> :MQ_IND \
AND ADMIN.REQ_TYPE <> 'N' \
AND (MQ_INTF_REQ_QUEUE.REQ_STATUS  = 'COM' or MQ_INTF_REQ_QUEUE.REQ_STATUS like 'SER%') \
ORDER BY MQ_INTF_REQ_QUEUE. LAST_UPDT_TS

BATCH.GET_SAP_NO=select SAP_NO,ADDR_TYPE,ADDR_SEQ from CREQCMR.ADDR WHERE REQ_ID = :REQ_ID
BATCH.GET_ADDR_FOR_SAP_NO=select * from CREQCMR.ADDR WHERE REQ_ID = :REQ_ID \
order by CASE when ADDR_TYPE = 'ZS01' then 0 \
              when ADDR_TYPE = 'ZI01' then 1 \
              when ADDR_TYPE = 'ZP01' then 2 \
              when ADDR_TYPE = 'ZD01' then 3 \
              else 4 end, \
              addr_seq
BATCH.GET_ADDR_RDC_FOR_SAP_NO=select * from CREQCMR.ADDR_RDC WHERE REQ_ID = :REQ_ID
BATCH.GET_ADDR_FOR_SAP_NO_SORT_BY_ADDR_TYPE=select * from CREQCMR.ADDR WHERE REQ_ID = :REQ_ID ORDER BY ADDR_TYPE DESC
BATCH.GET_DATA=select * from CREQCMR.DATA where REQ_ID = :REQ_ID

BATCH.GET_MAIL_CONTENTS=\
select admin.*, data.*, wf.*  \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.data data \
  on admin.REQ_ID = data.REQ_ID \
left outer join CREQCMR.WF_HIST wf  \
  on admin.REQ_ID = wf.REQ_ID \
  and wf.REQ_STATUS = :REQ_STATUS  \
  and wf.CREATE_BY_ID = :CHANGED_BY_ID \
where admin.REQ_ID = :REQ_ID \
and not exists (select 1 from CREQCMR.WF_HIST a where a.REQ_ID = wf.REQ_ID and a.CREATE_BY_ID = wf.CREATE_BY_ID and a.REQ_STATUS = wf.REQ_STATUS and a.CREATE_TS > wf.CREATE_TS)  

BATCH.UPDATE_ADMIN=update CREQCMR.ADMIN set RDC_PROCESSING_STATUS = :RDC_STAT, RDC_PROCESSING_TS = :RDC_PROCESSING_TS where REQ_ID = :REQ_ID

BATCH.UPDATE_ADDR=update CREQCMR.ADDR set RDC_LAST_UPDT_DT = :RDC_UPD_DATE where REQ_ID = :REQ_ID AND SAP_NO = :BATCH_SAP_NO AND ADDR_SEQ = :ADDR_SEQ AND ADDR_TYPE = :ADDR_TYPE

BATCH.CREATE_ADDR=update CREQCMR.ADDR set SAP_NO = :BATCH_SAP_NO, RDC_CREATE_DT = :RDC_CREATE_DT,  RDC_LAST_UPDT_DT = :RDC_LAST_UPDT_DT where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE

BATCH.UPDATE_NOTIFY_REQ=update TRANSCONN.NOTIFY_REQ set NOTIFIED_IND = :NOTIFIED_IND where NOTIFY_ID = :NOTIFY_ID

BATCH.MONITOR_DISABLE_AUTO_PROC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
where a.REQ_TYPE IN ('C','U') \
and a.DISABLE_AUTO_PROC ='Y' \
and a.REQ_STATUS ='COM' \
and a.REQ_ID = d.REQ_ID \
and (a.RDC_PROCESSING_STATUS IS NULL or a.RDC_PROCESSING_STATUS NOT IN ('A','N','C','W','I')) \
and d.CMR_ISSUING_CNTRY in (select CNTRY_CD from CREQCMR.SUPP_CNTRY where AUTO_PROC_ENABLED = 'Y' and PROCESSING_TYP in ('TC', 'MQ')) 

BATCH.MONITOR_ABORTED_REC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and a.RDC_PROCESSING_STATUS = 'A' \
and s.PROCESSING_TYP in ('US','TC','MQ')

select * from CREQCMR.ADMIN where RDC_PROCESSING_STATUS ='A' order by CASE WHEN REQ_TYPE = 'E' then 1 else 0 end
BATCH.MONITOR_RDC_TAGGED_REC=select * from CREQCMR.ADMIN where REQ_TYPE='M' and MASS_UPDT_RDC_ONLY = 'Y' and REQ_STATUS = 'PCP'

BATCH.GET_ADMIN_ENTITY=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID

BATCH.GET_FORCE_DATA=select * from CREQCMR.ADMIN a, CREQCMR.DATA  d where a.REQ_ID = d.REQ_ID and a.REQ_ID = :REQ_ID

BATCH.CHECK_FORCED_UPDATE=select * from CREQCMR.ADMIN a \
where exists (select 1 \
              from CREQCMR.WF_HIST wf \
              where wf.REQ_ID = a.REQ_ID \
              and wf.REQ_STATUS_ACT = :ACT) \
and a.REQ_ID = :REQ_ID

BATCH.FORCE_SQL=UPDATE CREQCMR.ADMIN SET INTERNAL_TYP = 'UPD_SIMPLE_AUTO', REQ_STATUS = 'PCP',LOCK_IND='N', LOCK_TS=NULL, LOCK_BY=NULL,LOCK_BY_NM=NULL, REQ_TYPE='U', PROCESSED_FLAG='N', PROCESSED_TS=NULL,ITERATION_ID=NULL WHERE REQ_ID= :REQ_ID

BATCH.GET_ADDR_ENTITY_CREATE_REQ=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE

BATCH.GET_ADDR_ENTITY_CREATE_REQ_SEQ=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ

BATCH.GET_ADDR_ENTITY_UPDATE_REQ=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID AND SAP_NO = :BATCH_SAP_NO AND ADDR_SEQ = :ADDR_SEQ AND ADDR_TYPE = :ADDR_TYPE

QUERY.SYS_LOC_SUPPORTED=select 1,1 from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY

BATCH.GET_PROSPECT=select a.PROSP_LEGAL_IND, d.CMR_NO, data.PROSPECT_SEQ_NO from CREQCMR.ADMIN a, CREQCMR.DATA_RDC d, CREQCMR.DATA data  where a.REQ_ID = d.REQ_ID and a.REQ_ID = data.REQ_ID and a.REQ_ID = :REQ_ID

BATCH.MASS_UPDATE_ADDR_RECORDS=select admin.*, mass_updt.* ,mass_updt_addr.* \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.MASS_UPDT mass_updt \
 on admin.REQ_ID=mass_updt.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt.ITERATION_ID \
left outer join CREQCMR.MASS_UPDT_ADDR mass_updt_addr \
 on admin.REQ_ID=mass_updt_addr.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt_addr.ITERATION_ID \
 and mass_updt.PAR_REQ_ID=mass_updt_addr.PAR_REQ_ID  and mass_updt.seq_No=mass_updt_addr.seq_no \
WHERE \
admin.REQ_ID = :REQ_ID \
and \
admin.ITERATION_ID = :ITERATION_ID \
and \
mass_updt.ROW_STATUS_CD = :STATUS 

BATCH.MASS_UPDATE_DATA_RECORDS=select admin.*, mass_updt.*  ,mass_updt_data.* \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.MASS_UPDT mass_updt \
 on admin.REQ_ID=mass_updt.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt.ITERATION_ID \
left outer join CREQCMR.MASS_UPDT_DATA mass_updt_data \
 on admin.REQ_ID=mass_updt_data.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt_data.ITERATION_ID \
and mass_updt.PAR_REQ_ID=mass_updt_data.PAR_REQ_ID  and mass_updt.seq_No=mass_updt_data.seq_no \
WHERE \
admin.REQ_ID = :REQ_ID \
and \
admin.ITERATION_ID = :ITERATION_ID \
and \
mass_updt.ROW_STATUS_CD = :STATUS 

BATCH.MD.GET.MASS_UPDT=SELECT MASS_UPDT.* FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND ROW_STATUS_CD NOT IN ('DONE')
BATCH.LD.GET.MASS_UPDT=SELECT MASS_UPDT.* FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND ROW_STATUS_CD NOT IN ('LDONE', 'DONE')
BATCH.LD.GET.MASS_UPDT_RDC=SELECT MASS_UPDT.*, (SELECT count(KUNNR) \
		FROM SAPR3.KNA1 \
		WHERE MANDT = :MANDT AND KATR6 = :CNTRY AND ZZKV_CUSNO = MASS_UPDT.CMR_NO AND LOEVM <> 'X' AND AUFSD <> '93') AS ACTIVE_RECORDS \
	FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND (ROW_STATUS_CD = 'LDONE' OR ROW_STATUS_CD = 'FAIL') ORDER BY ACTIVE_RECORDS ASC
BATCH.LD.GET.MASS_UPDT_RDC_IT=SELECT MASS_UPDT.* FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND (ROW_STATUS_CD = 'LDONE')
BATCH.LD.GET.MASS_UPDT_DATA=SELECT MASS_UPDT_DATA.* FROM CREQCMR.MASS_UPDT_DATA MASS_UPDT_DATA WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND SEQ_NO = :SEQ_NO
BATCH.MA.GET.MASS_UPDT=SELECT MASS_UPDT.* FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND ROW_STATUS_CD NOT IN ('DONE')
BATCH.MA.GET.CMR_ACTIVE_RECORDS=SELECT count(KUNNR) FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :CMR_NO AND KATR6 = :KATR6 AND MANDT= :MANDT AND LOEVM <> 'X' AND AUFSD <> '93'

BATCH.REACT_DEL_RECORDS=select admin.*, mass_updt.* \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.MASS_UPDT mass_updt \
 on admin.REQ_ID=mass_updt.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt.ITERATION_ID \
WHERE \
admin.REQ_ID = :REQ_ID \
and \
admin.ITERATION_ID = :ITERATION_ID \
and \
mass_updt.ROW_STATUS_CD = :STATUS 

BATCH.GET_MASS_UPDT_ENTITY=select * from CREQCMR.MASS_UPDT where PAR_REQ_ID = :REQ_ID and ITERATION_ID =:ITERATION_ID and CMR_NO =:CMR_NO
BATCH.GET_NEW_ADDR_FOR_UPDATE=select * \
from creqcmr.addr \
where import_ind = 'N' \
and req_id = :REQ_ID

BATCH.GET_UPDATED_ADDR_FOR_UPDATE=select * \
from creqcmr.addr \
where import_ind <> 'N' \
and req_id = :REQ_ID

BATCH.MONITOR_LEGACY_PENDING=select distinct a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s, TRANSCONN.HOSTDOWN h \
where a.REQ_TYPE = 'C' \
and a.REQ_STATUS = 'PCP' \
and s.PROCESSING_TYP = :PROC_TYPE \
and d.CMR_ISSUING_CNTRY = :ISSU_CNTRY \
and d.CUST_SUB_GRP IN ('REGULAR','PRIV') \
and a.REQ_ID = d.REQ_ID \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and h.HOST_SYSTEM = s.HOST_SYS_TYP \
and ((DAYOFWEEK (current timestamp) = OUTAGE_DAY AND TIME (current timestamp) BETWEEN OUTAGE_START_TIME AND OUTAGE_END_TIME) \
OR (OUTAGE_DAY = 9 AND TIME (current timestamp) BETWEEN OUTAGE_START_TIME AND OUTAGE_END_TIME)) \
and h.ENABLED = 'Y'

BATCH.GET.KNA1_MANDT_CMRNO=SELECT * FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND ZZKV_CUSNO =:CMR_NO

BATCH.GET.KNA1_ZZKV_CUSNO.US_FIND_MISSINGCMRNO=SELECT DISTINCT A.ZZKV_CUSNO AS CUSNO FROM SAPR3.KNA1 A WHERE LENGTH(TRIM(TRANSLATE(A.ZZKV_CUSNO, '', '0123456789 ' )))= 0 \
AND A.MANDT = :MANDT1 AND A.KATR6 = :KATR61 AND LENGTH(A.ZZKV_CUSNO) =7 AND A.ZZKV_CUSNO<>'' AND A.ZZKV_CUSNO LIKE :ZZKV_CUSNO1 AND \
NOT EXISTS (SELECT B.ZZKV_CUSNO FROM SAPR3.KNA1 B WHERE CAST(A.ZZKV_CUSNO AS INTEGER )+1 = CAST(B.ZZKV_CUSNO AS INTEGER) \
AND B.MANDT = :MANDT2 AND B.KATR6 = :KATR62 AND B.ZZKV_CUSNO LIKE :ZZKV_CUSNO2 AND B.ZZKV_CUSNO<>'' AND LENGTH(B.ZZKV_CUSNO)=7 \
AND LENGTH(TRIM( TRANSLATE( B.ZZKV_CUSNO, '', '0123456789 ' )))= 0 ORDER BY B.ZZKV_CUSNO) FETCH FIRST 100 ROWS ONLY WITH UR

BATCH.GET.KNA1_ZZKV_CUSNO.US_FIND_MISSINGCMRNO_MASSCRT=SELECT DISTINCT A.ZZKV_CUSNO AS CUSNO FROM SAPR3.KNA1 A WHERE LENGTH(TRIM(TRANSLATE(A.ZZKV_CUSNO, '', '0123456789 ' )))= 0 \
AND A.MANDT = :MANDT1 AND A.KATR6 = :KATR61 AND LENGTH(A.ZZKV_CUSNO) =7 AND A.ZZKV_CUSNO<>'' AND A.ZZKV_CUSNO LIKE :ZZKV_CUSNO1 AND \
NOT EXISTS (SELECT B.ZZKV_CUSNO FROM SAPR3.KNA1 B WHERE CAST(A.ZZKV_CUSNO AS INTEGER )+1 = CAST(B.ZZKV_CUSNO AS INTEGER) \
AND B.MANDT = :MANDT2 AND B.KATR6 = :KATR62 AND B.ZZKV_CUSNO LIKE :ZZKV_CUSNO2 AND B.ZZKV_CUSNO<>'' AND LENGTH(B.ZZKV_CUSNO)=7 \
AND LENGTH(TRIM( TRANSLATE( B.ZZKV_CUSNO, '', '0123456789 ' )))= 0 ORDER BY B.ZZKV_CUSNO) FETCH FIRST 100 ROWS ONLY WITH UR

BATCH.GET.KNA1_ZZKV_CUSNO.US_FIND_MISSINGCMRNO_PART=SELECT DISTINCT A.ZZKV_CUSNO AS CUSNO FROM SAPR3.KNA1 A WHERE LENGTH(TRIM(TRANSLATE(A.ZZKV_CUSNO, '', '0123456789 ' )))= 0 \
AND A.MANDT = :MANDT1 AND A.KATR6 = :KATR61 AND LENGTH(A.ZZKV_CUSNO) =7 AND A.ZZKV_CUSNO<>'' AND A.ZZKV_CUSNO LIKE :ZZKV_CUSNO1 AND \
NOT EXISTS (SELECT B.ZZKV_CUSNO FROM SAPR3.KNA1 B WHERE CAST(A.ZZKV_CUSNO AS INTEGER )+1 = CAST(B.ZZKV_CUSNO AS INTEGER) \
AND B.MANDT = :MANDT2 AND B.KATR6 = :KATR62 AND B.ZZKV_CUSNO LIKE :ZZKV_CUSNO2 AND B.ZZKV_CUSNO<>'' AND LENGTH(B.ZZKV_CUSNO)=7 \
AND LENGTH(TRIM( TRANSLATE( B.ZZKV_CUSNO, '', '0123456789 ' )))= 0 ORDER BY B.ZZKV_CUSNO)

BATCH.US_CMR_NO.GENERATE=with CMR_TABLE(id) as ( \
    select $MIN from SYSIBM.SYSDUMMY1     \
    union all \
    select id + 1 from CMR_TABLE where id < $MAX \
) \
select * from (select LPAD(id,7,'0') CMR_NO from CMR_TABLE) \
where CMR_NO not in (select ZZKV_CUSNO \
           from SAPR3.KNA1 \
                       where KATR6 = :LOC \
                       and MANDT = :MANDT) \
order by CMR_NO 

#JAPAN MASS UPDATE
JP.MASS.GET.CSBO.BY.POSTAL=SELECT POST_CD, CS_BO FROM CREQCMR.LOCN_CD_MAPPING WHERE CMR_ISSUING_CNTRY =:CMR_ISSUING_CNTRY AND POST_CD=:POST_CD
JP.MASS.GET.LOCN.BY.POSTAL=SELECT POST_CD, LOCN_CD FROM CREQCMR.LOCN_CD_MAPPING WHERE CMR_ISSUING_CNTRY =:CMR_ISSUING_CNTRY AND POST_CD=:POST_CD
JP.MASS.GET.MAPPED.FIELDS.BY.OFCD=SELECT OFFICE_CD,  ISIC_CD, MRC_CD, CLIENT_TIER_CD, ISU_CD_OVERRIDE, CLUSTER_ID FROM JPINTERIM.BO_CODES_MAP WHERE OFFICE_CD = :OFFICE_CD
JP.MASS.GET.ISIC.BY.JSIC=SELECT JSIC_CD, ISIC_CD FROM JPINTERIM.ISIC_TO_JSIC_MAP WHERE MANDT=:MANDT AND JSIC_CD=:JSIC_CD
JP.MASS.GET.SUBIND.ISU=SELECT ZZKV_SIC, BRAN1, BRSCH FROM SAPR3.ZZKV_SIC WHERE MANDT = :MANDT AND ZZKV_GEO='WW' AND ZZKV_SIC = :ZZKV_SIC
JP.MASS.PROCESS.PENDING=select a.* from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s where a.LOCK_IND ='N' and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M', 'N') and a.REQ_STATUS= 'PCP' and d.CMR_ISSUING_CNTRY = s.CNTRY_CD and s.AUTO_PROC_ENABLED = 'Y' \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') and s.PROCESSING_TYP ='TC'

AUTO.GET_MKTG_SVC_USCMR=select A11T0CUS.I_CUST_OFF_1 MKTG_DEPT,A11T0CUS.I_CUST_OFF_9 SVC_AR_OFFICE from {SCHEMA}.A11T0CUS A11T0CUS where A11T0CUS.I_CUST_ENTITY = :CMR_NO

IMPORT.US.USCMR=select A11T0CUS.I_CUST_ENTITY CMR_NO, A11T0CUS.I_TYPE_CUST_1 CUST_TYPE, A11T0CUS.F_COM_RESTRCT_IND RESTRICT_IND, A11T0CUS.C_COM_RESTRCT_CODE RESTRICT_TO,  \
       A11T0CUS.F_OEM_IND OEM_IND, A11T0CUS.I_BP_ACCOUNT_TYPE BP_ACCT_TYP, A11T0CUS.I_CUST_OFF_1 MKTG_DEPT, A11T0CUS.I_CUST_OFF_3 MTKG_AR_DEPT,  \
     A11T0CUS.I_CUST_OFF_4 PCC_MKTG_DEPT, A11T0CUS.I_CUST_OFF_5 PCC_AR_DEPT, A11T0CUS.I_CUST_OFF_9 SVC_AR_OFFICE, A11T0CUS.I_NSD_TERR_ZONE SVC_TERRITORY_ZONE,  \
     A11T0ADR.F_OCL OUT_CITY_LIMIT, A11T0CUS.I_CUST_OFF_2 CSO_SITE, A11T0ADR.F_FED_SITE FED_SITE_IND, A11T0ADR.C_ESTAB_SIZE SIZE_CD,  \
     A11T0CUS.F_MISC_BILLING MISC_BILL_CD, A11T0CUS.I_TYPE_CUST_3||I_TAX_CLASS_3 TAX_CD3, A11T0CUS.C_BUS_PART_CODE BP_NAME,  \
     A11T0CUS.C_ICC_TAX_CLASS ICC_TAX_CLASS, A11T0CUS.C_ICC_TE ICC_TAX_EXEMPT_STATUS, A11T0CUS.F_COM_IND NON_IBM_COMPANY_IND, \
     A11T0COM.N_CO_LEGAL COMPANY_NM,  \
     A11T0CUS.C_INTRNL_DIV DIV, A11T0CUS.C_INTRNL_DEPT DEPT, A11T0CUS.C_INTRNL_FUNC FUNC, A11T0CUS.C_INTRNL_USER USER, A11T0CUS.C_INTRNL_LOC LOC, \
     A11T0CUS.I_TYPE_CUST_2||I_TAX_CLASS_2 TAX_CD2, A11T0CUS.I_TYPE_CUST_1||I_TAX_CLASS_1 TAX_CD1, A11T0CUS.N_ABBREV ABBREV_NM, \
     A11T0CUS.C_TE_CERT_ST_1 TAX_EXEMPT_STATUS, \
     A11T0CUS.C_SIC_MEN SICMEN, \
     A11T0CUS.C_ESTAB_SIC ISIC, \
     A11T0ADR.I_CUST_ADDR_TYPE \
from {SCHEMA}.A11T0CUS A11T0CUS \
left outer join {SCHEMA}.A11T0COM A11T0COM \
   on A11T0CUS.I_CO = A11T0COM.I_CO \
left outer join {SCHEMA}.A11T0ADR A11T0ADR \
  on A11T0CUS.I_CUST_ENTITY =  A11T0ADR.I_CUST_ENTITY   \
  and A11T0ADR.I_CUST_ADDR_TYPE in (1,2) \
where A11T0CUS.I_CUST_ENTITY = :CMR_NO

IMPORT.US.USCMR.ADDR=select A11T0ADR.T_ADDR_LINE_1, A11T0ADR.T_ADDR_LINE_2, A11T0ADR.T_ADDR_LINE_3, A11T0ADR.T_ADDR_LINE_4, \
  A11T0ADR.N_ST, A11T0ADR.N_CITY, trim(VARCHAR_FORMAT(A11T0ADR.C_ZIP, '999999999')) POST_CD \
from {SCHEMA}.A11T0ADR A11T0ADR, {SCHEMA}.A11T0CUS A11T0CUS \
where A11T0CUS.I_CUST_ENTITY = A11T0ADR.I_CUST_ENTITY \
and A11T0CUS.I_CUST_ENTITY = :CMR_NO \
and ( \
  A11T0ADR.I_CUST_ADDR_TYPE = 2 \
  or \
  A11T0ADR.I_CUST_ADDR_TYPE = :ADDR_TYPE \
)

IMPORT.US.PDA=select CMR_US.I_CUST_ENTITY CMR_NO, CMR_US.I_TYPE_CUST_1 CUST_TYPE, CMR_US.F_COM_RESTRCT_IND RESTRICT_IND, CMR_US.C_COM_RESTRCT_CODE RESTRICT_TO,  \
       CMR_US.F_OEM_IND OEM_IND, CMR_US.I_BP_ACCOUNT_TYPE BP_ACCT_TYP, CMR_US.I_CUST_OFF_1 MKTG_DEPT, CMR_US.I_CUST_OFF_3 MTKG_AR_DEPT,  \
     CMR_US.I_CUST_OFF_4 PCC_MKTG_DEPT, CMR_US.I_CUST_OFF_5 PCC_AR_DEPT, CMR_US.I_CUST_OFF_9 SVC_AR_OFFICE, CMR_US.I_NSD_TERR_ZONE SVC_TERRITORY_ZONE,  \
     CMR_US.F_OCL OUT_CITY_LIMIT, CMR_US.I_CUST_OFF_2 CSO_SITE, CMR_US.F_FED_SITE FED_SITE_IND, CMR_US.C_ESTAB_SIZE SIZE_CD,  \
     CMR_US.F_MISC_BILLING MISC_BILL_CD, CMR_US.I_TYPE_CUST_3 || I_TAX_CLASS_3 TAX_CD3, CMR_US.C_BUS_PART_CODE BP_NAME, CMR_US.C_ICC_TAX_CLASS ICC_TAX_CLASS,  \
     CMR_US.C_ICC_TE ICC_TAX_EXEMPT_STATUS, CMR_US.F_COM_IND  NON_IBM_COMPANY_IND, \
     CMR_US.N_CO_LEGAL COMPANY_NM, CMR_US.C_INTRNL_DIV DIV,  \
     CMR_US.C_INTRNL_DEPT DEPT, CMR_US.C_INTRNL_FUNC FUNC, CMR_US.C_INTRNL_USER "USER", CMR_US.C_INTRNL_LOC LOC, \
     CMR_US.I_TYPE_CUST_2 || I_TAX_CLASS_2 TAX_CD2, CMR_US.I_TYPE_CUST_1 || I_TAX_CLASS_1 TAX_CD1, CMR_US.N_ABBREV ABBREV_NM, CMR_US.I_CUST_ADDR_TYPE \
from NZCCMS.CMR_US CMR_US \
where CMR_US.I_CUST_ENTITY = :CMR_NO

IMPORT.US.CODES=(select 'RESTRICT_TO' FIELD, C_COM_RESTRCT_CODE US_VAL, N_RESTRCT_ABBREV CMR_VAL \
from NZCCMS.CMR_US  \
where C_COM_RESTRCT_CODE = :RESTRICT_TO limit 1) \
union all \
(select 'BP_NAME' FIELD, C_BUS_PART_CODE US_VAL, N_BUS_PART_ABBREV CMR_VAL \
from NZCCMS.CMR_US  \
where C_BUS_PART_CODE = :BP_NAME limit 1)  

US.GETCODES.LOV=select 'RESTRICT_TO' FIELD, TXT \
from CREQCMR.LOV \
where CMR_ISSUING_CNTRY = '897' \
and FIELD_ID = '##RestrictToLookup' \
and CD = :RESTRICT_TO \
union all \
select 'BP_NAME' FIELD, TXT \
from CREQCMR.LOV \
where CMR_ISSUING_CNTRY = '897' \
and FIELD_ID = '##BPNameLookup' \
and CD = :BP_NAME
US.GETBPTYPE=SELECT BP_ACCOUNT_TYPE FROM SAPR3.BP_DATA WHERE MANDT = :MANDT AND KUNNR = :KUNNR
US.GET.US_TAX_DATA=SELECT * FROM USINTERIM.US_TAX_DATA WHERE MANDT= :MANDT AND KUNNR= :KUNNR
US.GET.KNVVEXT=select * from SAPR3.KNVV_EXT where KUNNR = :KUNNR and MANDT = :MANDT
US.GET.KNA1=select ktokd,aufsd from sapr3.kna1 where ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6='897' and aufsd<>'93'
US.GET.KNA1.KONZS=select konzs,ktokd from sapr3.kna1 where ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6='897' and aufsd<>'93'
US.GET.KNA1.KONZS_ZZKVNODE2=select konzs,zzkv_node2,ktokd from sapr3.kna1 where ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6='897' and aufsd<>'93'
US.GET.KNA1.ZZKV_LIC=select ktokd, ZZKV_LIC from sapr3.kna1 where ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6='897' and aufsd<>'93' AND KTOKD IN ('ZS01', 'ZI01')
US.MASSCRT.CLEANOLDITER=DELETE FROM CREQCMR.MASS_CREATE WHERE PAR_REQ_ID  = :REQ_ID AND ITERATION_ID < :ITERATION_ID
QUERY.US.STATE.PROV = select * from CMMA.REFT_STATE_PROV_W where STATE_PROV_CD = :STATE_PROV_CD

QUERY.GET.OLD_VAT_BY_REQID=select VAT,'' from CREQCMR.DATA_RDC where REQ_ID = :REQ_ID

#Mass Update Requests
REQUESTENTRY.MASS.UPDATE.FILE=update CREQCMR.ADMIN set ITERATION_ID = :ITERATION_ID, FILE_NAME = :FILE_NAME, MASS_UPDT_RDC_ONLY = :MASS_UPDT_RDC_ONLY  where REQ_ID = :REQ_ID
REQUESTENTRY.GET.ADMIN.RECORD=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID
REQUESTENTRY.GET.DATA.RECORD=select * from CREQCMR.DATA where REQ_ID = :REQ_ID
GET.MASS.UPDATE=select * from CREQCMR.MASS_UPDT where PAR_REQ_ID = :PAR_REQ_ID
UPDATE.MASS.UPDATE=update CREQCMR.MASS_UPDT set ITERATION_ID = :ITERATION_ID where PAR_REQ_ID = :PAR_REQ_ID AND SEQ_NO = :SEQ_NO
UPDATE.MASS.UPDATE.DATA=update CREQCMR.MASS_UPDT_DATA set ITERATION_ID = :ITERATION_ID where PAR_REQ_ID = :PAR_REQ_ID AND SEQ_NO = :SEQ_NO
GET.MASS.UPDATE.FAIL=select * from CREQCMR.MASS_UPDT where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID AND TRIM(ROW_STATUS_CD)='FAIL'
GET.MASS.UPDATE.DATA.BY.ID=select * from CREQCMR.MASS_UPDT_DATA where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID AND SEQ_NO = :SEQ_NO
GET.MASS.UPDATE.ADDR.BY.ID=select * from CREQCMR.MASS_UPDT_ADDR where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID AND SEQ_NO = :SEQ_NO
COMPLETE.MASS.UPDATE.DATA=update CREQCMR.MASS_UPDT set ROW_STATUS_CD = 'DONE' where PAR_REQ_ID = :PAR_REQ_ID
READY.MASS.UPDATE.DATA=update CREQCMR.MASS_UPDT set ROW_STATUS_CD = 'READY' where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.DATA=select * from CREQCMR.MASS_UPDT_DATA where PAR_REQ_ID = :PAR_REQ_ID
GET.MASS.UPDATE.ADDR=select * from CREQCMR.MASS_UPDT_ADDR where PAR_REQ_ID = :PAR_REQ_ID

#Reactivate and Delete Request Entry
REQUESTENTRY.REACTIVATE.GET_CMR_LIST=SELECT DISTINCT CMR_NO  FROM CREQCMR.MASS_UPDT where PAR_REQ_ID = :REQ_ID
REQUESTENTRY.REACTIVATE.GET_REMOVE_CMR=select * from CREQCMR.MASS_UPDT where PAR_REQ_ID = :REQ_ID and CMR_NO = :CMR_NO
REQUESTENTRY.REACT_DEL_REMOVE_CMR=delete from CREQCMR.MASS_UPDT where PAR_REQ_ID = :REQ_ID and CMR_NO = :CMR_NO
REQUESTENTRY.REACTIVATE.GET_MAX_SEQ_NO=select max(SEQ_NO) from CREQCMR.MASS_UPDT where PAR_REQ_ID = :REQ_ID

#Code Maintenance - Status Description
SYSTEM.STATUSDESC=select * \
from CREQCMR.STATUS_DESC \
order by STATUS_DESC

SYSTEM.STATUSDESCMAINT=select * \
from CREQCMR.STATUS_DESC \
where REQ_STATUS = :REQ_STATUS

QUERY.STATUSDESCR=select 1,'' from CREQCMR.STATUS_DESC where REQ_STATUS = :REQSTATUS

#Code Maintenance - Business Data Source
SYSTEM.BDS=select * \
from CREQCMR.BDS_TBL_INFO \
order by FIELD_ID

SYSTEM.BDSMAINT=select * \
from CREQCMR.BDS_TBL_INFO \
where FIELD_ID = :FIELD_ID

QUERY.BDS=select 1,'' from CREQCMR.BDS_TBL_INFO where FIELD_ID = :FIELDID

UTIL.GETISOCODE=select case when ISO_CNTRY_CD is not null then trim(ISO_CNTRY_CD) else null end ISO_CNTRY_CD, 1 \
from SAPR3.V_CNTRY_SYSCD_ISOCD \
where CMR_SYS_LOC_CD = :KATR6 \
and (MANDT = :MANDT or MANDT <> :MANDT) \
order by case when MANDT = :MANDT then 0 else 1 end


ADDRESS.GETNONUSCOUNTY=select trim(VARCHAR_FORMAT(C_CNTY,'000')), N_CNTY from CREQCMR.A11T0SCC where upper(trim(N_CITY)) = upper(:CITY) \
and ( \
 upper(trim(N_CITY)) in ('ABU DHABI', 'DUBAI') and trim(N_CITY) =  :CITY \
or \
 upper(trim(N_CNTY)) like :COUNTY and 'UN%' <> :COUNTY \
or \
 (upper(trim(N_CNTY)) in ('GREAT BRITAIN', 'ENGLAND', 'SCOTLAND', 'WALES', 'BRITAIN') ) and 'UN%' = :COUNTY \
    )  \
and N_ST = ''''''


ADDRESS.GETCNTRY=select COUNTRY_DESC from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY

BATCH.ISULOAD.GETISU=select BRSCH, ZZKV_CUSNO from SAPR3.KNA1 where ZZKV_CUSNO IN(:CMR_NO) and KATR6='897' and KTOKD in ('ZS01', 'ZI01') and MANDT = :MANDT WITH UR


# PROD ISSUES
REQENTRY.ISCLAIMED=select LOCK_IND, REQ_STATUS from CREQCMR.ADMIN where REQ_ID = :REQ_ID

#Code Maintenance - Field Label
SYSTEM.FIELDLBL=select * from CREQCMR.FIELD_LBL  where CMR_ISSUING_CNTRY like :CNTRY and FIELD_ID = :FIELD_ID order by FIELD_ID
QUERY.FIELDLBL=select 1,'' from CREQCMR.FIELD_LBL where FIELD_ID = :FIELDID and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY
SYSTEM.FLDLBLMAINT=select * from CREQCMR.FIELD_LBL where FIELD_ID=:FIELD_ID and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY
QUERY.CHECKFIELDLBL=select 1,'' from CREQCMR.FIELD_LBL where FIELD_ID=:FIELD_ID and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY


# R1.3 Mass Creates
MC.GETRECORD=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID
BATCH.MC.GET_PENDING_VALIDATION=select * \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
where a.REQ_TYPE = 'N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_STATUS in ('SVA', 'SV2')
MC.GET_PROC_CENTER=select PROC_CENTER_NM from CREQCMR.PROC_CENTER where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY

MC.GET_ISIC_SUBIND=select a.REFT_UNSIC_CD, b.INDCL_CD \
from CMMA.REFT_UNSIC_W a, CMMA.REFT_INDCL_W b \
where a.REFT_UNSIC_CD = :ISIC \
and a.GEO_CD = 'US' \
and a.REFT_INDCL_KEY = b.REFT_INDCL_KEY

MC.WW.GET_ISIC_SUBIND=select a.REFT_UNSIC_CD, b.INDCL_CD \
from CMMA.REFT_UNSIC_W a, CMMA.REFT_INDCL_W b \
where a.REFT_UNSIC_CD = :ISIC \
and a.GEO_CD = :GEO_CD \
and a.REFT_INDCL_KEY = b.REFT_INDCL_KEY 

MC.GET_MC_METADATA=select mc.*, a.FILE_NAME \
from CREQCMR.MASS_CREATE mc, CREQCMR.ADMIN a \
where mc.PAR_REQ_ID = :REQ_ID \
and a.REQ_ID = mc.PAR_REQ_ID \
and mc.ITERATION_ID = :ITER_ID  \
order by SEQ_NO 
MC.CHECK_MC_ITERATION=select 1 from CREQCMR.MASS_CREATE where PAR_REQ_ID = :REQ_ID and ITERATION_ID = :ITER_ID
BATCH.CHECK_FORCE_UPDATE.RDC=select * from CREQCMR.DATA_RDC where REQ_ID = :REQ_ID
GET.EMBARGO_CD_BY_REQID=SELECT EMBARGO_CD, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
GET.MASS.CREATE=select * from CREQCMR.MASS_CREATE where PAR_REQ_ID = :PAR_REQ_ID
BATCH.VALIDATE_STATE=select * \
from CMMA.REFT_STATE_PROV_W \
where STATE_PROV_CD = :STATE \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY \
                        from CMMA.REFT_COUNTRY_W \
                        where COUNTRY_CD = :CNTRY)
                        
BATCH.MASS_CREATE_DATA_RECORDS=select admin.*, mass_create.*  ,mass_create_data.* \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.MASS_CREATE mass_create \
 on admin.REQ_ID=mass_create.PAR_REQ_ID   \
left outer join CREQCMR.MASS_CREATE_DATA mass_create_data \
 on admin.REQ_ID=mass_create_data.PAR_REQ_ID   \
 and admin.ITERATION_ID=mass_create_data.ITERATION_ID \
and mass_create.PAR_REQ_ID=mass_create_data.PAR_REQ_ID  \
and mass_create.seq_No=mass_create_data.seq_no \
WHERE \
admin.REQ_ID = :REQ_ID \
and \
mass_create.ITERATION_ID = :ITERATION_ID \
and \
mass_create.ROW_STATUS_CD IN ('PASS', 'UFAIL')


BATCH.GET_MASS_CREATE_ENTITY=select * from CREQCMR.MASS_CREATE where PAR_REQ_ID = :REQ_ID and ITERATION_ID =:ITERATION_ID and CMR_NO =:CMR_NO

BATCH.GET_MASS_ADDR_ENTITY_CREATE_REQ=select * from CREQCMR.MASS_CREATE_ADDR where PAR_REQ_ID = :REQ_ID and ITERATION_ID = :ITERATION_ID AND ADDR_TYPE = :ADDR_TYPE AND SEQ_NO =:SEQ_NO

BATCH.MONITOR_TRANSCONN_MASSPROCESS=SELECT ADMIN.REQ_ID, NOTIFY_REQ.* \
FROM CREQCMR.ADMIN ADMIN \
LEFT OUTER JOIN TRANSCONN.NOTIFY_REQ NOTIFY_REQ \
 ON ADMIN.REQ_ID=NOTIFY_REQ.REQ_ID \
 LEFT OUTER JOIN CREQCMR.DATA DATA \
 ON ADMIN.REQ_ID=DATA.REQ_ID \
WHERE NOTIFIED_IND <> :NOTIFIED_IND \
AND ADMIN.REQ_TYPE = 'N' \
ORDER BY NOTIFY_REQ.CHANGE_TS

BATCH.MASS_CREATE_DATA_UFAIL_RECORDS=\
select admin.*, mass_create.*  ,mass_create_data.*  \
from CREQCMR.ADMIN admin  \
left outer join CREQCMR.MASS_CREATE mass_create \
 on admin.REQ_ID=mass_create.PAR_REQ_ID   and admin.ITERATION_ID=mass_create.ITERATION_ID \
left outer join CREQCMR.MASS_CREATE_DATA mass_create_data \
 on admin.REQ_ID=mass_create_data.PAR_REQ_ID   and admin.ITERATION_ID=mass_create_data.ITERATION_ID \
and mass_create.PAR_REQ_ID=mass_create_data.PAR_REQ_ID  and mass_create.seq_No=mass_create_data.seq_no \
WHERE \
admin.REQ_ID = :REQ_ID \
and admin.ITERATION_ID = :ITERATION_ID \
and admin.ITERATION_ID = mass_create.ITERATION_ID  \
and mass_create_data.ITERATION_ID = mass_create.ITERATION_ID \
and mass_create.SEQ_NO = mass_create_data.SEQ_NO \
and mass_create.ROW_STATUS_CD = :STATUS

# R1.4 Approvals
BATCH.APPROVAL.GETRECORDS=select * from CREQCMR.APPROVAL_REQ where STATUS in ('PMAIL', 'OVERP', 'PREM', 'PCAN') 

BATCH.APPR.GET_REJ_RECORDS=select * from CREQCMR.APPROVAL_REQ where STATUS = 'REJ' and REQ_ID = :REQ_ID  

APPROVAL.INIT.DOCCONTENT=select * from CREQCMR.LOV where FIELD_ID = '##DocContent' and CMR_ISSUING_CNTRY = '*'

APPROVAL.GETSOADMINDEFAPPROVALS=select * from CREQCMR.DEFAULT_APPROVALS where DEFAULT_APPROVAL_DESC='SO ADMIN Approval (JP)' and REQUEST_TYP=:REQUEST_TYP
APPROVAL.GETSOADMINRECIPIENTS=select * from CREQCMR.DEFAULT_APPROVAL_RECIPIENTS where DEFAULT_APPROVAL_ID= :DEFAULT_APPROVAL_ID

APPROVAL.GETBPMANAGERRECORD=select * from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and INTRANET_ID = 'BPMANAGER'

APPROVAL.GETTYPE=select * from CREQCMR.APPROVAL_TYP where TYP_ID = :TYP_ID and GEO_CD = :GEO_CD
QUERY.APPROVAL.GET_TYPE_DESC=select DESCRIPTION, TITLE from CREQCMR.APPROVAL_TYP where TYP_ID = :TYP_ID

BATCH.APPROVAL.GETCMT=select * \
from CREQCMR.APPROVAL_COMMENTS \
where upper(CREATE_BY) = :CREATE_BY \
and APPROVAL_ID = :APPROVAL_ID \
and ( \
  (STATUS = :STATUS and STATUS = 'PCAN') \
or \
  (STATUS in ('DRA','PMAIL' ,'OVERP') and 'PCAN' <> :STATUS) \
) \
order by case when STATUS = 'OVERP' then 0 when  STATUS = 'PMAIL' then 1 else 2 end, CREATE_TS desc


BATCH.APPR.GET_REJ_CMT=select * \
from CREQCMR.APPROVAL_COMMENTS \
where APPROVAL_ID = :APPROVAL_ID \
and STATUS = 'REJ' 

BATCH.EMAILENGINE.GETMETA=select * from \
CREQCMR.ADMIN a \
left outer join CREQCMR.DATA d \
 on a.REQ_ID = d.REQ_ID \
where a.REQ_ID = :REQ_ID
BATCH.EMAILENGINE.GETMETARDC=select * from \
CREQCMR.DATA_RDC d \
where d.REQ_ID = :REQ_ID

BATCH.EMAILENGINE.GETADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID
BATCH.EMAILENGINE.GETDATA=select * from CREQCMR.DATA where REQ_ID = :REQ_ID
BATCH.EMAILENGINE.GETCMRISSUINGCNTRY=select CMR_ISSUING_CNTRY from CREQCMR.DATA where REQ_ID = :REQ_ID
BATCH.EMAILENGINE.GETTOTAL.UPDT=select count(1)||'' \
from CREQCMR.MASS_UPDT m, CREQCMR.ADMIN a \
where a.REQ_ID = m.PAR_REQ_ID \
and a.ITERATION_ID = m.ITERATION_ID \
and a.REQ_ID = :REQ_ID \
and a.ITERATION_ID = :ITERATION_ID
BATCH.EMAILENGINE.GETTOTAL.CREATE=select count(1)||'' \
from CREQCMR.MASS_CREATE m, CREQCMR.ADMIN a \
where a.REQ_ID = m.PAR_REQ_ID \
and a.ITERATION_ID = m.ITERATION_ID \
and a.REQ_ID = :REQ_ID \
and a.ITERATION_ID = :ITERATION_ID
BATCH.EMAILENGINE.GETUPDTENT=select m.* \
from CREQCMR.MASS_UPDT_DATA m, CREQCMR.ADMIN a \
where a.REQ_ID = m.PAR_REQ_ID \
and a.ITERATION_ID = m.ITERATION_ID \
and a.REQ_ID = :REQ_ID \
and a.ITERATION_ID = 0
APPROVAL.GETRECORD=select * from CREQCMR.APPROVAL_REQ where APPROVAL_ID = :APPROVAL_ID
APPROVAL.GETREQUESTER=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID
APPROVAL.GETSTATUS=select TXT from CREQCMR.LOV where CD = :CD and FIELD_ID = '##ApprovalStatus'
APPROVAL.CHECKIFALLAPPROVED=select 1 from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS in ('PAPR', 'PMAIL', 'PREM', 'REJ')
APPROVAL.CHECKIFREJAPPROVED=SELECT DISTINCT(1) FROM CREQCMR.APPROVAL_REQ a, CREQCMR.APPROVAL_hist b WHERE a.approval_id=b.approval_id AND b.status='REJ' AND REQ_ID = :REQ_ID
APPROVAL.CHECKIFCONDAPPROVED=select 1 from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS in ('CAPR')
APPROVAL.CHECKIFCONDCANCELLED=select 1 from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS in ('CCAN')
APPROVAL.GET_REQ_STATUS=select count(*) from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS = 'REJ'
APPROVAL.GETPROCCENTER=select p.PROC_CENTER_NM \
from CREQCMR.PROC_CENTER p, CREQCMR.DATA d \
where d.REQ_ID = :REQ_ID \
and p.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY
APPROVAL.DEFUNCTOTHERS=update CREQCMR.APPROVAL_REQ set STATUS = 'DFNCT', LAST_UPDT_TS = current timestamp, LAST_UPDT_BY = 'CreateCMR' \
where REQ_ID = :REQ_ID \
and APPROVAL_ID <> :APPROVAL_ID \
and STATUS not in ('OBSLT', 'CAN', 'DRA', 'PCAN')

BATCH.GET_ENTERPRISE_DATA=select * from CREQCMR.ADMIN where REQ_TYPE ='E' AND RDC_PROCESSING_STATUS NOT IN ('C','W','N')

APPROVAL_TYP=select TYP_ID, TITLE from CREQCMR.APPROVAL_TYP \
where GEO_CD = 'WW' or GEO_CD in (select GEO_CD from CREQCMR.CNTRY_GEO_DEF where CMR_ISSUING_CNTRY = :CMR_CNTRY)
APPROVALS.GET.BYREQID=select app.*, lov.TXT STATUS_STR, nvl(def.APPROVAL_MAIL_CONTENT, type.title) TYPE \
from CREQCMR.APPROVAL_REQ app \
left outer join CREQCMR.DEFAULT_APPROVALS def \
     on app.DEFAULT_APPROVAL_ID = def.DEFAULT_APPROVAL_ID \
     and app.DEFAULT_APPROVAL_ID > 0 \
left outer join CREQCMR.LOV lov  \
     on app.STATUS = lov.CD \
     and '##ApprovalStatus' = lov.FIELD_ID \
left outer join CREQCMR.APPROVAL_TYP type \
     on app.TYP_ID = type.TYP_ID \
where app.REQ_ID = :REQ_ID order by lov.TXT asc
APPROVAL.GETTYPE.BYTYPID=select * from CREQCMR.APPROVAL_TYP where TYP_ID = :TYP_ID
QUERY.CHECKAPPROVAL=select 1,'' from CREQCMR.APPROVAL_REQ where REQ_ID=:REQ_ID \
and TYP_ID=:TYP_ID and INTRANET_ID=:INTRANET_ID \
and STATUS not in ('CAN', 'OBSLT')

APPROVAL.GETCOMMENTS=select c.APPROVAL_CMT_ID, c.APPROVAL_ID, status.TXT STATUS, \
       case when trim(c.REJ_REASON) <> '' then 'Reason:'||(case when reject.TXT is null then '' else reject.TXT end)||' - '||c.COMMENTS else c.COMMENTS end COMMENTS, \
       c.REJ_REASON, c.CREATE_TS, c.CREATE_BY \
from CREQCMR.APPROVAL_REQ r,CREQCMR.APPROVAL_COMMENTS c \
left outer join CREQCMR.LOV status \
  on c.STATUS = status.CD \
  and status.FIELD_ID = '##ApprovalStatus' \
left outer join CREQCMR.LOV reject \
  on c.REJ_REASON = reject.CD \
  and reject.FIELD_ID = '##ApprovalRejReason' \
where r.APPROVAL_ID = c.APPROVAL_ID \
and r.REQ_ID = :REQ_ID \
and r.APPROVAL_ID = :APPROVAL_ID \
order by c.CREATE_TS desc

APPROVAL.GETDEFUNCT=select * from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS = 'DFNCT'
APPROVAL.GETALLUNDERREQ=select * from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS <> 'OBSLT'
APPROVAL.GETRESULT=select STATUS, LAST_UPDT_TS from CREQCMR.APPROVAL_REQ where REQ_ID=:REQ_ID ORDER BY LAST_UPDT_TS DESC
APPROVAL.GETDRAFT=select * from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS = 'DRA'
APPROVAL.GETLATESTTS=select to_char(max(LAST_UPDT_TS),'YYYY-MM-DD HH24:MI:SS') from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID
APPROVAL.GETRECORDS_FOR_EDITREQ=select * from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and STATUS not in ('CAN', 'PCAN', 'OBSLT', 'DRA')

APPROVAL_TYP.GET_ALL=select * \
from CREQCMR.APPROVAL_TYP 

APPROVAL_TYP.GET_MAX_ID=select max(TYP_ID) from CREQCMR.APPROVAL_TYP
APPROVAL_TYP.CHECK_REQUESTS=select * from CREQCMR.APPROVAL_REQ where TYP_ID = :TYP_ID and GEO_CD = :GEO_CD
APPROVAL_TYP.CHECK_DEFAULTS=select * from CREQCMR.DEFAULT_APPROVALS where TYP_ID = :TYP_ID and GEO_CD = :GEO_CD

BATCH.MASS_CREATE_DATA_CMR_RECORDS=\
select admin.*, mass_create.*  ,mass_create_data.*  \
from CREQCMR.ADMIN admin  \
left outer join CREQCMR.MASS_CREATE mass_create \
 on admin.REQ_ID=mass_create.PAR_REQ_ID   and admin.ITERATION_ID=mass_create.ITERATION_ID \
left outer join CREQCMR.MASS_CREATE_DATA mass_create_data \
 on admin.REQ_ID=mass_create_data.PAR_REQ_ID   and admin.ITERATION_ID=mass_create_data.ITERATION_ID \
and mass_create.PAR_REQ_ID=mass_create_data.PAR_REQ_ID  and mass_create.seq_No=mass_create_data.seq_no \
WHERE \
admin.REQ_ID = :REQ_ID \
and admin.ITERATION_ID = :ITERATION_ID \
and admin.ITERATION_ID = mass_create.ITERATION_ID  \
and mass_create_data.ITERATION_ID = mass_create.ITERATION_ID \
and mass_create.SEQ_NO = mass_create_data.SEQ_NO \
and mass_create.ROW_STATUS_CD <> 'READY' \
order by mass_create.SEQ_NO

QUERY.CHECKREQUESTBYID=select 'Y',REQ_TYPE from CREQCMR.ADMIN where REQ_ID = :REQID

NEWREQUEST.TYPES=select lov.CD, (case when lov.CNTRY_CD = '897' AND lov.CD='E' then 'Update Enterprise Name' else lov.TXT END) AS TXT from ( \
select lov.CD, lov.TXT, lov.DISP_ORDER, sup.SUPP_REQ_TYPE, sup.CNTRY_CD \
from CREQCMR.LOV lov, CREQCMR.SUPP_CNTRY sup \
where lov.FIELD_ID = '##SearchRequestType'  \
) lov \
where lov.CNTRY_CD = substr(:CNTRY,1,3) \
and LOCATE(lov.CD, lov.SUPP_REQ_TYPE) <> 0 \
order by lov.DISP_ORDER



SYSTEM.SUPP_CNTRY_BY_CNTRY_CD=select * from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY_CD
SYSTEM.SUPP_CNTRY=select * from CREQCMR.SUPP_CNTRY order by NM
SUPP_CNTRY.CHECK_URL=select 1,'' from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY_CD

SYSTEM.ROLES_BY_ROLES_ID=select * from CMMA.ROLES where ROLE_ID= :ROLE_ID
SYSTEM.ROLES=select * from CMMA.ROLES
ROLES.CHECK_URL=select 1,'' from CMMA.ROLES where ROLE_ID= :ROLE_ID

SYSTEM.STATUS_ACT_BY_ACTION=select * from CREQCMR.STATUS_ACT where ACTION = :ACTION
SYSTEM.STATUS_ACT=select * from CREQCMR.STATUS_ACT
STATUS_ACT.CHECK_URL=select 1,'' from CREQCMR.STATUS_ACT where ACTION = :ACTION

IMPORT.LA.SALESBRANCHOFFICE.CODE=SELECT DISTINCT MRC_CD FROM CREQCMR.SALES_BRANCH_OFF WHERE (ISSUING_CNTRY=:CNTRY OR ISSUING_CNTRY='*') AND SALES_BO_CD=:SORTL
IMPORT.LA.MRC.ISU=SELECT ISU FROM CREQCMR.MRC_ISU WHERE (ISSUING_CNTRY=:CNTRY OR ISSUING_CNTRY='*') AND MRC_CD=:MRCCD


PDF.GETDETAILS=select a.REQ_ID, typ.TXT REQ_TYPE, a.REQUESTER_NM, a.ORIGINATOR_NM,  \
       a.MAIN_CUST_NM1||(case when a.MAIN_CUST_NM2 is null then '' else ' '||a.MAIN_CUST_NM2 end) MAIN_CUST_NM1,  \
       lob.TXT REQUESTING_LOB, reas.TXT REQ_REASON, data.CMR_ISSUING_CNTRY||' - '||l_sys.SYS_LOC_DESC CMR_ISSUING_CNTRY,  \
       l_lang.LANG_DESC CUST_PREF_LANG, data.SUB_INDUSTRY_CD||' - '||l_subind.INDCL_DESC SUB_INDUSTRY_CD, data.ISIC_CD||' - '||l_sic.REFT_UNSIC_DESC ISIC_CD,  \
       case when data.ISU_CD is not null then data.ISU_CD||' - '||l_isu.ISU_DESC else '' end ISU_CD, \
       case when data.CLIENT_TIER is not null then data.CLIENT_TIER||' - '||l_tier.QUAD_CLIENT_DESC else '' end CLIENT_TIER, a.*, \
       data.CMR_ISSUING_CNTRY SYS_LOC, \
       data.* \
from CREQCMR.ADMIN a  \
left outer join CREQCMR.DATA data  \
  on a.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.LOV typ  \
  on a.REQ_TYPE = typ.CD  \
  and typ.FIELD_ID = '##SearchRequestType'  \
left outer join CREQCMR.LOV lob  \
  on a.REQUESTING_LOB = lob.CD  \
  and lob.FIELD_ID = '##RequestingLOB'  \
left outer join CREQCMR.LOV reas  \
  on a.REQ_REASON = reas.CD  \
  and reas.FIELD_ID = '##RequestReason'  \
left outer join CMMA.REFT_SYS_LOC_W l_sys  \
  on data.CMR_ISSUING_CNTRY = l_sys.SYS_LOC_CD  \
left outer join CMMA.REFT_LANG_W l_lang  \
  on data.CUST_PREF_LANG = l_lang.LANG_CD  \
left outer join CMMA.REFT_INDCL_W l_subind  \
  on data.SUB_INDUSTRY_CD = l_subind.INDCL_CD  \
left outer join CMMA.REFT_UNSIC_W l_sic  \
  on data.ISIC_CD = l_sic.REFT_UNSIC_CD  \
  and l_sic.GEO_CD = case when data.CMR_ISSUING_CNTRY = '897' then 'US' else 'WW' end \
left outer join CMMA.REFT_ISU_W l_isu  \
  on data.ISU_CD = l_isu.ISU_CD  \
left outer join CMMA.REFT_CLIENT_TIER_W l_tier \
  on data.CLIENT_TIER = l_tier.QUAD_CLIENT_CD \
where a.REQ_ID = :REQ_ID

PDF.GETADDRESS=select a.REQ_ID, nvl(case when l_addr_type.TXT is null then l_addr_type_all.TXT else l_addr_type.TXT end||' ('||a.ADDR_TYPE||')', a.ADDR_TYPE) ADDR_TYPE,  \
       a.ADDR_SEQ, a.CUST_NM1, a.CUST_NM2, a.CUST_NM3, a.CUST_NM4,  \
       a.ADDR_TXT, a.CITY1, a.CITY2, l_state.STATE_PROV_DESC STATE_PROV, a.POST_CD, l_cntry.COUNTRY_DESC LAND_CNTRY, a.COUNTY, a.BLDG,  \
       a.FLOOR, a.OFFICE, a.DEPT, a.PO_BOX, a.PO_BOX_CITY, a.PO_BOX_POST_CD, a.CUST_FAX, a.CUST_LANG_CD, a.CUST_PHONE,  \
       a.TRANSPORT_ZONE, a.ADDR_STD_RESULT, a.ADDR_STD_ACCEPT_IND, a.ADDR_STD_REJ_REASON, a.ADDR_STD_REJ_CMT,  \
       a.ADDR_STD_TS, a.SAP_NO, a.IMPORT_IND, a.DPL_CHK_RESULT, a.DPL_CHK_INFO, a.DPL_CHK_TS, a.DPL_CHK_BY_ID,  \
       a.DPL_CHK_BY_NM, a.DPL_CHK_ERR_LIST, a.RDC_CREATE_DT, a.RDC_LAST_UPDT_DT, a.DIVN, a.ADDR_TXT_2,  \
       a.COUNTY_NAME, a.STD_CITY_NM, a.LOCN_CD, a.TAX_CD_1, a.TAX_CD_2, a.VAT, a.TC_PROCESSED_INDC,  \
       a.PAIRED_ADDR_SEQ, a.IERP_SITE_PRTY_ID, a.TAX_OFFICE, a.BILLING_PSTL_ADDR \
from CREQCMR.ADDR a \
left outer join CREQCMR.DATA d \
  on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.LOV l_addr_type \
  on a.ADDR_TYPE =  l_addr_type.CD \
  and l_addr_type.FIELD_ID = '##AddressType'    \
  and d.CMR_ISSUING_CNTRY = l_addr_type.CMR_ISSUING_CNTRY \
left outer join CREQCMR.LOV l_addr_type_all \
  on a.ADDR_TYPE =  l_addr_type_all.CD \
  and l_addr_type_all.FIELD_ID = '##AddressType'    \
  and l_addr_type_all.CMR_ISSUING_CNTRY = '*' \
left outer join CMMA.REFT_COUNTRY_W l_cntry \
  on a.LAND_CNTRY =  l_cntry.COUNTRY_CD \
left outer join CMMA.REFT_STATE_PROV_W l_state \
  on a.STATE_PROV =  l_state.STATE_PROV_CD \
  and l_cntry.REFT_COUNTRY_KEY = l_state.REFT_COUNTRY_KEY \
where a.REQ_ID = :REQ_ID \
and a.ADDR_TYPE not like 'X%' and a.ADDR_SEQ not like 'X%' \
order by case when l_addr_type.TXT is null then l_addr_type_all.DISP_ORDER  \
              else l_addr_type.DISP_ORDER  \
         end, a.ADDR_SEQ  

#For Italy PDF
PDF.GETADDRESS.IT=select a.REQ_ID, case when l_addr_type.TXT is null then l_addr_type_all.TXT else l_addr_type.TXT end||' ('||a.ADDR_TYPE||')' ADDR_TYPE,  \
       a.ADDR_SEQ, a.CUST_NM1, a.CUST_NM2, a.CUST_NM3, a.CUST_NM4,  \
       a.ADDR_TXT, a.CITY1, a.CITY2, CASE WHEN l_state.STATE_PROV_DESC IS NULL THEN a.STATE_PROV ELSE l_state.STATE_PROV_DESC END STATE_PROV, a.POST_CD, l_cntry.COUNTRY_DESC LAND_CNTRY, a.COUNTY, a.BLDG,  \
       a.FLOOR, a.OFFICE, a.DEPT, a.PO_BOX, a.PO_BOX_CITY, a.PO_BOX_POST_CD, a.CUST_FAX, a.CUST_PHONE,  \
       a.TRANSPORT_ZONE, a.ADDR_STD_RESULT, a.ADDR_STD_ACCEPT_IND, a.ADDR_STD_REJ_REASON, a.ADDR_STD_REJ_CMT,  \
       a.ADDR_STD_TS, a.SAP_NO, a.IMPORT_IND, a.DPL_CHK_RESULT, a.DPL_CHK_INFO, a.DPL_CHK_TS, a.DPL_CHK_BY_ID,  \
       a.DPL_CHK_BY_NM, a.DPL_CHK_ERR_LIST, a.RDC_CREATE_DT, a.RDC_LAST_UPDT_DT, a.DIVN, a.ADDR_TXT_2,  \
       a.COUNTY_NAME, a.STD_CITY_NM, a.LOCN_CD, a.TAX_CD_1, a.TAX_CD_2, a.VAT, a.TC_PROCESSED_INDC,  \
       a.PAIRED_ADDR_SEQ, a.IERP_SITE_PRTY_ID, a.TAX_OFFICE, a.BILLING_PSTL_ADDR \
from CREQCMR.ADDR a \
left outer join CREQCMR.DATA d \
  on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.LOV l_addr_type \
  on a.ADDR_TYPE =  l_addr_type.CD \
  and l_addr_type.FIELD_ID = '##AddressType'    \
  and d.CMR_ISSUING_CNTRY = l_addr_type.CMR_ISSUING_CNTRY \
left outer join CREQCMR.LOV l_addr_type_all \
  on a.ADDR_TYPE =  l_addr_type_all.CD \
  and l_addr_type_all.FIELD_ID = '##AddressType'    \
  and l_addr_type_all.CMR_ISSUING_CNTRY = '*' \
left outer join CMMA.REFT_COUNTRY_W l_cntry \
  on a.LAND_CNTRY =  l_cntry.COUNTRY_CD \
left outer join CMMA.REFT_STATE_PROV_W l_state \
  on a.STATE_PROV =  l_state.STATE_PROV_CD \
  and l_cntry.REFT_COUNTRY_KEY = l_state.REFT_COUNTRY_KEY \
where a.REQ_ID = :REQ_ID \
order by case when l_addr_type.TXT is null then l_addr_type_all.DISP_ORDER  \
              else l_addr_type.DISP_ORDER  \
         end, a.ADDR_SEQ 

PDF.GETCMRS=select u.CMR_NO from CREQCMR.MASS_UPDT u, CREQCMR.ADMIN a \
where u.PAR_REQ_ID = a.REQ_ID \
and a.ITERATION_ID = u.ITERATION_ID \
and a.REQ_ID = :REQ_ID \
order by u.CMR_NO

REFT_ISU.VALIDCODES=select ISU_CD from CMMA.REFT_ISU_W

ENTERPRISE.MASS.UPDATE.DATA.DONE=update CREQCMR.MASS_UPDT set ROW_STATUS_CD = 'DONE' where PAR_REQ_ID = :PAR_REQ_ID
ENTERPRISE.MASS.UPDATE.DATA.RDCER=update CREQCMR.MASS_UPDT set ROW_STATUS_CD = 'RDCER' where PAR_REQ_ID = :PAR_REQ_ID

SYSTEM.SCCLIST=select * \
from CREQCMR.US_CMR_SCC \
where trim(N_CITY) like :CITY \
and trim(N_CNTY) like :COUNTY \
and trim(N_ST) like :STATE \
and trim(LAND_CNTRY) like :LAND \
order by N_CITY, N_CNTY

SYSTEM.BPILIST=select * \
from SAPR3.US_BP_INT_CODES \
where trim(BP_CODE) like :BPCODE \
and trim(BP_ABBREV_NM) like :ABBREVNM \
and trim(BP_FULL_NM) like :FULLNM \
and MANDT = :MANDT \
order by BP_CODE, BP_ABBREV_NM

SYSTEM.RSTLIST=select * \
from SAPR3.US_RESTRICT_CODES \
where trim(RESTRICT_TO_CD) like :RSTCODE \
and trim(RESTRICT_TO_ABBREV_NM) like :ABBREVNM \
and trim(RESTRICT_TO_NM) like :RSTNM \
and MANDT = :MANDT \
order by RESTRICT_TO_CD, RESTRICT_TO_ABBREV_NM
QUERY.SCCSTATES=select distinct N_ST,N_ST from CREQCMR.US_CMR_SCC
QUERY.SCCLANDS=SELECT COUNTRY_CD,'' FROM CMMA.REFT_COUNTRY_W

SYSTEM.GETSCC=select * \
from CREQCMR.US_CMR_SCC \
where trim(upper(N_ST)) = :STATE \
and trim(upper(N_CITY)) = :CITY \
and trim(upper(N_CNTY)) = :COUNTY 

SYSTEM.GETSCC2=select * \
from CREQCMR.US_CMR_SCC \
where SCC_ID = :SCCID 

SYSTEM.GETBPI2=select * \
from SAPR3.US_BP_INT_CODES \
where MANDT = :MANDT AND \
 trim(BP_CODE) = :BPCODE \

SYSTEM.GETRST2=select * \
from SAPR3.US_RESTRICT_CODES \
where MANDT = :MANDT AND \
 trim(RESTRICT_TO_CD) = :RSTCODE 

QUERY.VALIDATOR.GETCCITY=select C_CITY,LAND_CNTRY,'' \
from CREQCMR.US_CMR_SCC \
where SCC_ID = :SCCID \

QUERY.SCCCOUNTRIES=select distinct N_CNTY,'' \
from CREQCMR.US_CMR_SCC \
where N_ST = '''''' \
order by N_CNTY
QUERY.CNAE.ISU_CD = select ISU_CD,ISU_ABBREV_DESC from CMMA.REFT_ISU_W 

SCC.GET_STATE_KEY=select s.REFT_STATE_PROV_KEY||'' \
from CMMA.REFT_STATE_PROV_W s \
where s.STATE_PROV_CD  = :STATE \
and s.REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = 'US')

SCC.GET_MAX_CNTY=select max(C_CNTY)||'' \
from CREQCMR.US_CMR_SCC \
where N_ST = :STATE \
and trim(upper(N_CITY)) = :CITY

SCC.GET_MAX_ID=select max(SCC_ID)||'' \
from CREQCMR.US_CMR_SCC
 
QUERY.VALIDATOR.SCC_RECORD=select SCC_ID, '' \
from CREQCMR.US_CMR_SCC \
where C_ST = :C_ST \
and C_CITY = :C_CITY \
and C_CNTY = :C_CNTY

GET.RDC.CHANGELOG=select * from sapr3.changelog where MANDT=:MANDT AND KUNNR=:KUNNR

QUERY.VALIDATOR.SCC_RECORD_NONUS=select SCC_ID, '' \
from CREQCMR.US_CMR_SCC \
where LAND_CNTRY = :N_LAND \
and C_CITY = :C_CITY
 
QUERY.SCC_NST=select C_ST, '' \
from CREQCMR.US_CMR_SCC \
where N_ST = :N_ST 

SCC.GET_MAX_CITY=select max(C_CITY)||'' \
from CREQCMR.US_CMR_SCC \
where N_ST = :STATE \
and trim(upper(N_CNTY)) = :COUNTY
IMPORT.LA.CLIENTTIER_CODE=SELECT CLIENT_TIER_CD FROM CREQCMR.MRC_ISU WHERE MRC_CD=:MRCCD AND ISU=:ISUCD   

#Release 1.5 changes
CHANGELOG.GET_ADMIN_DETAILS=select * from CREQCMR.ADMIN where REQ_ID = :REQ_ID
CHANGELOG.SEARCH=select * from CREQCMR.REQUEST_CHANGE_LOG where trim(upper(USER_ID)) like :USER_ID 
CHANGELOG.TABLE=select TXT, TXT from creqcmr.lov where field_id = '##ChangeLogTable' order by DISP_ORDER
CHANGELOG.COUNTRYUSE_CD1=select CD,TXT from CREQCMR.LOV where FIELD_ID = '##SysLocExtension'  \
and CMR_ISSUING_CNTRY in (select CNTRY_CD from CREQCMR.SUPP_CNTRY)  \
and CD like :CNTRY_CD
CHANGELOG.COUNTRYUSE_CD2=select SYS_LOC_CD,'' from CMMA.REFT_SYS_LOC_W \
where SYS_LOC_CD in (select CNTRY_CD from CREQCMR.SUPP_CNTRY) \
and SYS_LOC_CD = :CNTRY_CD and SYS_LOC_DESC = :CNTRY_NM 
CHANGELOG.CMRISSUINGCOUNTRY=select SYS_LOC_DESC||' - '||SYS_LOC_CD, SYS_LOC_CD, SYS_LOC_DESC \
from CMMA.REFT_SYS_LOC_W \
where SYS_LOC_CD in (select CNTRY_CD from CREQCMR.SUPP_CNTRY) \
union \
select TXT||' - '||CMR_ISSUING_CNTRY TXT, TXT , CD \
from CREQCMR.LOV \
where FIELD_ID = '##SysLocExtension' \
and CMR_ISSUING_CNTRY in (select CNTRY_CD from CREQCMR.SUPP_CNTRY) \
order by 1

CHANGELOG.GET_RDC_BY_KATR6_AND_ZZKV_CUSNO=select k.KATR6, k.ZZKV_CUSNO, k.KTOKD, c.CHGTS, c.TAB, c.FIELD, c."OLD", c."NEW", \
       C.USERID, a.REQ_ID, nvl(typ.TXT,a.REQ_TYPE) REQ_TYPE, a.REQUESTER_ID, nvl(lob.TXT,a.REQUESTING_LOB) LOB, nvl(reas.TXT,a.REQ_REASON) REASON \
from SAPR3.KNA1 k, SAPR3.CHANGELOG c \
left outer join CREQCMR.ADMIN a \
  on a.REQ_ID||'' = c.LINENUMBER \
  and c.LOADFILENAME in ('Create', 'Update', 'Mass Create', 'Mass Update') \
left outer join CREQCMR.DATA d \
  on a.REQ_ID = d.REQ_ID \
left outer join CREQCMR.LOV reas \
  on reas.CMR_ISSUING_CNTRY = '*' \
  and reas.FIELD_ID = '##RequestReason' \
  and a.REQ_REASON = reas.CD \
left outer join CREQCMR.LOV lob \
  on lob.CMR_ISSUING_CNTRY = '*' \
  and lob.FIELD_ID = '##RequestingLOB' \
  and a.REQUESTING_LOB = lob.CD \
left outer join CREQCMR.LOV typ \
  on typ.CMR_ISSUING_CNTRY = '*' \
  and typ.FIELD_ID = '##SearchRequestType' \
  and a.REQ_TYPE = typ.CD \
where k.MANDT = c.MANDT \
and k.KUNNR = c.KUNNR \
and k.KATR6 = :KATR6 \
and k.ZZKV_CUSNO = :ZZKV_CUSNO \
order by c.CHGTS desc

CHANGELOG.GET_LEGACY_BY_ZZKV_CUSNO=SELECT \
	I_TABLE, \
	I_CUST_ENTITY, \
	A_LEVEL_1_VALUE, \
	A_LEVEL_2_VALUE, \
	A_LEVEL_3_VALUE, \
	A_LEVEL_4_VALUE, \
	A_LEVEL_5_VALUE, \
	A_LEVEL_6_VALUE, \
	A_LEVEL_7_VALUE, \
	A_LEVEL_8_VALUE, \
	I_ENT, \
	I_CO, \
	C_REASON, \
	I_ACTIV_SEQ, \
	I_OPRTR_SERIAL, \
	C_CHANGE_OPRTR_LOC, \
	D_CHANGE, \
	D_CUST_CHANGE_EFF, \
	H_CHANGE_STAMP, \
	N_CHANGE_OPRTR, \
	N_ABBREV, \
	I_CUST_OFF_1, \
	I_CUST_OFF_2, \
	I_CUST_OFF_3, \
	I_CUST_OFF_4, \
	I_CUST_OFF_5, \
	I_CUST_OFF_6, \
	I_CUST_OFF_7, \
	I_CUST_OFF_8, \
	I_CUST_OFF_9, \
	N_CO_LEGAL, \
	C_REASON_DELTN, \
	A_CHANGE_VALUE \
FROM \
	CREQCMR.A11T0HIS \
WHERE \
	I_CUST_ENTITY = :ZZKV_CUSNO

DEFAULT_APPROVALS.BY_REQUEST_TYP=select * \
from CREQCMR.DEFAULT_APPROVALS app \
where app.REQUEST_TYP = :REQUEST_TYP \
and exists (select 1 \
            from CREQCMR.DEFAULT_APPROVAL_CONDITIONS cond \
            where cond.DEFAULT_APPROVAL_ID = app.DEFAULT_APPROVAL_ID \
            and upper(cond.FIELD_ID) = 'CMRISSUINGCNTRY' \
            and cond.VALUE like :COUNTRY)

            
DEFAULT_APPROVAL_CONDITIONS.BY_DEFAULT_APPROVAL=select * \
from CREQCMR.DEFAULT_APPROVAL_CONDITIONS \
where DEFAULT_APPROVAL_ID = :DEFAULT_APPROVAL_ID
MASS_CREATE.GET_SEQNO=select SEQ_NO \
from CREQCMR.MASS_CREATE where PAR_REQ_ID=:REQ_ID \
and ITERATION_ID=(select ITERATION_ID from CREQCMR.ADMIN where REQ_ID=:REQ_ID)
MASS_UPDT.GET_SEQNO=select SEQ_NO \
from CREQCMR.MASS_UPDT where PAR_REQ_ID=:REQ_ID \
and ITERATION_ID=(select ITERATION_ID from CREQCMR.ADMIN where REQ_ID=:REQ_ID)

APPROVAL.DEFAULT_CREATE=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.DATA curr \
where admin.REQ_ID = curr.REQ_ID
APPROVAL.DEFAULT_CREATE.ADDR_IND=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.ADDR curr \
where admin.REQ_ID = curr.REQ_ID
APPROVAL.DEFAULT_UPDATE=select 1 \
from CREQCMR.ADMIN admin,CREQCMR.DATA curr, CREQCMR.DATA_RDC old \
where admin.REQ_ID = curr.REQ_ID \
and admin.REQ_ID = old.REQ_ID \
and curr.REQ_ID = old.REQ_ID
APPROVAL.DEFAULT_UPDATE.ADDR_IND=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.ADDR curr \
left outer join CREQCMR.ADDR_RDC old  \
  on curr.REQ_ID = old.REQ_ID \
  and curr.ADDR_TYPE = old.ADDR_TYPE \
  and curr.ADDR_SEQ = old.ADDR_SEQ \
where admin.REQ_ID = curr.REQ_ID 
APPROVAL.DEFAULT_MASS_CREATE=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.MASS_CREATE meta, CREQCMR.MASS_CREATE_DATA curr \
where admin.REQ_ID = meta.PAR_REQ_ID \
and admin.REQ_ID = curr.PAR_REQ_ID \
and admin.ITERATION_ID = meta.ITERATION_ID \
and meta.ITERATION_ID = curr.ITERATION_ID \
and meta.PAR_REQ_ID = curr.PAR_REQ_ID \
and meta.SEQ_NO = curr.SEQ_NO
APPROVAL.DEFAULT_MASS_CREATE.ADDR_IND=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.MASS_CREATE meta, CREQCMR.MASS_CREATE_ADDR curr \
where admin.REQ_ID = meta.PAR_REQ_ID \
and admin.REQ_ID = curr.PAR_REQ_ID \
and admin.ITERATION_ID = meta.ITERATION_ID \
and meta.ITERATION_ID = curr.ITERATION_ID \
and meta.PAR_REQ_ID = curr.PAR_REQ_ID \
and meta.SEQ_NO = curr.SEQ_NO
APPROVAL.DEFAULT_MASS_UPDATE=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.DATA data, CREQCMR.MASS_UPDT meta, CREQCMR.MASS_UPDT_DATA curr \
where admin.REQ_ID = data.REQ_ID \
and admin.REQ_ID = meta.PAR_REQ_ID \
and admin.REQ_ID = curr.PAR_REQ_ID \
and admin.ITERATION_ID = meta.ITERATION_ID \
and meta.ITERATION_ID = curr.ITERATION_ID \
and meta.PAR_REQ_ID = curr.PAR_REQ_ID \
and meta.SEQ_NO = curr.SEQ_NO
APPROVAL.DEFAULT_MASS_UPDATE.ADDR_IND=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.MASS_UPDT meta, CREQCMR.MASS_UPDT_ADDR curr \
where admin.REQ_ID = meta.PAR_REQ_ID \
and admin.REQ_ID = curr.PAR_REQ_ID \
and admin.ITERATION_ID = meta.ITERATION_ID \
and meta.ITERATION_ID = curr.ITERATION_ID \
and meta.PAR_REQ_ID = curr.PAR_REQ_ID \
and meta.SEQ_NO = curr.SEQ_NO
APPROVAL.DEFAULT_MASS_UPDATE.BYENT=select 1 \
from CREQCMR.ADMIN admin, CREQCMR.DATA data, CREQCMR.MASS_UPDT meta, CREQCMR.MASS_UPDT_DATA curr \
where admin.REQ_ID = data.REQ_ID \
and admin.REQ_ID = meta.PAR_REQ_ID \
and admin.REQ_ID = curr.PAR_REQ_ID \
and admin.ITERATION_ID = meta.ITERATION_ID \
and meta.ITERATION_ID = curr.ITERATION_ID \
and meta.PAR_REQ_ID = curr.PAR_REQ_ID \
and meta.SEQ_NO = curr.SEQ_NO
APPROVAL.DEFAULT_DELETE_REACTIVATE=select 1 \
from CREQCMR.ADMIN admin,CREQCMR.DATA data \
where admin.REQ_ID = data.REQ_ID

APPROVAL.CHECKLIST.WHERE= and exists ( \
  select 1 \
  from CREQCMR.PROLIF_CHECKLIST chk \
  where chk.REQ_ID = admin.REQ_ID \
  and ( \
  SECTION_A1 = 'Y' or  \
  SECTION_A10 = 'Y' or  \
  SECTION_A2 = 'Y' or  \
  SECTION_A3 = 'Y' or  \
  SECTION_A4 = 'Y' or  \
  SECTION_A5 = 'Y' or  \
  SECTION_A6 = 'Y' or  \
  SECTION_A7 = 'Y' or  \
  SECTION_A8 = 'Y' or  \
  SECTION_A9 = 'Y' or  \
  SECTION_B1 = 'Y' or  \
  SECTION_B10 = 'Y' or  \
  SECTION_B2 = 'Y' or  \
  SECTION_B3 = 'Y' or  \
  SECTION_B4 = 'Y' or  \
  SECTION_B5 = 'Y' or  \
  SECTION_B6 = 'Y' or  \
  SECTION_B7 = 'Y' or  \
  SECTION_B8 = 'Y' or  \
  SECTION_B9 = 'Y' or  \
  SECTION_C1 = 'Y' or  \
  SECTION_C10 = 'Y' or  \
  SECTION_C2 = 'Y' or  \
  SECTION_C3 = 'Y' or  \
  SECTION_C4 = 'Y' or  \
  SECTION_C5 = 'Y' or  \
  SECTION_C6 = 'Y' or  \
  SECTION_C7 = 'Y' or  \
  SECTION_C8 = 'Y' or  \
  SECTION_C9 = 'Y' or  \
  SECTION_D1 = 'Y' or  \
  SECTION_D10 = 'Y' or  \
  SECTION_D2 = 'Y' or  \
  SECTION_D3 = 'Y' or  \
  SECTION_D4 = 'Y' or  \
  SECTION_D5 = 'Y' or  \
  SECTION_D6 = 'Y' or  \
  SECTION_D7 = 'Y' or  \
  SECTION_D8 = 'Y' or  \
  SECTION_D9 = 'Y' \
  ) \
)

SYSTEM.GET_DEFAULT_APPR=select l.TXT REQUEST_TYP, nvl(u.USER_NAME,'System') CREATE_BY, a.*, t.TITLE, cond.VALUE COUNTRY  \
from CREQCMR.DEFAULT_APPROVALS a, CREQCMR.APPROVAL_TYP t, CREQCMR.LOV l \
left outer join CREQCMR.DEFAULT_APPROVAL_CONDITIONS cond  \
  on a.DEFAULT_APPROVAL_ID = cond.DEFAULT_APPROVAL_ID \
  and cond.FIELD_ID = 'CmrIssuingCntry' \
left outer join CMMA.USERS u \
  on a.CREATE_BY = u.USER_ID \
where a.TYP_ID = t.TYP_ID \
and a.GEO_CD = t.GEO_CD  \
and l.FIELD_ID = '##SearchRequestType'  \
and a.REQUEST_TYP = l.CD \
order by a.DEFAULT_APPROVAL_ID

SYSTEM.GET_DEFAULT_APPR.DETAILS=select * from CREQCMR.DEFAULT_APPROVALS where DEFAULT_APPROVAL_ID = :ID
QUERY.SYSTEM.GET_AVAILABLE_GEOS=select distinct GEO_CD,'' from CREQCMR.CNTRY_GEO_DEF
QUERY.SYSTEM.GET_APPR_RECIPIENTS=select DEFAULT_APPROVAL_ID, INTRANET_ID, NOTES_ID, DISPLAY_NAME \
from CREQCMR.DEFAULT_APPROVAL_RECIPIENTS where DEFAULT_APPROVAL_ID = :ID
QUERY.SYSTEM.GET_CONDITIONS.NONADDR=select DEFAULT_APPROVAL_ID, SEQUENCE_NO, ADDR_INDC, CONDITION_LEVEL, FIELD_ID, DATABASE_FIELD_NAME, OPERATOR, VALUE, PREVIOUS_VALUE_INDC \
from CREQCMR.DEFAULT_APPROVAL_CONDITIONS where (ADDR_INDC is null or ADDR_INDC <> 'Y') and DEFAULT_APPROVAL_ID = :ID order by CONDITION_LEVEL, SEQUENCE_NO
QUERY.SYSTEM.GET_CONDITIONS.ADDR=select DEFAULT_APPROVAL_ID, SEQUENCE_NO, ADDR_INDC, CONDITION_LEVEL, FIELD_ID, DATABASE_FIELD_NAME, OPERATOR, VALUE, PREVIOUS_VALUE_INDC \
 from CREQCMR.DEFAULT_APPROVAL_CONDITIONS where ADDR_INDC = 'Y' and DEFAULT_APPROVAL_ID = :ID order by CONDITION_LEVEL, SEQUENCE_NO
SYSTEM.DEFAULT_APPROVALS.GET_RECIPIENT=select * from CREQCMR.DEFAULT_APPROVAL_RECIPIENTS where DEFAULT_APPROVAL_ID = :DEFAULT_APPROVAL_ID and INTRANET_ID = :INTRANET_ID
SYSTEM.DEFAULT_APPROVALS.GET_CONDITION=select * from CREQCMR.DEFAULT_APPROVAL_CONDITIONS where DEFAULT_APPROVAL_ID = :DEFAULT_APPROVAL_ID and SEQUENCE_NO = :SEQUENCE_NO
SYSTEM.DEFAULT_APPROVALS.GET_MAX_SEQUENCE=select max(SEQUENCE_NO) from CREQCMR.DEFAULT_APPROVAL_CONDITIONS where DEFAULT_APPROVAL_ID = :DEFAULT_APPROVAL_ID
QUERY.SYSTEM.GET_APPROVAL_TYPES=select TYP_ID, GEO_CD||' - '||TITLE \
from CREQCMR.APPROVAL_TYP order by case when GEO_CD = 'WW' then 0 else 1 end, GEO_CD, TITLE
SYSTEM.GET_MAX_DEFAULT_APPR_ID=select max(DEFAULT_APPROVAL_ID) from CREQCMR.DEFAULT_APPROVALS
SYSTEM.CHECK_RECIPIENT=select 1 from CREQCMR.DEFAULT_APPROVAL_RECIPIENTS where DEFAULT_APPROVAL_ID = :DEFAULT_APPROVAL_ID and INTRANET_ID = :INTRANET_ID
SYSTEM.DEFAULT_APPR.CHECKTYPE=select CNTRY_CD \
from CREQCMR.SUPP_CNTRY \
where SUPP_REQ_TYPE like :REQ_TYPE 

SYSTEM.GET_TYPE_GEO_CD=select GEO_CD from CREQCMR.APPROVAL_TYP where TYP_ID = :TYPE_ID

GET_APPROVAL_REQ=SELECT * FROM CREQCMR.APPROVAL_REQ WHERE REQ_ID=:REQ_ID AND GEO_CD=:GEO_CD AND TYP_ID =:TYP_ID AND INTRANET_ID=:INTRANET_ID and STATUS <> 'OBSLT'
GET_APPROVAL_REQ_BY_REQID =SELECT * FROM CREQCMR.APPROVAL_REQ WHERE REQ_ID= :REQ_ID AND STATUS=:STATUS
APPROVAL_DFLT_REQ_RECORDS=select deflt_approvals.*, deflt_approvals_recipients.* \
from CREQCMR.DEFAULT_APPROVALS deflt_approvals, CREQCMR.DEFAULT_APPROVAL_RECIPIENTS deflt_approvals_recipients \
where deflt_approvals.default_approval_id = deflt_approvals_recipients.default_approval_id \
and deflt_approvals.DEFAULT_APPROVAL_ID = :DEFAULT_APPROVAL_ID

#
ZZKV_SIC_FOR_INDUSTRY = select distinct BRAN1, BRSCH, ZZKV_GEO \
from SAPR3.ZZKV_SIC \
where MANDT = :MANDT \
and BRAN1 = :BRAN1 \
and ZZKV_GEO = 'WW'

#
GET_LANDED_AND_ADDR_TYPE_FOR_LA = select ADDR_TYPE,LAND_CNTRY \
from CREQCMR.ADDR \
where REQ_ID = :REQ_ID \
and ADDR_TYPE = 'ZS01' \
for read only \
with ur
#
GET_CUST_SCENARIO_BY_CUST_TYPE = select FIELD_NAME,VALUE \
from CREQCMR.CUST_SCENARIOS \
where CUST_TYP = :CUST_TYP \
and LOC_CD = :ISS_NUM \
and field_id in('##crosTyp','##crosSubTyp')
#
GET_REQ_ISSUING_CNTRY = select cmr_issuing_cntry \
from CREQCMR.DATA \
where REQ_ID = :REQ_ID \
for read only \
with ur

GET_SSA_LOCATION_CD = select CITY_ID, CITY_DESC \
from CREQCMR.GEO_CITIES \
where CITY_DESC like ('%:CITY_DESC%') \
and ISSUING_CNTRY = ':ISSUING_CNTRY' \
and CITY_ID like('%:STATE_CD%') \
for read only \
with ur

GET_LOCATION_CD = select CITY_ID, CITY_DESC \
from CREQCMR.GEO_CITIES \
where CITY_DESC = :CITY_DESC \
and ISSUING_CNTRY = :ISSUING_CNTRY \
and CITY_ID like('%STATE_CD%') \
for read only \
with ur

EXTQUERY.GET_MAPPED_ISU_FROM_RDC=select BRSCH,BRSCH_DESC \
from SAPR3.ZZKV_SIC \
where ZZKV_SIC = :SIC \
and BRAN1 = :BRAN1 \
and MANDT = :MANDT \
and ( \
('897' = :CNTRY and ZZKV_GEO = 'US') \
or  \
('897' <> :CNTRY and ZZKV_GEO = 'WW') \
)

QUERY.SYSTEM.GET_SUPP_CNTRY=select * from (select a.CNTRY_CD, a.CNTRY_CD||' - '||r.SYS_LOC_DESC CNTRY_DESC \
from CREQCMR.SUPP_CNTRY a, CMMA.REFT_SYS_LOC_W r \
where a.CNTRY_CD = r.SYS_LOC_CD \
union \
select '000' CNTRY_CD, 'WW - Worldwide' CNTRY_DESC \
from SYSIBM.SYSDUMMY1) a \
order by a.CNTRY_CD 

SYSTEM.GET_MAX_VAL_SEQ=select max(DISPLAY_SEQ_NO) \
from CREQCMR.VALIDATION_URLS \
where CNTRY_CD = :CNTRY

MQREQUEST.GETADDR=select * from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE
MQREQUEST.UPDADDRSEQ=update CREQCMR.ADDR set ADDR_SEQ=:ADDR_SEQ where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE
MQREQUEST.GETMQREQBYREQID=select * from CREQCMR.MQ_INTF_REQ_QUEUE where REQ_ID=:REQ_ID and QUERY_REQ_ID = 17 order by QUERY_REQ_ID desc
MQREQUEST.GETMQREQ=select * from CREQCMR.MQ_INTF_REQ_QUEUE where (REQ_STATUS = 'NEW' or REQ_STATUS like 'COM%') and REQ_STATUS <> 'COM' 
MQREQUEST.GETADMINREQ=select a.REQ_ID, a.REQ_TYPE, a.LAST_UPDT_TS,a.LAST_UPDT_BY,d.CMR_NO, d.CMR_ISSUING_CNTRY \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' and a.REQ_ID = d.REQ_ID and a.REQ_STATUS= :REQ_STATUS \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and (s.PROCESSING_TYP ='MQ' and a.REQ_TYPE in ('C','U'))

MQREQUEST.UPDADMINLOCK=update CREQCMR.ADMIN set LOCK_IND=:LOCK_IND, LOCK_BY=:LOCK_BY, LOCK_TS=:LOCK_TS, PROCESSED_FLAG=:PROCESSED_FLAG, PROCESSED_TS=:PROCESSED_TS where REQ_ID=:REQ_ID
MQREQUEST.UPDADMINLOCKSTAUS=update CREQCMR.ADMIN set REQ_STATUS=:REQ_STATUS, LOCK_IND=:LOCK_IND, LOCK_BY=:LOCK_BY, LOCK_TS=:LOCK_TS,LAST_UPDT_TS= :LAST_UPDT_TS, LAST_UPDT_BY= :LAST_UPDT_BY, PROCESSED_FLAG=:PROCESSED_FLAG, PROCESSED_TS=:PROCESSED_TS where REQ_ID=:REQ_ID

MQREQUEST.UPDATE_ADDR_SEQ=update CREQCMR.ADDR set ADDR_SEQ = :NEW_SEQ where REQ_ID = :REQ_ID and ADDR_TYPE = :TYPE and ADDR_SEQ = :OLD_SEQ
MQREQUEST.UPDATE_ADDR_SEQ_RDC=update CREQCMR.ADDR_RDC set ADDR_SEQ = :NEW_SEQ where REQ_ID = :REQ_ID and ADDR_TYPE = :TYPE and ADDR_SEQ = :OLD_SEQ


MQREQUEST.GETNEXTADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID
MQREQUEST.SOF.CHECK_SEQUENCE=select 1 from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_SEQ = :SEQ and ADDR_TYPE <> :TYPE

MQREQUEST.GETMQREQ.RETRY=select * from CREQCMR.MQ_INTF_REQ_QUEUE where REQ_STATUS like 'PUB%' or REQ_STATUS in ('RETRY', 'RESEND')

QUERY.VALIDATOR.CROSSBORDER=select LAND_CNTRY, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01' \
and ADDR_SEQ = 1

QUERY.VALIDATOR.GADDRCNTRY=select BLDG, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZP02'

QUERY.VALIDATOR.CROSSBORDERIT=select LAND_CNTRY, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZP01' \
and ADDR_SEQ = 1

QUERY.VALIDATOR.CROSSBORDERNL=select LAND_CNTRY, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = :ADDRTYPE \
and ADDR_SEQ = :SEQNO

QUERY.VALIDATOR.POSTCODEIT=select POST_CD,STATE_PROV,IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01'


QUERY.VALIDATOR.COMPANY.POSTCODEIT=select POST_CD,STATE_PROV,IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZI01'

QUERY.LANDCNTRY.IT=select LAND_CNTRY, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01'

QUERY.VALIDATOR.IMPORTED_PT=select POST_CD,IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01'

QUERY.ADDR.GET.CUSTNM3_DEPT.BY_REQID=select CUST_NM3,DEPT,'' from CREQCMR.ADDR where  REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'

SYSTEM.CNTRYGEODEF=select * from CREQCMR.CNTRY_GEO_DEF order by GEO_CD, CMR_ISSUING_CNTRY
SYSTEM.LOV=select * \
  from CREQCMR.LOV \
    where FIELD_ID = :FIELD_ID \
    and CMR_ISSUING_CNTRY like :CNTRY \
    order by FIELD_ID, case when CMR_ISSUING_CNTRY = '*' then '0' else CMR_ISSUING_CNTRY end, DISP_ORDER
SYSTEM.SALES_BRANCH_OFF=select * \
  from CREQCMR.SALES_BRANCH_OFF \
    where ISSUING_CNTRY like :CNTRY \
    order by ISSUING_CNTRY,REP_TEAM_CD,SALES_BO_CD
SYSTEM.AP_CUST_CLUSTER_MAP=select * \
  from CREQCMR.AP_CUST_CLUSTER_TIER_MAP \
    where ISSUING_CNTRY like :CNTRY \
    order by ISSUING_CNTRY,AP_CUST_CLUSTER_ID  
SYSTEM.REP_TEAM= select * \
 from CREQCMR.REP_TEAM \
    where ISSUING_CNTRY like :CNTRY \
    order by ISSUING_CNTRY,REP_TEAM_CD,REP_TEAM_MEMBER_NO
SYSTEM.LOVMAINT=select * from CREQCMR.LOV where FIELD_ID=:FIELD_ID and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY AND CD=:CD
SYSTEM.SALES_BRANCH_OFF_MAINT=select * from CREQCMR.SALES_BRANCH_OFF where REP_TEAM_CD=:REP_TEAM_CD and ISSUING_CNTRY=:ISSUING_CNTRY AND SALES_BO_CD=:SALES_BO_CD
SYSTEM.CNTRYGEODEFMAINT=select * from CREQCMR.CNTRY_GEO_DEF where GEO_CD=:GEO_CD and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY
QUERY.CHECKCNTRYGEODEF=select 1,'' from CREQCMR.CNTRY_GEO_DEF where GEO_CD = :GEOCD AND CMR_ISSUING_CNTRY = :CMRISSUINGCNTRY
QUERY.CHECKLOV=select 1,'' from CREQCMR.LOV where FIELD_ID=:FIELD_ID and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY AND CD=:CD
QUERY.LOVFIELDIDLIST=select distinct FIELD_ID,'' from CREQCMR.LOV order by FIELD_ID
QUERY.CHECK_EXISTING_LOV=select 1,CD from CREQCMR.LOV where FIELD_ID = :ID and CMR_ISSUING_CNTRY = :CNTRY
QUERY.CHECKCOLLECTORNO=select 1,COLLECTOR_NO from CREQCMR.COLLECTOR_NAME_NO where COLLECTOR_NO = :COLLECTOR_NO and ISSUING_CNTRY = :ISSUING_CNTRY 
QUERY.CHECKGEOCITY=SELECT 1,CITY_ID FROM CREQCMR.GEO_CITIES WHERE CITY_ID = :CITY_ID AND ISSUING_CNTRY = :ISSUING_CNTRY 
QUERY.CHECK_SALES_BRANCH_OFF=select 1,'' from CREQCMR.SALES_BRANCH_OFF where REP_TEAM_CD=:REP_TEAM_CD and ISSUING_CNTRY=:ISSUING_CNTRY AND SALES_BO_CD=:SALES_BO_CD
QUERY.CHECK_SALES_BRANCH_OFF_RECORDS=select 1,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY=:ISSUING_CNTRY
QUERY.CHECK_AP_CLUSTER_RECORDS=select 1,'' from CREQCMR.AP_CUST_CLUSTER_TIER_MAP where ISSUING_CNTRY=:ISSUING_CNTRY
QUERY.CHECK_REP_TEAM_RECORDS=select 1,'' from CREQCMR.REP_TEAM where ISSUING_CNTRY=:CNTRY

#Metrics
METRICS.BY_GEO.CREATED=select geo.GEO_CD, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') DT, count(*) TOTAL \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CREQCMR.CNTRY_GEO_DEF geo \
where admin.REQ_ID = data.REQ_ID \
and data.CMR_ISSUING_CNTRY = geo.CMR_ISSUING_CNTRY \
and DATE(admin.CREATE_TS) >= date(':FROM') \
and DATE(admin.CREATE_TS) <= date(':TO') \
group by geo.GEO_CD, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') \
order by VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD'), geo.GEO_CD  


METRICS.BY_GEO.PROCESSED=select geo.GEO_CD, VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD') DT, count(*) \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CREQCMR.CNTRY_GEO_DEF geo \
where admin.REQ_ID = data.REQ_ID \
and admin.REQ_STATUS in ('COM', 'PCO') \
and data.CMR_ISSUING_CNTRY = geo.CMR_ISSUING_CNTRY \
and DATE(admin.LAST_UPDT_TS) >= date(':FROM') \
and DATE(admin.LAST_UPDT_TS) <= date(':TO') \
and exists (select 1 from CREQCMR.WF_HIST wf where admin.REQ_ID = wf.REQ_ID and wf.REQ_STATUS = 'COM') \
group by geo.GEO_CD, VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD') \
order by VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD'), geo.GEO_CD  

METRICS.BY_COUNTRY.CREATED=select reft.SYS_LOC_DESC, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') DT, count(*) TOTAL  \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CMMA.REFT_SYS_LOC_W reft \
where admin.REQ_ID = data.REQ_ID  \
and data.CMR_ISSUING_CNTRY = reft.SYS_LOC_CD \
and DATE(admin.CREATE_TS) >= date(':FROM')  \
and DATE(admin.CREATE_TS) <= date(':TO') \
group by reft.SYS_LOC_DESC, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') \
order by VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD'), reft.SYS_LOC_DESC

METRICS.BY_COUNTRY.PROCESSED=select reft.SYS_LOC_DESC, VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD') DT, count(*) \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CMMA.REFT_SYS_LOC_W reft \
where admin.REQ_ID = data.REQ_ID \
and data.CMR_ISSUING_CNTRY = reft.SYS_LOC_CD \
and admin.REQ_STATUS in ('COM', 'PCO') \
and DATE(admin.LAST_UPDT_TS) >= date(':FROM') \
and DATE(admin.LAST_UPDT_TS) <= date(':TO') \
and exists (select 1 from CREQCMR.WF_HIST wf where admin.REQ_ID = wf.REQ_ID and wf.REQ_STATUS = 'COM') \
group by reft.SYS_LOC_DESC, VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD') \
order by VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD'), reft.SYS_LOC_DESC

METRICS.BY_TYPE.CREATED=select lov.TXT, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') DT, count(*) TOTAL  \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CREQCMR.LOV lov \
where admin.REQ_ID = data.REQ_ID  \
and admin.REQ_TYPE = lov.CD \
and lov.FIELD_ID = '##SearchRequestType' \
and lov.CMR_ISSUING_CNTRY = '*' \
and DATE(admin.CREATE_TS) >= date(':FROM')  \
and DATE(admin.CREATE_TS) <= date(':TO') \
:GEO_COND \
group by lov.TXT, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') \
order by VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD'), lov.TXT

METRICS.BY_TYPE.PROCESSED=select lov.TXT, VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD') DT, count(*) \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CREQCMR.LOV lov \
where admin.REQ_ID = data.REQ_ID \
and admin.REQ_TYPE = lov.CD \
and lov.FIELD_ID = '##SearchRequestType' \
and lov.CMR_ISSUING_CNTRY = '*' \
and admin.REQ_STATUS in ('COM', 'PCO') \
and DATE(admin.LAST_UPDT_TS) >= date(':FROM') \
and DATE(admin.LAST_UPDT_TS) <= date(':TO') \
:GEO_COND \
and exists (select 1 from CREQCMR.WF_HIST wf where admin.REQ_ID = wf.REQ_ID and wf.REQ_STATUS = 'COM') \
group by lov.TXT, VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD') \
order by VARCHAR_FORMAT(admin.LAST_UPDT_TS, 'YYYY-MM-DD'), lov.TXT

METRICS.BY_STATUS.CREATED=select lov.STATUS_DESC, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD') DT, count(*) TOTAL   \
from CREQCMR.DATA data, CREQCMR.ADMIN admin, CREQCMR.STATUS_DESC lov  \
where admin.REQ_ID = data.REQ_ID   \
and lov.REQ_STATUS = admin.REQ_STATUS  \
and DATE(admin.CREATE_TS) >= date(':FROM')   \
and DATE(admin.CREATE_TS) <= date(':TO')  \
:GEO_COND \
group by lov.STATUS_DESC, VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD')  \
order by VARCHAR_FORMAT(admin.CREATE_TS, 'YYYY-MM-DD'), lov.STATUS_DESC 

METRICS.USAGE.BY_SERVICE_ID=select a.SERVICE_ID,  VARCHAR_FORMAT(a.ACCESS_DATE, 'YYYY-MM-DD') DT, sum(a.TOTAL_COUNT) TOTAL \
from CMMA.WEB_SERVICE_USAGE a \
where DATE(a.ACCESS_DATE) >= date(':FROM') \
and DATE(a.ACCESS_DATE) <= date(':TO') \
group by a.SERVICE_ID, a.ACCESS_DATE \
order by a.ACCESS_DATE, a.SERVICE_ID 

METRICS.USAGE.BY_SERVICE_NAMES=select a.SERVICE_NAME,  VARCHAR_FORMAT(a.ACCESS_DATE, 'YYYY-MM-DD') DT, sum(a.TOTAL_COUNT) TOTAL \
from CMMA.WEB_SERVICE_USAGE a \
where DATE(a.ACCESS_DATE) >= date(':FROM') \
and DATE(a.ACCESS_DATE) <= date(':TO') \
group by a.SERVICE_NAME, a.ACCESS_DATE \
order by a.ACCESS_DATE, a.SERVICE_NAME



METRICS.USAGE.BY_SERVICE_NAME=select a.SERVICE_ID,  VARCHAR_FORMAT(a.ACCESS_DATE, 'YYYY-MM-DD') DT, sum(a.TOTAL_COUNT) TOTAL \
from CMMA.WEB_SERVICE_USAGE a \
where DATE(a.ACCESS_DATE) >= date(':FROM') \
and DATE(a.ACCESS_DATE) <= date(':TO') \
and a.SERVICE_NAME = :SERVICE_NAME \
group by a.SERVICE_ID, a.ACCESS_DATE \
order by a.ACCESS_DATE, a.SERVICE_ID 

METRICS.USAGE.BY_PARTNER=select a.SERVICE_NAME,  VARCHAR_FORMAT(a.ACCESS_DATE, 'YYYY-MM-DD') DT, a.TOTAL_COUNT TOTAL \
from CMMA.WEB_SERVICE_USAGE a \
where DATE(a.ACCESS_DATE) >= date(':FROM') \
and DATE(a.ACCESS_DATE) <= date(':TO') \
and a.SERVICE_ID = :SERVICE_ID \
order by a.ACCESS_DATE, a.SERVICE_NAME 



QUERY.METRICS.ALL_PARTNERS=select SERVICE_ID SVC_ID, SERVICE_ID SVC_NAME \
from CMMA.FINDCMR_PARTNERS \
order by SERVICE_ID

METRICS.REQUEST_STAT=\
select admin.REQ_ID, data.CMR_ISSUING_CNTRY CNTRY_CD, sysloc.SYS_LOC_DESC CNTRY_DESC, data.CMR_ISSUING_CNTRY IOT, data.CMR_ISSUING_CNTRY MARKET, \
       case when data.CMR_OWNER is not null then data.CMR_OWNER else 'IBM' end OWNER,   \
     lob.TXT LOB, reqtype.TXT REQ_TYPE,  case when admin.PROSP_LEGAL_IND = 'Y' then 'Yes' else 'No' end PROSPECT,  \
       admin.MAIN_CUST_NM1||(case when admin.MAIN_CUST_NM2 is not null then ' '||admin.MAIN_CUST_NM2 else '' end) CUST_NM,  \
       data.CMR_NO CMR_NO,data.VAT VAT , nvl(reason2.TXT, reason.TXT) REQ_REASON, admin.CUST_TYPE, scenario.SCENARIO_TYPE_DESC, scenario.SCENARIO_SUBTYPE_DESC, admin.SOURCE_SYST_ID, admin.REQUESTER_NM, admin.REQUESTER_ID,   \
     review.REVIEWER_NM, review.REVIEWER_ID,   \
     approval.APPROVER_NM, approval.APPROVER_ID,   \
     process.PROCESSOR_NM, process.PROCESSOR_ID,  \
       varchar_format(admin.CREATE_TS, 'YYYY') REQ_YR, varchar_format(admin.CREATE_TS, 'Mon') REQ_MONTH, varchar_format(admin.CREATE_TS, 'DD') REQ_DT,  \
       varchar_format(completion.COMPLETION_END, 'YYYY') CLOSE_YR, varchar_format(completion.COMPLETION_END, 'Mon') CLOSE_MONTH, varchar_format(completion.COMPLETION_END, 'DD') CLOSE_DT,  \
       varchar_format(data.REQUEST_DUE_DATE, 'YYYY-MM-DD') REQUEST_DUE_DATE, \
       varchar_format(completion.COMPLETION_END, 'YYYY-MM-DD HH24:MI:SS') COMPLETION_TS, \
       reject_sum.COUNTS REJECT_TOTAL,  \
       status.STATUS_DESC FINAL_STATUS, rejection.REJ_REASON LAST_REJ_REASON,  \
       case when completion.COMPLETION_END is not null and timestampdiff(16, char(completion.COMPLETION_END - admin.CREATE_TS)) < 1 then 'Yes' else 'No' end DAY_PROCESS,   \
     request_sum.TAT REQUEST_TAT,  \
     pending_sum.TAT PENDING_TAT,  \
     review_sum.TAT REVIEW_TAT,  \
     approval_sum.TAT APPROVAL_TAT,  \
     process_sum.TAT PROCESS_TAT,  \
     auto_sum.TAT AUTO_TAT,  \
     appr2_sum.TAT APPROVAL2_TAT,  \
     case when completion.COMPLETION_END is not null then timestampdiff(2, char(completion.COMPLETION_END - admin.CREATE_TS)) else null end OVERALL_TAT,  \
     case when completion.COMPLETION_END is not null then timestampdiff(2, char(completion.COMPLETION_END - request.REQUEST_START)) else null end SUBMIT_TO_COMPLETE_TAT,  \
     case \
       when nvl(scorecard.FIND_DNB_RESULT, '') = '' then 'Not Done' \
       else scorecard.FIND_DNB_RESULT \
     end FIND_DNB_RESULT, \
     case \
       when nvl(scorecard.DPL_CHK_RESULT,'Not Done') = 'Not Done' or scorecard.DPL_CHK_RESULT = '' then 'Not Done' \
       when scorecard.DPL_CHK_RESULT = 'AP' then 'All Passed' \
       when scorecard.DPL_CHK_RESULT = 'SF' then 'Some Failed' \
       when scorecard.DPL_CHK_RESULT = 'AF' then 'All Failed' \
       when scorecard.DPL_CHK_RESULT = 'NR' then 'Not Required' \
    end DPL_CHK_RESULT,       \
    case \
       when nvl(scorecard.DNB_MATCHING_RESULT,'') = '' then 'Not Done' \
       when scorecard.DNB_MATCHING_RESULT = 'Y' then 'Yes' \
       when scorecard.DNB_MATCHING_RESULT = 'N' then 'No' \
    end DNB_MATCHING_RESULT,       \
    case \
       when nvl(scorecard.RPA_MATCHING_RESULT,'') = '' then 'Not Done' \
       when scorecard.RPA_MATCHING_RESULT = 'Y' then 'Yes' \
       when scorecard.RPA_MATCHING_RESULT = 'N' then 'No' \
    end RPA_MATCHING_RESULT,       \
    case \
      when nvl(scorecard.DPL_ASSESSMENT_RESULT, '') = '' then 'Not Done' \
      when scorecard.DPL_ASSESSMENT_RESULT = 'Y' then 'Matched DPL Entities' \
      when scorecard.DPL_ASSESSMENT_RESULT = 'N' then 'No Actual Matches' \
      when scorecard.DPL_ASSESSMENT_RESULT = 'U' then 'Needs Review' \
    end DPL_ASSESSMENT_RESULT, admin.CHILD_REQ_ID, admin.POOL_CMR_INDC \
from CREQCMR.ADMIN admin  \
left outer join CREQCMR.DATA data  \
  on admin.REQ_ID = data.REQ_ID  \
left outer join CREQCMR.SCORECARD scorecard  \
  on admin.REQ_ID = scorecard.REQ_ID  \
left outer join CMMA.REFT_SYS_LOC_W sysloc  \
  on data.CMR_ISSUING_CNTRY = sysloc.SYS_LOC_CD  \
left outer join CREQCMR.CNTRY_GEO_DEF geo  \
  on data.CMR_ISSUING_CNTRY = geo.CMR_ISSUING_CNTRY  \
left outer join CREQCMR.LOV lob  \
  on admin.REQUESTING_LOB = lob.CD  \
  and lob.FIELD_ID = '##RequestingLOB'  \
left outer join CREQCMR.LOV reqtype  \
  on admin.REQ_TYPE = reqtype.CD  \
  and reqtype.FIELD_ID = '##SearchRequestType'  \
left outer join CREQCMR.STATUS_DESC status  \
  on admin.REQ_STATUS = status.REQ_STATUS  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID REQUESTER_ID, hist.CREATE_BY_NM REQUESTER_NM, hist.CREATE_TS REQUEST_START, hist.COMPLETE_TS REQUEST_END  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS in ('PPN','AUT')    \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS in ('PPN','AUT')    \
                                 and hist2.WF_ID > hist.WF_ID)) request  \
  on admin.REQ_ID = request.REQ_ID  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID PENDING_ID, hist.CREATE_BY_NM PENDING_NM, hist.CREATE_TS PENDING_START, hist.COMPLETE_TS PENDING_END  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS = 'PPN'  \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS = 'PPN'  \
                                 and hist2.WF_ID > hist.WF_ID)) pending  \
  on admin.REQ_ID = pending.REQ_ID  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID REVIEWER_ID, hist.CREATE_BY_NM REVIEWER_NM, hist.CREATE_TS REVIEW_START, hist.COMPLETE_TS REVIEW_END  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS = 'PVA'  \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS = 'PVA'  \
                                 and hist2.WF_ID > hist.WF_ID)) review  \
  on admin.REQ_ID = review.REQ_ID  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID APPROVER_ID, hist.CREATE_BY_NM APPROVER_NM, hist.CREATE_TS APPROVE_START, hist.COMPLETE_TS APPROVE_END  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS = 'ACU'  \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS = 'ACU'  \
                                 and hist2.WF_ID > hist.WF_ID)) approval  \
  on admin.REQ_ID = approval.REQ_ID  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID PROCESSOR_ID, hist.CREATE_BY_NM PROCESSOR_NM, hist.CREATE_TS PROCESS_START, hist.COMPLETE_TS PROCESS_END  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS = 'PCR'  \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS = 'PCR'  \
                                 and hist2.WF_ID > hist.WF_ID)) process  \
  on admin.REQ_ID = process.REQ_ID  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID COMPLETED_BY_ID, hist.CREATE_BY_NM COMPLETED_BY_NM, hist.CREATE_TS COMPLETION_START,   \
                 hist.CREATE_TS COMPLETION_END  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS = 'COM'  \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS = 'COM'  \
                                 and hist2.CREATE_TS < hist.CREATE_TS)) completion  \
  on admin.REQ_ID = completion.REQ_ID  \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID REJECTED_BY_ID, hist.CREATE_BY_NM REJECTED_BY_NM, hist.CREATE_TS REJECT_START, hist.COMPLETE_TS REJECT_END,  \
                 case when hist.REJ_REASON = 'Other (provide comments)' then hist.REJ_REASON||': '||hist.CMT else hist.REJ_REASON end REJ_REASON  \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist  \
                 where admin.REQ_ID = hist.REQ_ID  \
                 and hist.REQ_STATUS = 'PRJ'  \
                 and not exists (select 1   \
                                 from CREQCMR.WF_HIST hist2   \
                                 where admin.REQ_ID = hist2.REQ_ID  \
                                 and hist2.REQ_STATUS = 'PRJ'  \
                                 and hist2.WF_ID > hist.WF_ID)) rejection  \
  on admin.REQ_ID = rejection.REQ_ID  \
left outer join (select REQ_ID, sum(timestampdiff(2, char(COMPLETE_TS - CREATE_TS))) TAT  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS = 'DRA'  \
                 group by REQ_ID) request_sum  \
  on admin.REQ_ID = request_sum.REQ_ID           \
left outer join (select REQ_ID, sum(timestampdiff(2, char(COMPLETE_TS - CREATE_TS))) TAT  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS in ('PPN', 'CPN', 'PCP', 'APN', 'AWA')  \
                 group by REQ_ID) pending_sum  \
  on admin.REQ_ID = pending_sum.REQ_ID      \
left outer join (select REQ_ID, sum(timestampdiff(2, char(COMPLETE_TS - CREATE_TS))) TAT  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS = 'PVA'  \
                 group by REQ_ID) review_sum  \
  on admin.REQ_ID = review_sum.REQ_ID    \
left outer join (select REQ_ID, sum(timestampdiff(2, char(COMPLETE_TS - CREATE_TS))) TAT  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS = 'ACU'  \
                 group by REQ_ID) approval_sum  \
  on admin.REQ_ID = approval_sum.REQ_ID       \
left outer join (select REQ_ID, sum(timestampdiff(2, char(COMPLETE_TS - CREATE_TS))) TAT  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS = 'PCR'  \
                 group by REQ_ID) process_sum  \
  on admin.REQ_ID = process_sum.REQ_ID     \
left outer join (select REQ_ID, count(1) COUNTS  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS = 'PRJ'  \
                 group by REQ_ID) reject_sum  \
  on admin.REQ_ID = reject_sum.REQ_ID \
left outer join (select REQ_ID, sum(timestampdiff(2, char(COMPLETE_TS - CREATE_TS))) TAT  \
                 from CREQCMR.WF_HIST  \
                 where REQ_STATUS in ('AUT', 'RET', 'REP')  \
                 group by REQ_ID) auto_sum  \
  on admin.REQ_ID = auto_sum.REQ_ID      \
left outer join (select REQ_ID, sum(timestampdiff(2, char(END_TS - START_TS))) TAT \
                 from (select s.REQ_ID, s.APPROVAL_ID, s.CHG_TS START_TS, s.STATUS START_STATUS, e.CHG_TS END_TS, e.STATUS END_STATUS \
                       from (select a.REQ_ID, a.APPROVAL_ID, h.CHG_TS, h.STATUS  \
                             from CREQCMR.APPROVAL_REQ a, CREQCMR.APPROVAL_HIST h \
                             where a.APPROVAL_ID = h.APPROVAL_ID \
                             and h.STATUS in ('PAPR') \
                             and not exists (select 1  \
                                           from CREQCMR.APPROVAL_HIST h1  \
                                   where h.APPROVAL_ID = h1.APPROVAL_ID  \
                                   and h1.STATUS in ('PAPR')  \
                                   and h1.CHG_TS < h.CHG_TS) ) s,  \
                            (select a.REQ_ID, a.APPROVAL_ID, h.CHG_TS, h.STATUS \
                             from CREQCMR.APPROVAL_REQ a, CREQCMR.APPROVAL_HIST h \
                             where a.APPROVAL_ID = h.APPROVAL_ID \
                             and h.STATUS in ('APR', 'REJ', 'CAPR') \
                             and not exists (select 1  \
                                           from CREQCMR.APPROVAL_HIST h1  \
                                   where h.APPROVAL_ID = h1.APPROVAL_ID  \
                                   and h1.STATUS in ('APR', 'REJ', 'CAPR')  \
                                   and h1.CHG_TS > h.CHG_TS) ) e \
                       where s.REQ_ID = e.REQ_ID \
                       and s.APPROVAL_ID = e.APPROVAL_ID) \
                 group by REQ_ID) appr2_sum \
  on admin.REQ_ID = appr2_sum.REQ_ID \
left outer join (select '897' CMR_ISSUING_CNTRY, g.REFT_USCMR_GRP_KEY||'' SCENARIO_TYPE, g.USCMR_DESC SCENARIO_TYPE_DESC , s.USCMR_SUB_GROUP SCENARIO_SUBTYPE, s.USCMR_SUB_GRP_DESC SCENARIO_SUBTYPE_DESC \
                 from CMMA.REFT_USCMR_GRP_G g, CMMA.REFT_USCMR_SGRP_G s \
                 where s.REFT_USCMR_GRP_KEY = g.REFT_USCMR_GRP_KEY \
                 union all \
                 select g.ISSUING_CNTRY CMR_ISSUING_CNTRY, g.CUST_TYP_VAL SCENARIO_TYPE, g.CUST_TYP_DESC SCENARIO_TYPE_DESC, s.CUST_SUB_TYP_VAL SCENARIO_SUBTYPE, s.CUST_SUB_TYP_DESC SCENARIO_SUBTYPE_DESC \
                 from CREQCMR.CUST_TYPE g, CREQCMR.CUST_SUB_TYPE s \
                 where g.CUST_TYP_VAL = s.CUST_TYP_VAL \
                 and g.ISSUING_CNTRY = s.ISSUING_CNTRY \
                 and g.ISSUING_CNTRY <> '897') scenario \
  on data.CMR_ISSUING_CNTRY = scenario.CMR_ISSUING_CNTRY \
  and data.CUST_GRP = scenario.SCENARIO_TYPE \
  and data.CUST_SUB_GRP = scenario.SCENARIO_SUBTYPE \
left outer join CREQCMR.LOV reason \
  on admin.REQ_REASON = reason.CD \
  and reason.FIELD_ID = '##RequestReason' \
  and reason.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV reason2 \
  on admin.REQ_REASON = reason2.CD \
  and reason2.FIELD_ID = '##RequestReason' \
  and reason2.CMR_ISSUING_CNTRY = data.CMR_ISSUING_CNTRY \
where DATE(admin.CREATE_TS) >= date(':FROM')  \
and DATE(admin.CREATE_TS) <= date(':TO') 

METRICS.REJECTIONS=select REQ_ID, REJ_REASON||(case when CMT is not null then ': '||CMT else '' end) \
from CREQCMR.WF_HIST \
where REQ_STATUS = 'PRJ' \
and REJ_REASON is not null \
and REQ_ID >= :SMALLEST \
and REQ_ID <= :LARGEST \
order by REQ_ID, WF_ID

METRICS.SQUAD=select CMR_ISSUING_CNTRY, CNTRY_NAME, PROCESS_DT, count(*) TOTAL \
from (select d.CMR_ISSUING_CNTRY,  trim(sysloc.SYS_LOC_DESC) CNTRY_NAME, varchar_format(a.LAST_UPDT_TS, 'YYYYMMDD') PROCESS_DT \
      from CREQCMR.ADMIN a, CREQCMR.DATA d \
      left outer join CMMA.REFT_SYS_LOC_W sysloc \
      on d.CMR_ISSUING_CNTRY = sysloc.SYS_LOC_CD  \
      where a.REQ_ID = d.REQ_ID \
      and REQ_STATUS in ('COM', 'PCO', 'PRJ')) \
where PROCESS_DT >= :FROM  \
and PROCESS_DT <= :TO 
 
METRICS.REQUESTER_STAT=\
select a.*, k.VTEXT, nvl(u.USER_NAME, '-External-') USER_NAME \
from ( \
select nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID) REQUESTER, d.CMR_ISSUING_CNTRY, 'COM' STAT_TYPE, count(1) COUNTS \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
where a.REQ_ID = d.REQ_ID \
and a.REQ_STATUS = 'COM' \
${CNTRY} \
and a.CREATE_TS >= :CREATE_FROM \
and a.CREATE_TS <= :CREATE_TO \
and not exists (select 1 \
                from CREQCMR.WF_HIST h \
                where a.REQ_ID = h.REQ_ID \
                and h.REQ_STATUS = 'PRJ') \
group by nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID), d.CMR_ISSUING_CNTRY \
union all \
select nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID) REQUESTER, d.CMR_ISSUING_CNTRY, 'REJ' STAT_TYPE, count(1) COUNTS  \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.WF_HIST h \
where a.REQ_ID = d.REQ_ID \
${CNTRY} \
and a.REQ_ID = h.REQ_ID \
and a.CREATE_TS >= :CREATE_FROM \
and a.CREATE_TS <= :CREATE_TO \
and h.REQ_STATUS = 'PRJ' \
group by nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID), d.CMR_ISSUING_CNTRY \
union all \
select nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID) REQUESTER, d.CMR_ISSUING_CNTRY, 'PRJ' STAT_TYPE, count(1) COUNTS \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
where a.REQ_ID = d.REQ_ID \
and a.REQ_STATUS = 'COM' \
${CNTRY} \
and a.CREATE_TS >= :CREATE_FROM \
and a.CREATE_TS <= :CREATE_TO \
and exists (select 1 \
                from CREQCMR.WF_HIST h \
                where a.REQ_ID = h.REQ_ID \
                and h.REQ_STATUS = 'PRJ') \
group by nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID), d.CMR_ISSUING_CNTRY \
union all \
select nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID) REQUESTER, d.CMR_ISSUING_CNTRY, 'OPN' STAT_TYPE, count(1) COUNTS \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
where a.REQ_ID = d.REQ_ID \
and a.REQ_STATUS in ('DRA', 'PRJ') \
${CNTRY} \
and a.CREATE_TS >= :CREATE_FROM \
and a.CREATE_TS <= :CREATE_TO \
and exists (select 1  \
                from CREQCMR.WF_HIST h \
                where a.REQ_ID = h.REQ_ID \
                and h.REQ_STATUS = 'PRJ') \
group by nvl(a.SOURCE_SYST_ID,a.REQUESTER_ID), d.CMR_ISSUING_CNTRY \
) a \
left outer join SAPR3.TVK6T k \
  on a.CMR_ISSUING_CNTRY = k.KATR6 \
  and k.MANDT = '230' \
  and k.SPRAS = 'E' \
left outer join CMMA.USERS u \
  on lower(a.REQUESTER) = lower(u.USER_ID) \
where nvl(REQUESTER, '') <> '' \
order by lower(REQUESTER), CMR_ISSUING_CNTRY

METRICS.AUTOMATION_STATS=\
select admin.REQ_ID, admin.SOURCE_SYST_ID, trim(admin.MAIN_CUST_NM1||' '||nvl(admin.MAIN_CUST_NM2,'')) CUST_NM, data.CMR_ISSUING_CNTRY, data.CMR_NO, data.VAT VAT , nvl(type.TXT,admin.REQ_TYPE) REQ_TYPE, \
       fully.FULL_AUTO, legacy.LEGACY, rev.REVIEW, rej.REJECT, rev.FAILURE_INDC, supp.NM CNTRY_DESC, scenario.SCENARIO_TYPE_DESC CUST_GRP, scenario.SCENARIO_SUBTYPE_DESC CUST_SUB_GRP, data.CMR_ISSUING_CNTRY GEO, data.CMR_ISSUING_CNTRY MARKET, \
       case \
       when nvl(scorecard.DNB_MATCHING_RESULT,'') = '' then 'Not Done' \
       when scorecard.DNB_MATCHING_RESULT = 'Y' then 'Yes' \
       when scorecard.DNB_MATCHING_RESULT = 'N' then 'No' \
    end DNB_MATCHING_RESULT,       \
    case \
       when nvl(scorecard.RPA_MATCHING_RESULT,'') = '' then 'Not Done' \
       when scorecard.RPA_MATCHING_RESULT = 'Y' then 'Yes' \
       when scorecard.RPA_MATCHING_RESULT = 'N' then 'No' \
    end RPA_MATCHING_RESULT,       \
    case \ when rev.PROCESS_CD is null and rev.REVIEW = 'Y' then 'CHECKS' \
           when rev.PROCESS_CD = 'US_SOS_RPA_CHECK' then 'No D&B and SOS Matching' \
           else nvl(elem.PROCESS_DESC,rev.PROCESS_CD) end PROCESS_CD, rej.REJ_REASON, admin.PAYGO_PROCESS_INDC PAYGO_INDC, admin.POOL_CMR_INDC POOL, \
       nvl(status.STATUS_DESC, admin.REQ_STATUS) REQ_STATUS, rev.CMT, CAST(THIS_WEEK(process.CREATE_TS) AS VARCHAR) WEEK_OF, \
       (select 'Y' from SYSIBM.SYSDUMMY1 where exists (select 1 from CMMA.FINDCMR_PARTNERS where PAYGO_ACCREDITED = 'Y' and (SERVICE_ID = admin.SOURCE_SYST_ID or SYST_ID = admin.SOURCE_SYST_ID))) PAYGO, \
       timestampdiff(2, char(nvl(completion.COMPLETION_END,admin.LAST_UPDT_TS) - admin.CREATE_TS)) OVERALL_TAT, \
       VARCHAR_FORMAT(admin.CREATE_TS, 'DD-MM-YYYY HH24:MI') CREATE_TS, cmt.CMT AUTO_COMMENT, approval.APPROVALS, \
       error.CMT ERROR_CMT, force.CMT FORCE_CMT, admin.DISABLE_AUTO_PROC \
from CREQCMR.ADMIN admin, CREQCMR.DATA data, CREQCMR.SUPP_CNTRY supp, CREQCMR.AUTO_ENGINE_MAPPING map \
left outer join CREQCMR.LOV type \
  on admin.REQ_TYPE = type.CD \
  and type.FIELD_ID = '##SearchRequestType' \
left outer join CREQCMR.STATUS_DESC status \
  on admin.REQ_STATUS = status.REQ_STATUS \
left outer join CREQCMR.SCORECARD scorecard \
  on admin.REQ_ID = scorecard.REQ_ID \
left outer join (select a.REQ_ID, 'Y' FULL_AUTO \
                 from CREQCMR.ADMIN a \
                 where exists (select 1 \
                               from CREQCMR.WF_HIST h \
                               where a.REQ_ID = h.REQ_ID \
                               and h.REQ_STATUS in ('PCP', 'REP', 'PRJ', 'COM','LEG')) \
                 and not exists (select 1 \
                                 from CREQCMR.WF_HIST h \
                                 where a.REQ_ID = h.REQ_ID \
                                 and h.REQ_STATUS in ('PPN', 'PVA')) ) fully \
  on admin.REQ_ID = fully.REQ_ID \
left outer join (select a.REQ_ID, 'Y' LEGACY \
                 from CREQCMR.ADMIN a \
                 where exists (select 1 \
                               from CREQCMR.WF_HIST h \
                               where a.REQ_ID = h.REQ_ID \
                               and h.REQ_STATUS = 'PCP' \
                               and h.CREATE_BY_ID = 'AutomationEngine') \
                               and exists (select 1 \
                                           from CREQCMR.WF_HIST h \
                                           where a.REQ_ID = h.REQ_ID \
                                           and h.REQ_STATUS = 'PPN' \
                                           and h.CREATE_BY_ID <> 'AutomationEngine') ) legacy \
  on admin.REQ_ID = legacy.REQ_ID \
left outer join (select a.REQ_ID, 'Y' REVIEW,  case when res.PROCESS_CD = 'GBL_APPROVALS' then null else res.PROCESS_CD end PROCESS_CD, res.FAILURE_INDC, hist.CMT \
                 from CREQCMR.ADMIN a \
                 left outer join (select res.REQ_ID, res.PROCESS_CD, res.FAILURE_INDC \
                                  from CREQCMR.AUTOMATION_RESULTS res \
                                  where res.FAILURE_INDC is not null and res.PROCESS_CD <> 'STOP' \
                                  and not exists (select 1 \
                                                  from CREQCMR.AUTOMATION_RESULTS res1 \
                                                  where res1.REQ_ID = res.REQ_ID \
                                                  and res1.PROCESS_CD <> 'STOP' \
                                                  and res1.CREATE_TS > res.CREATE_TS)) res \
                   on a.REQ_ID = res.REQ_ID \
                 left outer join CREQCMR.WF_HIST hist \
                   on a.REQ_ID = hist.REQ_ID \
                   and hist.REQ_STATUS = 'PPN' \
                   and hist.CREATE_BY_ID = 'AutomationEngine' \
                   and not exists (select 1 \
                                   from CREQCMR.WF_HIST h \
                                   where h.REQ_ID = hist.REQ_ID \
                                   and h.REQ_STATUS = 'PPN' \
                                   and h.WF_ID < hist.WF_ID) \
                 where exists (select 1 \
                               from CREQCMR.WF_HIST h \
                               where a.REQ_ID = h.REQ_ID \
                               and h.REQ_STATUS in ('PPN', 'PVA')) ) rev \
  on admin.REQ_ID = rev.REQ_ID \
left outer join (select a.REQ_ID, 'Y' REJECT, nvl(h.REJ_REASON_CD, 'OTH') REJ_REASON, h.CMT \
                 from CREQCMR.ADMIN a, CREQCMR.WF_HIST h \
                 where a.REQ_ID = h.REQ_ID \
                 and h.REQ_STATUS = 'PRJ' \
                 and h.CREATE_BY_ID = 'AutomationEngine' \
                 and not exists (select 1 \
                                 from CREQCMR.WF_HIST h1 \
                                 where h.REQ_ID = h1.REQ_ID \
                                 and h1.REQ_STATUS = 'PRJ' \
                                 and h.WF_ID < h1.WF_ID \
                                 and h1.CREATE_BY_ID = 'AutomationEngine') ) rej \
  on admin.REQ_ID = rej.REQ_ID \
left outer join (select '897' CMR_ISSUING_CNTRY, g.REFT_USCMR_GRP_KEY||'' SCENARIO_TYPE, g.USCMR_DESC SCENARIO_TYPE_DESC , s.USCMR_SUB_GROUP SCENARIO_SUBTYPE, s.USCMR_SUB_GRP_DESC SCENARIO_SUBTYPE_DESC \
                 from CMMA.REFT_USCMR_GRP_G g, CMMA.REFT_USCMR_SGRP_G s \
                 where s.REFT_USCMR_GRP_KEY = g.REFT_USCMR_GRP_KEY \
                 union all \
                 select g.ISSUING_CNTRY CMR_ISSUING_CNTRY, g.CUST_TYP_VAL SCENARIO_TYPE, g.CUST_TYP_DESC SCENARIO_TYPE_DESC, s.CUST_SUB_TYP_VAL SCENARIO_SUBTYPE, s.CUST_SUB_TYP_DESC SCENARIO_SUBTYPE_DESC \
                 from CREQCMR.CUST_TYPE g, CREQCMR.CUST_SUB_TYPE s \
                 where g.CUST_TYP_VAL = s.CUST_TYP_VAL \
                 and g.ISSUING_CNTRY = s.ISSUING_CNTRY \
                 and g.ISSUING_CNTRY <> '897') scenario \
  on data.CMR_ISSUING_CNTRY = scenario.CMR_ISSUING_CNTRY \
  and data.CUST_GRP = scenario.SCENARIO_TYPE \
  and data.CUST_SUB_GRP = scenario.SCENARIO_SUBTYPE \
left outer join CREQCMR.AUTO_ENGINE_ELEMENTS elem \
  on rev.PROCESS_CD = elem.PROCESS_CD \
left outer join (select hist.REQ_ID, hist.CREATE_BY_ID COMPLETED_BY_ID, hist.CREATE_BY_NM COMPLETED_BY_NM, hist.CREATE_TS COMPLETION_START, \
                 hist.CREATE_TS COMPLETION_END \
                 from CREQCMR.ADMIN admin, CREQCMR.WF_HIST hist \
                 where admin.REQ_ID = hist.REQ_ID \
                 and hist.REQ_STATUS = 'COM' \
                 and not exists (select 1 \
                                 from CREQCMR.WF_HIST hist2 \
                                 where admin.REQ_ID = hist2.REQ_ID \
                                 and hist2.REQ_STATUS = 'COM' \
                                 and hist2.CREATE_TS < hist.CREATE_TS)) completion \
  on admin.REQ_ID = completion.REQ_ID \
left outer join (select h.REQ_ID, h.REQ_STATUS, h.CREATE_TS \
                 from CREQCMR.WF_HIST h \
                 where h.REQ_STATUS in ('PVA', 'PCP', 'PCR', 'COM', 'PRJ','LEG') \
                 and not exists (select 1 \
                                 from CREQCMR.WF_HIST h2 \
                                 where h2.REQ_ID = h.REQ_ID \
                                 and h2.REQ_STATUS  in ('PVA', 'PCP', 'PCR', 'COM', 'PRJ','LEG') \
                                 and h2.CREATE_TS < h.CREATE_TS)) process \
  on admin.REQ_ID = process.REQ_ID \
left outer join (select cmt.REQ_ID, cmt.CMT \
                 from CREQCMR.REQ_CMT_LOG cmt \
                 where cmt.CREATE_BY_ID = 'AutomationEngine' \
                 and (cmt.CMT like '%Processor review is required%' or cmt.CMT like '%request needs further review%' or cmt.CMT like '%Processing error%') \
                 and not exists (select 1  \
                                 from CREQCMR.REQ_CMT_LOG cmt1 \
                                 where cmt.REQ_ID = cmt1.REQ_ID \
                                 and cmt.CREATE_BY_ID = cmt1.CREATE_BY_ID \
                                 and (cmt1.CMT like '%Processor review is required%' or cmt1.CMT like '%request needs further review%' or cmt.CMT like '%Processing error%') \
                                 and cmt1.CREATE_TS > cmt.CREATE_TS)) cmt \
  on admin.REQ_ID = cmt.REQ_ID \
left outer join (select a.REQ_ID, listagg(h.STATUS,',') APPROVALS \
                 from CREQCMR.APPROVAL_REQ a, CREQCMR.APPROVAL_HIST h \
                 where a.APPROVAL_ID = h.APPROVAL_ID \
                 group by REQ_ID) approval \
  on admin.REQ_ID = approval.REQ_ID \
left outer join (select err.CMT, err.REQ_ID  \
                 from CREQCMR.REQ_CMT_LOG err \
                 where (err.CMT like '%error occurred%' or err.CMT like '%Error%'  or err.CMT like '%Automatic Processing%failed%' or err.CMT like '%FAILED processing%')\
                 and not exists (select 1  \
                                 from CREQCMR.REQ_CMT_LOG e2 \
                                 where err.REQ_ID = e2.REQ_ID \
                                 and (e2.CMT like '%error occurred%' or e2.CMT like '%Error%' or e2.CMT like '%Automatic Processing%failed%' or e2.CMT like '%FAILED processing%') \
                                 and e2.CREATE_TS > err.CREATE_TS)) error \
  on admin.REQ_ID = error.REQ_ID \
left outer join (select a.REQ_ID, 'FORCED STATUS CHANGE' CMT \
                 from CREQCMR.ADMIN a \
                 where exists (select 1 \
                               from CREQCMR.WF_HIST h \
                               where a.REQ_ID = h.REQ_ID \
                               and h.REQ_STATUS in ('PPN','PVA', 'AUT') \
                               and h.REQ_STATUS_ACT = 'Forced Status Change')) force \
  on admin.REQ_ID = force.REQ_ID \
where admin.REQ_ID = data.REQ_ID \
and data.CMR_ISSUING_CNTRY = supp.CNTRY_CD \
and data.CMR_ISSUING_CNTRY = map.CMR_ISSUING_CNTRY \
and map.PROCESS_ON_COMPLETION = 'Y' \
and nvl(supp.AUTO_ENGINE_INDC,'') <> '' \
and process.CREATE_TS >= :CREATE_FROM \
and process.CREATE_TS <= :CREATE_TO \
and exists (select 1 from CREQCMR.WF_HIST cmde where cmde.REQ_ID = admin.REQ_ID and cmde.REQ_STATUS in ('PPN', 'PVA', 'AUT', 'PCP', 'PCR','LEG'))

DASHBOARD.PROCESS=select a.REQ_ID, a.LOCK_BY, a.REQ_STATUS, a.REQ_TYPE, d.CMR_ISSUING_CNTRY, upper(s.NM) CNTRY_NM, nvl(upper(a.MAIN_CUST_NM1),'') CUST_NM, a.SOURCE_SYST_ID, s.PROCESSING_TYP, a.LAST_UPDT_TS, current timestamp TS, \
       timestampdiff(4,current timestamp - a.LAST_UPDT_TS) DIFF_MIN, timestampdiff(8,current timestamp - a.LAST_UPDT_TS) DIFF_HR, timestampdiff(16,current timestamp - a.LAST_UPDT_TS)  DIFF_DAY, \
       tc.ENABLED HOST_DOWN, a.PROCESSED_FLAG, a.RDC_PROCESSING_STATUS, lov.TXT STATUS_DESC \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
left outer join TRANSCONN.HOSTDOWN tc \
  on s.HOST_SYS_TYP = tc.HOST_SYSTEM \
  and s.PROCESSING_TYP = 'TC' \
  and tc.ENABLED = 'Y' \
  and ( \
    ((DAYOFWEEK (current timestamp) = tc.OUTAGE_DAY AND TIME (current timestamp) BETWEEN tc.OUTAGE_START_TIME AND tc.OUTAGE_END_TIME)  \
         OR (tc.OUTAGE_DAY = 9 AND TIME (current timestamp) BETWEEN tc.OUTAGE_START_TIME AND tc.OUTAGE_END_TIME)) \
  ) \
left outer join CREQCMR.LOV lov \
  on a.REQ_STATUS = lov.CD \
  and lov.CMR_ISSUING_CNTRY = '*' \
  and lov.FIELD_ID = '##SearchRequestStatus' \
where a.REQ_ID = d.REQ_ID \
and ( \
  a.REQ_STATUS in ('PCP', 'PCR', 'PCO')  \
  or a.REQ_STATUS = 'COM' and a.LAST_UPDT_TS > timestamp(current date) - 4 hours \
) \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD 

DASHBOARD.AUTOMATION=select a.REQ_ID, a.LOCK_BY, a.REQ_STATUS, a.REQ_TYPE, d.CMR_ISSUING_CNTRY, upper(s.NM) CNTRY_NM, nvl(upper(a.MAIN_CUST_NM1),'') CUST_NM, a.SOURCE_SYST_ID, s.PROCESSING_TYP,  \
       a.LAST_UPDT_TS, timestampdiff(4,nvl(com.CREATE_TS, a.LAST_UPDT_TS) - aut.CREATE_TS) DIFF_MIN, nvl(apr.APR_MIN,0) APR_MIN, case when rev.CREATE_TS is not null then 'Y' else 'N' end MANUAL,  \
       tc.ENABLED HOST_DOWN, timestampdiff(4,nvl(nxt.CREATE_TS, a.LAST_UPDT_TS) - aut.CREATE_TS) DIFF_MIN_NXT, timestampdiff(4,current timestamp - aut.CREATE_TS) DIFF_WAIT, lov.TXT STATUS_DESC \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s  \
left outer join CREQCMR.WF_HIST com  \
  on a.REQ_ID = com.REQ_ID  \
  and com.REQ_STATUS = 'COM'  \
  and not exists (select 1   \
                  from CREQCMR.WF_HIST com2  \
                  where com.REQ_ID = com2.REQ_ID  \
                  and com2.REQ_STATUS in ('COM')  \
                  and com2.CREATE_TS > com.CREATE_TS)  \
left outer join CREQCMR.WF_HIST nxt  \
  on a.REQ_ID = nxt.REQ_ID  \
  and nxt.REQ_STATUS in ('RET', 'PRJ', 'PCP', 'PPN', 'REP')  \
  and nxt.CREATE_BY_ID = 'AutomationEngine' \
  and not exists (select 1   \
                  from CREQCMR.WF_HIST nxt2  \
                  where nxt.REQ_ID = nxt2.REQ_ID  \
                  and nxt2.REQ_STATUS in ('RET', 'PRJ', 'PCP', 'PPN', 'REP') \
                  and nxt2.CREATE_BY_ID = 'AutomationEngine' \
                  and nxt2.CREATE_TS > nxt.CREATE_TS)  \
left outer join CREQCMR.WF_HIST aut  \
  on a.REQ_ID = aut.REQ_ID  \
  and aut.REQ_STATUS in ('AUT')  \
  and not exists (select 1   \
                  from CREQCMR.WF_HIST aut2  \
                  where aut.REQ_ID = aut2.REQ_ID  \
                  and aut2.REQ_STATUS in ('AUT')  \
                  and aut2.CREATE_TS > aut.CREATE_TS)  \
left outer join CREQCMR.WF_HIST rev  \
  on a.REQ_ID = rev.REQ_ID  \
  and rev.REQ_STATUS in ('PPN')  \
  and not exists (select 1   \
                  from CREQCMR.WF_HIST rev2  \
                  where rev.REQ_ID = rev2.REQ_ID  \
                  and rev2.REQ_STATUS in ('PPN')  \
                  and rev2.CREATE_TS > rev.CREATE_TS)  \
left outer join (select apr.REQ_ID, timestampdiff(4, max(apr.LAST_UPDT_TS) - min(apr.CREATE_TS)) APR_MIN  \
                 from CREQCMR.APPROVAL_REQ apr  \
                 where apr.STATUS in ('APR', 'CAPR')  \
                 group by apr.REQ_ID) apr  \
  on a.REQ_ID = apr.REQ_ID  \
left outer join TRANSCONN.HOSTDOWN tc  \
  on s.HOST_SYS_TYP = tc.HOST_SYSTEM  \
  and s.PROCESSING_TYP = 'TC'  \
  and tc.ENABLED = 'Y'  \
  and (  \
    ((DAYOFWEEK (current timestamp) = tc.OUTAGE_DAY AND TIME (current timestamp) BETWEEN tc.OUTAGE_START_TIME AND tc.OUTAGE_END_TIME)   \
         OR (tc.OUTAGE_DAY = 9 AND TIME (current timestamp) BETWEEN tc.OUTAGE_START_TIME AND tc.OUTAGE_END_TIME))  \
  )  \
left outer join CREQCMR.LOV lov \
  on a.REQ_STATUS = lov.CD \
  and lov.CMR_ISSUING_CNTRY = '*' \
  and lov.FIELD_ID = '##SearchRequestStatus' \
where a.REQ_ID = d.REQ_ID  \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD  \
and ( \
(a.REQ_STATUS not in ('AUT','RET') and \
a.LAST_UPDT_TS > timestamp(current date) - 4 hours) \
or \
a.REQ_STATUS in ('AUT','RET') \
)  \
and aut.REQ_STATUS is not null

BATCH.AUTOCLOSE.WARN=select * \
from CREQCMR.ADMIN \
where REQ_STATUS in ('DRA', 'PRJ') \
and date(LAST_UPDT_TS) < current date - :DAYS \
and WARN_MSG_SENT_DT is null 

BATCH.AUTOCLOSE.EXEC=select * \
from CREQCMR.ADMIN \
where REQ_STATUS in ('DRA', 'PRJ') \
and WARN_MSG_SENT_DT is not null \
and date(WARN_MSG_SENT_DT) < current date - 2

BATCH.AUTOCLOSE.APPROVAL=update creqcmr.APPROVAL_REQ set STATUS='CAN' where REQ_ID=:REQ_ID and STATUS NOT IN ('APR')

DUMMY=and exists (select 1 \
            from CREQCMR.AUTOMATION_RESULTS res \
            where admin.REQ_ID = res.REQ_ID) 
            
            
DUMMYFORNOW=and exists (select 1 \
            from CREQCMR.WF_HIST h \
            where admin.REQ_ID = h.REQ_ID \
            and h.REQ_STATUS in ('PPN', 'AUT')) 

QUERY.METRICS.SOURCES=select distinct SOURCE_SYST_ID,'' \
from CREQCMR.ADMIN \
where trim(nvl(SOURCE_SYST_ID,'')) <> '' \
order by SOURCE_SYST_ID 

QUERY.GET_GBG_FROM_LOV = select CD from CREQCMR.LOV where FIELD_ID='##GBG'and CD=:CD and CMR_ISSUING_CNTRY=:COUNTRY

# UKI + EMEA Queries
QUERY.GET_ADDRESS_TYPES=select CD, TXT, CMR_ISSUING_CNTRY \
from CREQCMR.LOV \
where FIELD_ID = '##AddressTypeInput' \
and (CMR_ISSUING_CNTRY = :CNTRY \
or CMR_ISSUING_CNTRY = '*') \
order by case when CMR_ISSUING_CNTRY = '*' then 10 else 0 end, DISP_ORDER
QUERY.GET.TAX_MANAGER.BY_ISSUING_CNTRY=SELECT TXT FROM CREQCMR.LOV WHERE FIELD_ID = '##CountryTaxManagers' AND CMR_ISSUING_CNTRY = :ISSUING_CNTRY

QUERY.GET.CUSTNM_ADDR=SELECT CUST_NM1,CUST_NM2 FROM CREQCMR.ADDR WHERE ADDR_TYPE = :ADDR_TYPE AND REQ_ID = :REQ_ID
QUERY.GET_PREDEFINED_REQUESTERS_MU=select PARAMETER_VALUE,'' from CREQCMR.SYST_PARAMETERS where PARAMETER_CD = :PARAMETER_CD 

ADDRESS.COPY.GETSOURCE=\
select * \
from CREQCMR.ADDR \
where REQ_ID = :REQ_ID \
and ADDR_TYPE = :ADDR_TYPE \
order by case when ADDR_SEQ = :ADDR_SEQ then -1 else 1 end
ADDRESS.COPY.GETADDRESSES=select * from CREQCMR.ADDR \
where REQ_ID = :REQ_ID \
and ( \
  (ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ <> :ADDR_SEQ) \
or (ADDR_TYPE <> :ADDR_TYPE) \
) \
 order by ADDR_TYPE, ADDR_SEQ

DATA.GET.RECORD.BYID=select * from CREQCMR.DATA where REQ_ID = :REQ_ID

QUERY.EMEA.CHECK_ACTIVE_CMR=SELECT 1,'' \
FROM SAPR3.KNA1 \
WHERE AUFSD NOT IN ('93','75') \
AND LOEVM<>'X' \
AND KATR6 = :KATR6 \
AND KTOKD='ZS01' \
AND ZZKV_CUSNO=:ZZKV_CUSNO \
AND MANDT=:MANDT 

QUERY.GET.ECONOMIC_CD_BY_REQID=SELECT ECONOMIC_CD, '' FROM CREQCMR.DATA WHERE REQ_ID = :REQ_ID
#Contact Info (LA)
CONTACTINFO.FINDALL=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID   
CONTACTINFO.FINDONE.DETAILS=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND GEO_ADL_CONT_DTL_ID=:ID
CONTACTINFO.CHECK.EXISTS=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND GEO_ADL_CONT_DTL_ID=:ID AND CONTACT_TYPE=:TYPE
QUERY.FIND_CONTACTINFO_DETAILS=SELECT REQ_ID, GEO_ADL_CONT_DTL_ID, CONTACT_TYPE, CONTACT_NAME, PHONE, EMAIL, CONTACT_NUM, \
TREATMENT, FUNC FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND GEO_ADL_CONT_DTL_ID=:ID 
CONTACTINFO.GENERATE.ID=SELECT MAX(cast(GEO_ADL_CONT_DTL_ID as int))||'', 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID = :REQ_ID
QUERY.COUNT_CONTACTINFO.BY_TYPE=SELECT COUNT(*), 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE=:TYPE
QUERY.COUNT_CONTACTINFO.BY_SEQ=SELECT COUNT(*), 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_NUM=:SEQ
CONTACTINFO.FINDALL.BY_SEQ=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_NUM=:SEQ
CONTACTINFO.FINDALL.BY_TYPE=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE=:TYPE
QUERY.COUNT_CONTACTINFO.BY_REQID=SELECT COUNT(*), 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID
CONTACTINFO.CHECKEMAIL.IF_SAME=SELECT case when co.EMAIL=da.EMAIL1 then 'TRUE' else 'FALSE' end, 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL co \
LEFT OUTER JOIN CREQCMR.DATA da ON co.REQ_ID=da.REQ_ID WHERE co.REQ_ID=:REQ_ID AND co.CONTACT_TYPE=:TYPE AND co.CONTACT_NUM=:SEQ
QUERY.FIND_DATA_EMAIL1_FOR_CHECKING=SELECT EMAIL1, 'XXX' FROM CREQCMR.DATA WHERE REQ_ID=:REQ_ID
CONTACTINFO.GET_EMAIL1_FROM_DATA=SELECT EMAIL1 FROM CREQCMR.DATA WHERE REQ_ID=:REQ_ID
QUERY.COUNT_CONTACTINFO.EM001=SELECT COUNT(*), 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE=:TYPE AND CONTACT_NUM=:SEQ
QUERY.CONTACTINFO_MAX_SEQUENCE=SELECT MAX(cast(CONTACT_NUM as int))||'', 'XXX' FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE=:TYPE
CONTACTINFO.FIND.EM.RECORD=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE='EM' AND CONTACT_NUM='001'
CONTACTINFO.FIND.LE.CF.RECORDS=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE IN (:CONT1, :CONT2)
CONTACTINFO.FIND.LE.RECORDS=SELECT * FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE = 'LE'
CONTACTINFO.DELETE.LE.CF.RECORDS=DELETE FROM CREQCMR.GEO_ADL_CONT_DTL WHERE REQ_ID=:REQ_ID AND CONTACT_TYPE IN (:CONT1, :CONT2)

#EMEA MassUPdates
GET.MASS.UPDATE.DATA.BY.ID.EMEA=select * from CREQCMR.MASS_UPDT_DATA where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.ADDR.BY.ID.EMEA=select * from CREQCMR.MASS_UPDT_ADDR where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.BY.ID.EMEA=select * from CREQCMR.MASS_UPDT where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.ITERID.EMEA=select ITERATION_ID,'' from CREQCMR.ADMIN where REQ_ID = :REQ_ID
GET.MASS.UPDATE.ADDR.COUNT=select count(*) from CREQCMR.MASS_UPDT_ADDR where PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITERATION_ID

#DECND Mass Updates
GET.MASS.UPDATE.DATA.BY.ID.DECND=select * from CREQCMR.MASS_UPDT_DATA where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.ADDR.BY.ID.DECND=select * from CREQCMR.MASS_UPDT_ADDR where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.BY.ID.DECND=select * from CREQCMR.MASS_UPDT where PAR_REQ_ID = :PAR_REQ_ID AND ITERATION_ID = :ITERATION_ID
GET.MASS.UPDATE.ITERID.DECND=select ITERATION_ID,'' from CREQCMR.ADMIN where REQ_ID = :REQ_ID
#LA Get Trains/Municipal Fiscal Code
GET.LA.MUNICIPAL.FISCAL.CODE=SELECT KUNNR, BAHNS FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

#LA Get RDc Name1/Name2
GET.LA.NAME1.NAME2=SELECT NAME1, NAME2, KUNNR FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR 

GET.LA.NAME1.NAME2.CREATE=SELECT NAME1, NAME2, KUNNR FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND ZZKV_CUSNO = :CMR \
AND KATR6 = :KATR6 \
AND KTOKD = 'ZS01' \
WITH UR 

#IERP Get BRAN5
GET.IERP.BRAN5=SELECT BRAN5, MANDT, KUNNR FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

#IERP Get PAYGO SAPNO
GET.NZ.PAYGOSAPNO=SELECT KUNNR, BRAN5 FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND ZZKV_CUSNO = :ZZKV_CUSNO \
AND ZZKV_SEQNO = :ZZKV_SEQNO \
AND KATR6 = :KATR6 

#IERP Get MODE OF PAYMENT
GET.IERP.MODE_OF_PAYMENT=SELECT ZTERM, MANDT, KUNNR FROM SAPR3.KNVV \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

#IERP Get SPRAS
GET.IERP.SPRAS=SELECT SPRAS, MANDT, KUNNR FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

#TAX CODE
GET.TAXCODE.TAXKD=SELECT TAXKD, MANDT, KUNNR, ALAND FROM SAPR3.KNVI \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND ALAND = 'CH' \
WITH UR


#IERP Update ADDR.IERP_SITE_PRTY_ID
UPDT.IERP.ADDR_IERP_SITE_PRTY_ID = UPDATE CREQCMR.ADDR SET IERP_SITE_PRTY_ID = :IERP_SITE_PRTY_ID \
WHERE REQ_ID = :REQ_ID AND AND SAP_NO = :SAP_NO

#LA Get proxi locn no
GET.LA.PROXI_LOCN_DESC=SELECT TXT FROM CREQCMR.LOV \
WHERE FIELD_ID = '##ProxiLocationNumber' \
AND CMR_ISSUING_CNTRY = :KATR6 \
AND CD = :CD

#Code Maintenance change
SYSTEM.SYSTEM_PARAMETER=select * from CREQCMR.SYST_PARAMETERS where upper(PARAMETER_CD) like :CD and upper(PARAMETER_NAME) like :NAME order by PARAMETER_CD
SYSTEM.SYS_PARAM_BY_PARAM_CD=select * from CREQCMR.SYST_PARAMETERS where PARAMETER_CD = :PARAM_CD
QUERY.SYS_PARAM=select 1,'' from CREQCMR.SYST_PARAMETERS where PARAMETER_CD = :PARAMETER_CD
QUERY.SYS_PARAM_VALUE_VERIFY=select 1,'' from CREQCMR.SYST_PARAMETERS where PARAMETER_CD = :CD and PARAMETER_VALUE like :VALUE


# EMEA AbbrevNm and AbbrevLocn
QUERY.ADDR.GET.CUSTNM1.BY_REQID=select CUST_NM1,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.ADDR.GET.CUSTNM1.BY_REQID_MCO=select CUST_NM1,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
QUERY.ADDR.GET.LANDCNTRY.BY_REQID=select LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.ADDR.GET.CITY1.BY_REQID=select CITY1,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.ADDR.GET.CTYALANDCNTRY.BY_REQID=SELECT COUNTRY_DESC, COUNTRY_CD FROM cmma.REFT_COUNTRY_W AS t1 INNER JOIN (select LAND_CNTRY from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'CTYA') t2 ON t1.COUNTRY_CD = t2.LAND_CNTRY
QUERY.ADDR.GET.ZS01LANDCNTRY.BY_REQID=SELECT COUNTRY_DESC, COUNTRY_CD FROM cmma.REFT_COUNTRY_W AS t1 INNER JOIN (select LAND_CNTRY from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01') t2 ON t1.COUNTRY_CD = t2.LAND_CNTRY
QUERY.ADDR.GET.CUSTNM1.BY_REQID_ADDRTYP=select CUST_NM1,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
QUERY.ADDR.GET.OLDCUSTNM1.BY_REQID=select CUST_NM1,CUST_NM2 from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
QUERY.ADDR.GET.OLDADDR.BY_REQID_ADDRTYP=select ADDR_TYPE,CUST_NM1,CUST_NM2,CUST_NM4,ADDR_TXT,ADDR_TXT_2,CITY1,POST_CD,LAND_CNTRY,PO_BOX,CUST_PHONE from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
QUERY.ADDR.GET.LANDCNTRY.BY_REQID_ADDRTYP=select COUNTRY_DESC, COUNTRY_CD from CMMA.REFT_COUNTRY_W where COUNTRY_CD = (select LAND_CNTRY from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ)
QUERY.ADDR.GET.LANDCNTRYDESC.BY_COUNTRY_CD=select COUNTRY_DESC, COUNTRY_CD from CMMA.REFT_COUNTRY_W where COUNTRY_CD =:COUNTRY_CD
QUERY.ADDR.GET.CITY1.BY_REQID_ADDRTYP=select CITY1,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ
QUERY.ADDR.GET.POSTCD.BY_REQID_ADDRTYP=select POST_CD,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ
QUERY.GET.TAXCD.BY_CUSTSUBGRP=select VALUE,'' from creqcmr.CUST_SCENARIOS where LOC_CD='838' and FIELD_ID='##SpecialTaxCd' and CUST_TYP= :CUST_TYP
QUERY.ADDR.GET.CD.TXT.BY_LOC.ES=select CD, TXT from CREQCMR.LOV where field_id = '##LocationNumber' and cmr_issuing_cntry = '838' 
QUERY.DATA.GET.ABBREV_NM.BY_REQID=select ABBREV_NM,'' from CREQCMR.DATA where REQ_ID = :REQ_ID
QUERY.ADDR.GET.STATEPROV.BY_REQID_ADDRTYP=select STATE_PROV,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ

#BR
QUERY.ADDR.GET.STATEPROV.BY_REQID_ADDRTYP=select STATE_PROV,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ

QUERY.ADDR.GET.CNTRYNAME=select NM, '' from CREQCMR.SUPP_CNTRY where DEFAULT_LANDED_CNTRY = :CNTRY

QUERY.DATA.GET.CUSTSUBGRP.BY_REQID=select CUST_SUB_GRP,'' from CREQCMR.DATA where REQ_ID = :REQ_ID
QUERY.DATA.GET.CMR.BY_REQID=select CMR_ISSUING_CNTRY, '' from CREQCMR.DATA where REQ_ID = :REQ_ID

QUERY.GET.CMR.CEE=select * from sapr3.kna1 where mandt= :MANDT AND KATR6= :CNTRY AND ZZKV_CUSNO= :CMRNO AND LOEVM <>'X' AND AUFSD <> '93'
QUERY.GET.CMR_BY_CNTRY_CUSNO_SAPR3=select * from sapr3.kna1 where mandt= :MANDT AND KATR6= :CNTRY AND ZZKV_CUSNO= :CMRNO
QUERY.GET.CHECK_EXISTS_CMR_NO=select * from CMRDB2D.CMRTCUST where rcyaa= :CNTRY and rcuxa= :CMR_NO

#CMR-4606 Used to Check RU CIS Duplicate exist
QUERY.GET.CIS.DUP.CNTRY.BYCMR = select katr6, '' from sapr3.kna1 where mandt= :MANDT AND ZZKV_CUSNO= :CMRNO AND KATR6 <>'821' AND LOEVM <>'X' AND AUFSD <> '93' AND KTOKD = 'ZS01' AND TELX1 like '% CIS'
QUERY.GET_G_SEQ_FROM_LEGACY=SELECT ADDRNO, '' FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRUSEG = 'Y'

# Ireland SBO and SalesRep
QUERY.GET.SALESREP.IRELAND=select REP_TEAM_CD,SALES_BO_CD,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY like :ISSUING_CNTRY and ISU_CD like :ISU_CD

# UK SBO and SalesRep
QUERY.GET.SBO.UK=select SALES_BO_CD,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY='866' and CLIENT_TIER= :CLIENT_TIER and UPDATE_BY_ID like :ISU_CD
QUERY.GET.SALESREP.UK=select REP_TEAM_CD,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY='866' and CLIENT_TIER= :CLIENT_TIER and UPDATE_BY_ID like :ISU_CD and SALES_BO_CD = :SALES_BO_CD
QUERY.GET.SALESREP.UK2018=select SALES_BO_DESC,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY='866' and SALES_BO_CD = :SALES_BO_CD

# AP Ragion Code
QUERY.GET.RAGION_CD=select REGION_CD,'' from CREQCMR.PROV_REGION_OFFICE where ISSUING_CNTRY = :CNTRY AND PROV_CD = :PROV_CD
QUERY.GET.CNTRY_DESC=select COUNTRY_DESC,'' from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY
QUERY.GET.CTC_ISU_BY_CLUSTER_CNTRY=select CLIENT_TIER_CD,ISU_CD,'' from CREQCMR.AP_CUST_CLUSTER_TIER_MAP where AP_CUST_CLUSTER_ID = :CLUSTER AND ISSUING_CNTRY = :ISSUING_CNTRY
QUERY.GET.ISU_BY_CLUSTER_CNTRY_CTC=SELECT ISU_CD,'' FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE AP_CUST_CLUSTER_ID = :CLUSTER AND ISSUING_CNTRY = :ISSUING_CNTRY and CLIENT_TIER_CD = :CLIENT_TIER_CD
QUERY.GET.INAC_CD=SELECT CD,TXT FROM CREQCMR.LOV WHERE CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##INACCode' and CMT like :CMT  

# NZ Query ISIC_CD
QUERY.GET.ISIC_CD_BY_REQID=SELECT ISIC_CD, '' FROM CREQCMR.DATA WHERE REQ_ID = :REQ_ID

# FR Queries
QUERY.ADDR.GET.LANDEDCNTRY.BY_REQID_ADDRTYPE=select LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
QUERY.GET.SBO.BY_CNTRY_UPDATED_BY=select SALES_BO_CD,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY= :ISSUING_CNTRY and UPDATE_BY_ID like :UPDATE_BY_ID and ISU_CD= :ISU_CD
QUERY.GET.SR.BY_CNTRY_UPDATED_BY=select REP_TEAM_CD,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY= :ISSUING_CNTRY and UPDATE_BY_ID like :UPDATE_BY_ID and ISU_CD= :ISU_CD
QUERY.ADDR.GET.CNTRY_CITY_PSCD.BY_REQID_ADDRTYPE=select LAND_CNTRY, CITY1, POST_CD, '' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
QUERY.CUSLOC.GET.LOCN_BY_CITY_PSCD= SELECT LOCN_CD, '' FROM CREQCMR.LOCN_CD_MAPPING WHERE CITY =:CITY AND POST_CD =:POST_CD
QUERY.CUSLOC.GET.LOCN_BY_CNTRY= SELECT LOCN_CD, '' FROM CREQCMR.LOCN_CD_MAPPING WHERE LANDED_CNTRY = :LANDED_CNTRY
QUERY.GET.IBO_OLD_BY_REQID=SELECT INSTALL_BRANCH_OFF, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.ADDR_BY_REQID_TYPE=SELECT 1,'' FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE=:ADDR_TYPE
QUERY.GET.ABBNM_ABBLOCN_BY_REQID=SELECT ABBREV_NM, ABBREV_LOCN FROM CREQCMR.DATA WHERE REQ_ID=:REQ_ID
QUERY.CHECK.CNTRY_BY_DESC=select 1,'' from CMMA.REFT_COUNTRY_W where upper(trim(COUNTRY_DESC)) = upper(trim(:COUNTRY_DESC))
QUERY.GET.DATA_RDC.EMBARGO_BY_REQID=SELECT EMBARGO_CD, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.SCENARIO_VALUE=select VALUE,'' from CREQCMR.CUST_SCENARIOS where LOC_CD = :LOC_CD AND CUST_TYP = :CUST_TYP and FIELD_NAME = :FIELD_NAME
QUERY.GET.DATA_RDC.CLIENT_TIER_REQID=SELECT CLIENT_TIER, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID

# JP Queries
QUERY.GET.LOCNCD_BY_POSTLCD=SELECT LOCN_CD,'' FROM CREQCMR.LOCN_CD_MAPPING WHERE CMR_ISSUING_CNTRY= :CMR_ISSUING_CNTRY and POST_CD= :POST_CD
QUERY.GET.CSBO_BY_POSTLCD=SELECT CS_BO,'' FROM CREQCMR.LOCN_CD_MAPPING WHERE CMR_ISSUING_CNTRY= :CMR_ISSUING_CNTRY and POST_CD= :POST_CD
QUERY.GET.ZS01_CUST_NM_KANJI=SELECT CUST_NM1,CUST_NM2,'' FROM CREQCMR.ADDR WHERE REQ_ID= :REQ_ID and ADDR_TYPE= :ADDR_TYPE
QUERY.GET.INACCD_SECTOR_CLUSTER_BY_OFCD=SELECT OFFICE_CD,INAC_CD,SECTOR_CD,AP_CUST_CLUSTER_ID,'' FROM CREQCMR.JP_OFFICE_SECTOR_INAC_MAPPING WHERE OFFICE_CD= :OFFICE_CD
QUERY.GET.JSIC_BY_SECTOR=SELECT JSIC_CD,'' FROM CREQCMR.JP_JSIC_CODE_MAP WHERE SECTOR_CD= :SECTOR_CD
QUERY.GET.ISIC_BY_JSIC=SELECT ISIC_CD,'' FROM CREQCMR.JP_JSIC_CODE_MAP WHERE JSIC_CD= :JSIC_CD
QUERY.GET.LOCNCD_ADDR=SELECT LOCN_CD,'' FROM CREQCMR.ADDR WHERE REQ_ID= :REQ_ID and ADDR_TYPE= :ADDR_TYPE and ADDR_SEQ= :ADDR_SEQ
QUERY.GET.ACCOUNT_CUST_NM3=SELECT CUST_NM3,'' FROM CREQCMR.ADDR WHERE REQ_ID= :REQ_ID and ADDR_TYPE= :ADDR_TYPE
QUERY.GET.COMP_NO_BY_REQID_ADDRTYPE=SELECT CITY2,'' FROM CREQCMR.ADDR WHERE REQ_ID= :REQ_ID and ADDR_TYPE= :ADDR_TYPE
QUERY.GET.CMR_NO_BY_REQID_ADDRTYPE=SELECT PAR_CMR_NO,'' FROM CREQCMR.ADDR WHERE REQ_ID= :REQ_ID and ADDR_TYPE= :ADDR_TYPE
QUERY.GET.CUSTGRP_DESC_BY_CNTRY_CUSTGRPVAL=SELECT CUST_TYP_DESC,'' FROM CREQCMR.CUST_TYPE WHERE ISSUING_CNTRY= :ISSUING_CNTRY AND CUST_TYP_VAL= :CUST_TYP_VAL
QUERY.GET.CUSTSUBGRP_DESC_BY_CNTRY_CUSTSUBGRPVAL=SELECT CUST_SUB_TYP_DESC FROM CREQCMR.CUST_SUB_TYPE WHERE ISSUING_CNTRY= :ISSUING_CNTRY AND CUST_SUB_TYP_VAL= :CUST_SUB_TYP_VAL
QUERY.GET.SALES_TEAM_CD=SELECT SALES_TEAM_CD FROM CREQCMR.DATA_RDC WHERE REQ_ID= :REQ_ID
QUERY.GET.ADDR_TYPES=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##AddressType' and CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY
QUERY.CHECK.JPTS37=SELECT 1,'' FROM CREQCMR.LOV WHERE FIELD_ID = '##JPTS37' AND CMR_ISSUING_CNTRY ='760' AND CD = :CD
QUERY.GET.ISIC_JPTS37=SELECT CD,TXT FROM CREQCMR.LOV WHERE FIELD_ID = '##JPTS37' AND CMR_ISSUING_CNTRY ='760' AND CD = :CD
QUERY.CHECK.JPTS31=SELECT 1,'' FROM CREQCMR.LOV WHERE FIELD_ID = '##JPTS31' AND CMR_ISSUING_CNTRY ='760' AND CD = :CD
QUERY.GET.ISIC_JPTS31=SELECT CD,TXT FROM CREQCMR.LOV WHERE FIELD_ID = '##JPTS31' AND CMR_ISSUING_CNTRY ='760' AND CD = :CD
QUERY.GET.ISU_BY_SUBIND=select ISU_CD, '' FROM CREQCMR.SALES_BRANCH_OFF WHERE ISSUING_CNTRY = :ISSUING_CNTRY AND REP_TEAM_CD = :GEOIND AND SALES_BO_CD = :SUBIND
QUERY.GET.ISU_BY_OFFICE_CD=select ISU_CD, '' FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY = :ISSUING_CNTRY AND AP_CUST_CLUSTER_ID = :OFFICE_CD
QUERY.GET.CTC_BY_OFFICE_CD=select CLIENT_TIER_CD, '' FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY = :ISSUING_CNTRY AND AP_CUST_CLUSTER_ID = :OFFICE_CD
QUERY.GET.MRC_BY_OFFICE_CD=select MRC_CD, '' FROM CREQCMR.SALES_BRANCH_OFF WHERE ISSUING_CNTRY = :ISSUING_CNTRY AND RIGHT(SALES_BO_CD, 2) = :OFFICE_CD AND REP_TEAM_CD = :REP_TEAM_CD
QUERY.CHECK.OFCD.JPTS38=SELECT 1,'' FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY ='760' AND AP_CUST_CLUSTER_ID = :OFCD
QUERY.GET.SORTL_BY_OFCD=SELECT AP_CUST_CLUSTER_ID, CLUSTER_DESC FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY ='760' AND AP_CUST_CLUSTER_ID =:OFCD
QUERY.GET.ROL_BY_REQID=SELECT ROL, '' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE

JP.GET.JSIC_CODE_MAP_LIST=SELECT * FROM CREQCMR.JP_JSIC_CODE_MAP
JP.GET.SPECIFIC_JSIC_CODE_MAP=SELECT * FROM CREQCMR.JP_JSIC_CODE_MAP WHERE JSIC_CD=:JSIC_CD \
AND SUB_INDUSTRY_CD=:SUB_INDUSTRY_CD AND ISU_CD=:ISU_CD AND ISIC_CD=:ISIC_CD AND DEPT=:DEPT
QUERY.JP.JSIC_CODE_MAP_EXISTS=SELECT 1, '' FROM CREQCMR.JP_JSIC_CODE_MAP WHERE JSIC_CD=:JSIC_CD \
AND SUB_INDUSTRY_CD=:SUB_INDUSTRY_CD AND ISU_CD=:ISU_CD AND ISIC_CD=:ISIC_CD AND DEPT=:DEPT

JP.GET.JP_OFFICE_SECTOR_INAC_MAPPING_LIST=SELECT * FROM CREQCMR.JP_OFFICE_SECTOR_INAC_MAPPING
JP.GET.SPECIFIC_JP_OFFICE_SECTOR_INAC_MAPPING=SELECT * FROM CREQCMR.JP_OFFICE_SECTOR_INAC_MAPPING WHERE OFFICE_CD=:OFFICE_CD \
AND INAC_CD=:INAC_CD AND SECTOR_CD=:SECTOR_CD AND AP_CUST_CLUSTER_ID=:AP_CUST_CLUSTER_ID
QUERY.JP.JP_OFFICE_SECTOR_INAC_MAPPING_EXISTS=SELECT 1, '' FROM CREQCMR.JP_OFFICE_SECTOR_INAC_MAPPING WHERE OFFICE_CD=:OFFICE_CD \
AND INAC_CD=:INAC_CD AND SECTOR_CD=:SECTOR_CD AND AP_CUST_CLUSTER_ID=:AP_CUST_CLUSTER_ID

JP.GET.ISIC_TO_JSIC_MAP_LIST=SELECT * FROM JPINTERIM.ISIC_TO_JSIC_MAP
JP.GET.SPECIFIC_ISIC_TO_JSIC_MAP=SELECT * FROM JPINTERIM.ISIC_TO_JSIC_MAP WHERE MANDT=:MANDT AND JSIC_CD=:JSIC_CD
QUERY.JP.ISIC_TO_JSIC_MAP_EXISTS=SELECT 1, '' FROM JPINTERIM.ISIC_TO_JSIC_MAP WHERE MANDT=:MANDT AND JSIC_CD=:JSIC_CD

JP.GET.BO_CODES_MAP_LIST=SELECT * FROM JPINTERIM.BO_CODES_MAP
JP.GET.SPECIFIC_BO_CODES_MAP=SELECT * FROM JPINTERIM.BO_CODES_MAP WHERE SUBSIDIARY_CD=:SUBSIDIARY_CD \
AND OFFICE_CD=:OFFICE_CD AND SUB_OFFICE_CD=:SUB_OFFICE_CD
QUERY.JP.BO_CODES_MAP_EXISTS=SELECT 1, '' FROM JPINTERIM.BO_CODES_MAP WHERE SUBSIDIARY_CD=:SUBSIDIARY_CD \
AND OFFICE_CD=:OFFICE_CD AND SUB_OFFICE_CD=:SUB_OFFICE_CD

QUERY.JP.GET.SEARCHTERM_BY_CMRNO=SELECT K.SORTL, K.ZZKV_CUSNO, K.ZZKV_SEQNO \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMRNO \
AND LOEVM <> 'X' \
AND AUFSD <> '93' \
AND KTOKD IN ('ZS01')

QUERY.JP.GET.KUNNR_BY_CMRNO=SELECT K.KUNNR, K.ZZKV_CUSNO, K.ZZKV_SEQNO \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMRNO \
AND LOEVM <> 'X' \
AND AUFSD <> '93' \
AND KTOKD IN ('ZS01')

QUERY.JP.GET.SALES_PAYMENT_FIELDS_BY_CMRNO=SELECT KUNNR, CLOSE_DAY_1, PAY_CYCLE_CD_1, PAY_DAY_1, \
CLOSE_DAY_2, PAY_CYCLE_CD_2, PAY_DAY_2, CLOSE_DAY_3, PAY_CYCLE_CD_3, PAY_DAY_3, \
CLOSE_DAY_4, PAYMENT_CYCLE_CD_4, PAY_DAY_4, CLOSE_DAY_5, PAYMENT_CYCLE_CD_5, PAY_DAY_5, \
CLOSE_DAY_6, PAYMENT_CYCLE_CD_6, PAY_DAY_6, \
CLOSE_DAY_7, PAYMENT_CYCLE_CD_7, PAY_DAY_7, \
CLOSE_DAY_8, PAYMENT_CYCLE_CD_8, PAY_DAY_8, \
CONTRACT_SIGN_DT \
FROM JPINTERIM.SALES_PAYMENT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT

QUERY.JP.GET.KNB1.BY_KUNNR=select KUNNR,ZAMIO,ZTERM,KNRZB from SAPR3.KNB1 where KUNNR = :KUNNR and MANDT = :MANDT

JP.CHECK.SALESPAYMENT=SELECT 1,'' FROM JPINTERIM.SALES_PAYMENT WHERE MANDT = :MANDT AND KUNNR = :KUNNR

JP.GET.KNA1.BY_CMR=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND LOEVM <> 'X' \
AND AUFSD <> '93'

JP.GET.SALESPAYMENT.BY_MANDT_KUNNR=SELECT * FROM JPINTERIM.SALES_PAYMENT WHERE KUNNR = :KUNNR AND MANDT = :MANDT

JP.CHECK.KNB1=SELECT 1,'' FROM SAPR3.KNB1 WHERE MANDT = :MANDT AND KUNNR = :KUNNR
JP.GET.KNB1.BY_MANDT_KUNNR=SELECT * FROM SAPR3.KNB1 WHERE KUNNR = :KUNNR AND MANDT = :MANDT

JP.GET.KNA1.BY_ZZKV_NODE1=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_NODE1=:ZZKV_NODE1 \
AND LOEVM <> 'X' \
AND AUFSD <> '93'

JP.GET.KNA1.BY_ZZKV_NODE1_ESTAB=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_NODE1=:ZZKV_NODE1 \
AND ZZKV_ESTAB=:ZZKV_ESTAB \
AND LOEVM <> 'X' \
AND AUFSD <> '93'

JP.GET.COMPANY.BY.IBMCMR=SELECT ZZKV_NODE1 \
FROM SAPR3.KNA1 \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND KTOKD='ZS01' \
AND LOEVM <> 'X' \
AND AUFSD <> '93'

JP.GET.KNA1.BY_CMR_TYPE=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND KTOKD=:KTOKD \
AND LOEVM <> 'X' \
AND AUFSD <> '93'

GEN.GET_COUNTRY_CD=(select COUNTRY_CD, 1 ORD \
from CMMA.REFT_COUNTRY_W \
where UPPER(COUNTRY_DESC) = :DESC \
union all \
select COUNTRY_CD, 2 ORD \
from CMMA.REFT_COUNTRY_W \
where UPPER(COUNTRY_DESC) like :DESC2 \
union all \
select COUNTRY_CD, 3 ORD \
from CMMA.REFT_COUNTRY_W \
where UPPER(COUNTRY_DESC) like :DESC3 \
union all \
select COUNTRY_CD, 4 ORD \
from CMMA.REFT_COUNTRY_W \
where UPPER(COUNTRY_DESC) like :DESC4 \
union all \
select COUNTRY_CD, 5 ORD \
from CMMA.REFT_COUNTRY_W \
where LOCATE(UPPER(COUNTRY_DESC), :DESC5) > 0 \
) order by ORD

KNA1.JP.ZP01_BILLTO=SELECT * FROM SAPR3.KNA1 WHERE MANDT =:MANDT AND KATR6 =:KATR6 AND ZZKV_CUSNO =:ZZKV_CUSNO \
AND KTOKD =:KTOKD \
AND ZZKV_SEQNO =:ZZKV_SEQNO \
AND (AUFSD <> '93' OR LOEVM <> 'X')

GEN.GET_STATE_CD=\
( select STATE_PROV_CD, 1 ORD \
from CMMA.REFT_STATE_PROV_W \
where UPPER(STATE_PROV_DESC) = :DESC \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY) \
union all \
select STATE_PROV_CD, 2 ORD \
from CMMA.REFT_STATE_PROV_W \
where UPPER(STATE_PROV_DESC) like :DESC2 \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY) \
union all \
select STATE_PROV_CD, 3 ORD \
from CMMA.REFT_STATE_PROV_W \
where UPPER(STATE_PROV_DESC) like :DESC3 \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY) \
union all \
select STATE_PROV_CD, 4 ORD \
from CMMA.REFT_STATE_PROV_W \
where UPPER(STATE_PROV_DESC) like :DESC4 \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY) \
union all \
select STATE_PROV_CD, 5 ORD \
from CMMA.REFT_STATE_PROV_W \
where LOCATE(UPPER(STATE_PROV_DESC), :DESC5) > 0 \
and REFT_COUNTRY_KEY = (select REFT_COUNTRY_KEY from CMMA.REFT_COUNTRY_W where COUNTRY_CD = :COUNTRY) \
) order by ORD

#LOV Updates
QUERY.LOV.GETLIST=select CD, TXT, DEFAULT_IND, row_number() over (order by DISP_ORDER,CD) DISP_ORDER \
from CREQCMR.LOV \
where FIELD_ID = :ID \
and CMR_ISSUING_CNTRY = :CNTRY order by DISP_ORDER, CD  

SYSTEMPARAMETERS.INIT=select * from CREQCMR.SYST_PARAMETERS

#Scenarios Maintenance
QUERY.SCENARIOS.ISSUING_CNTRY=select CNTRY_CD, NM from CREQCMR.SUPP_CNTRY where CNTRY_CD <> '897' order by NM 
QUERY.SCENARIOS.TYPES=select CUST_TYP_VAL, CUST_TYP_DESC from CREQCMR.CUST_TYPE where ISSUING_CNTRY = :CNTRY order by  CUST_TYP_DESC
QUERY.SCENARIOS.SUBTYPES=select CUST_SUB_TYP_VAL, CUST_SUB_TYP_DESC from CREQCMR.CUST_SUB_TYPE where ISSUING_CNTRY = :CNTRY and CUST_TYP_VAL = :TYPE order by  CUST_SUB_TYP_DESC
QUERY.SCENARIOS.ADDRESS_TYPES=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##AddressType' and CMR_ISSUING_CNTRY = :CNTRY
QUERY.SCENARIOS.ADDRESS_TYPES.GEN=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##AddressType' and CMR_ISSUING_CNTRY = '*'
QUERY.SCENARIOS.LOAD=select FIELD_ID, case when trim(ADDR_TYP) = '' then 'XXX' else ADDR_TYP end, VALUE, RETAIN_VAL_IND, REQ_IND, LOCKED_INDC \
from CREQCMR.CUST_SCENARIOS \
where LOC_CD = :CNTRY \
and CUST_TYP = :SCENARIO \
order by FIELD_ID, ADDR_TYP, SEQ_NO 
QUERY.SCENARIOS.CHECKTYPE=select CUST_TYP_VAL, CUST_TYP_DESC from CREQCMR.CUST_TYPE where ISSUING_CNTRY = :CNTRY and (CUST_TYP_VAL = :CODE or UPPER(CUST_TYP_DESC) = :DESC )
QUERY.SCENARIOS.CHECKSUBTYPE=select CUST_SUB_TYP_VAL, CUST_SUB_TYP_DESC from CREQCMR.CUST_SUB_TYPE where ISSUING_CNTRY = :CNTRY and (CUST_SUB_TYP_VAL = :CODE or UPPER(CUST_SUB_TYP_DESC) = :DESC )
QUERY.SCENARIOS.CHECKUSE=select 'Y','' from CREQCMR.DATA where CMR_ISSUING_CNTRY = :CNTRY and CUST_SUB_GRP = :CODE
SCENARIOS.PROPAGATE=select distinct st.CUST_SUB_TYP_VAL \
from CREQCMR.CUST_SUB_TYPE st \
left outer join CREQCMR.CUST_SCENARIOS cs \
  on st.CUST_SUB_TYP_VAL = cs.CUST_TYP \
  and st.ISSUING_CNTRY = cs.LOC_CD \
where st.ISSUING_CNTRY = :LOC_CD \
and st.CUST_SUB_TYP_VAL <> :TYPE  \
and not exists (select 1 \
                from CREQCMR.CUST_SCENARIOS cs1 \
                where cs1.LOC_CD = cs.LOC_CD \
                and cs1.CUST_TYP = cs.CUST_TYP \
                and cs1.FIELD_ID = :FIELD_ID \
                and cs1.ADDR_TYP = :ADDR_TYPE)

LANDED_COUNTRY_MAP.INIT=select COUNTRY_CD, COUNTRY_DESC from CMMA.REFT_COUNTRY_W
LANDED_COUNTRY_MAP.INIT_SYSLOC=select SYS_LOC_CD, SYS_LOC_DESC from CMMA.REFT_SYS_LOC_W
LANDED_COUNTRY_LOV_MAP.INIT=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##LandedCountryIsrael'
LANDED_COUNTRY_CEMEA_MAP.INIT=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##LandedCountryCEMEA'
#20180202--add customer location code--george
QUERY.GET.CUSLOC4L=SELECT LOCN_CD FROM CREQCMR.LOCN_CD_MAPPING WHERE CITY LIKE :CITY AND POST_CD= :POST_CD
QUERY.GET.CUSLOC4C=SELECT LOCN_CD FROM CREQCMR.LOCN_CD_MAPPING WHERE LANDED_CNTRY = :LANDED_CNTRY

ISRAEL.REVERT_MAILING.1=update CREQCMR.ADDR set ADDR_TYPE = 'CTYX' where ADDR_TYPE = 'ZS01' and REQ_ID = :REQ_ID
ISRAEL.REVERT_MAILING.2=update CREQCMR.ADDR set ADDR_TYPE = 'ZS01' where ADDR_TYPE = 'CTYA' and REQ_ID = :REQ_ID
ISRAEL.REVERT_MAILING.3=update CREQCMR.ADDR set ADDR_TYPE = 'CTYA' where ADDR_TYPE = 'CTYX' and REQ_ID = :REQ_ID
ISRAEL.REVERT_MAILING_RDC.1=update CREQCMR.ADDR_RDC set ADDR_TYPE = 'CTYX' where ADDR_TYPE = 'ZS01' and REQ_ID = :REQ_ID
ISRAEL.REVERT_MAILING_RDC.2=update CREQCMR.ADDR_RDC set ADDR_TYPE = 'ZS01' where ADDR_TYPE = 'CTYA' and REQ_ID = :REQ_ID
ISRAEL.REVERT_MAILING_RDC.3=update CREQCMR.ADDR_RDC set ADDR_TYPE = 'CTYA' where ADDR_TYPE = 'CTYX' and REQ_ID = :REQ_ID

#ZA,MT
QUERY.VAT.GET_ZS01_CNTRY=select LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQID and ADDR_TYPE = :TYPE order by ADDR_SEQ 

#LA getting customer type val for checking save status
QUERY.GET.CUSTTYPE_VALUE_FORCHECKING=SELECT CUST_TYPE, 'XXX' FROM CREQCMR.ADMIN WHERE REQ_ID=:REQ_ID

#iERP BATCH monitor for getting pending create reqeusts
BATCH.GET_DR_COUNTRIES=SELECT CNTRY_CD, NM, AUTO_PROC_ENABLED, PROCESSING_TYP \
FROM CREQCMR.SUPP_CNTRY \
WHERE PROCESSING_TYP = 'DR' \
AND AUTO_PROC_ENABLED = 'Y' \
FOR READ ONLY \
WITH UR 

BATCH.GET_DR_PROC_PENDING=SELECT A.*, D.* \
FROM CREQCMR.ADMIN A \
INNER JOIN CREQCMR.DATA D ON A.REQ_ID = D.REQ_ID \
WHERE D.CMR_ISSUING_CNTRY IN (<CMR_ISSUING_CNTRY>) \
AND A.REQ_STATUS IN ('PCP','CPR') \
AND A.PROCESSED_FLAG = 'N' \
AND A.DISABLE_AUTO_PROC = 'N' \
AND A.REQ_TYPE <> 'M' \
FOR READ ONLY \
WITH UR

BATCH.MULTI.GET_DR_PENDING_REQIDS=SELECT A.REQ_ID \
FROM CREQCMR.ADMIN A \
INNER JOIN CREQCMR.DATA D ON A.REQ_ID = D.REQ_ID \
WHERE D.CMR_ISSUING_CNTRY IN (SELECT CNTRY_CD FROM CREQCMR.SUPP_CNTRY WHERE PROCESSING_TYP = 'DR' AND AUTO_PROC_ENABLED = 'Y') \
AND A.REQ_STATUS IN ('PCP','CPR') AND A.PROCESSED_FLAG = 'N' \
AND A.DISABLE_AUTO_PROC = 'N' \
AND (A.REQ_TYPE <> 'M' AND A.REQ_TYPE <> 'N') \ 
FOR READ ONLY \
WITH UR

BATCH.MULTI.GET_DR_PROC_PENDING=SELECT A.*, D.* \
FROM CREQCMR.ADMIN A \
INNER JOIN CREQCMR.DATA D ON A.REQ_ID = D.REQ_ID \
WHERE A.REQ_ID IN (<PENDING_REQIDS>) \
AND A.REQ_STATUS IN ('PCP','CPR') \
AND A.PROCESSED_FLAG = 'N' \
AND A.DISABLE_AUTO_PROC = 'N' \
AND (A.REQ_TYPE <> 'M' AND A.REQ_TYPE <> 'N') \
FOR READ ONLY \
WITH UR

BATCH.GET_DR_NOTIF_LIST = SELECT N.* \
FROM CREQCMR.NOTIF_LIST N \
WHERE N.REQ_ID = :REQ_ID \
FOR READ ONLY \
WITH UR

QUERY.BR.GET.GEO_TAX_INFO = SELECT N.* \
FROM CREQCMR.GEO_TAX_INFO N \
WHERE N.REQ_ID = :REQ_ID \
FOR READ ONLY \
WITH UR

#LA(BR)
QUERY.GET.CUSTTYPE_VALUE_FORCHECKING=SELECT CUST_TYPE, 'XXX' FROM CREQCMR.ADMIN WHERE REQ_ID=:REQ_ID
BR.DELETE.FILTERED.FOR.LEASI=DELETE FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE NOT IN (:ADDR_FILT1, :ADDR_FILT2)
BR.DELETE.FILTERED.NOT.LEASI=DELETE FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE NOT IN (:ADDR_FILT1)
BR.DELETE.FILTERED.FOR.LEASI_RDC=DELETE FROM CREQCMR.ADDR_RDC WHERE REQ_ID=:REQ_ID AND ADDR_TYPE NOT IN (:ADDR_FILT1, :ADDR_FILT2)
BR.DELETE.FILTERED.NOT.LEASI_RDC=DELETE FROM CREQCMR.ADDR_RDC WHERE REQ_ID=:REQ_ID AND ADDR_TYPE NOT IN (:ADDR_FILT1)

QUERY.DATA.GET.SALES_BO_CD=select sbo.SALES_BO_CD, rt.REP_TEAM_MEMBER_NO \
from CREQCMR.SALES_BRANCH_OFF sbo, CREQCMR.REP_TEAM rt \
where sbo.REP_TEAM_CD = rt.REP_TEAM_CD \
and sbo.ISSUING_CNTRY = :ISSUING_CNTRY AND sbo.REP_TEAM_CD = :REP_TEAM_CD

QUERY.COUNTATTACHMENTRECORDS=select count(*), '' from CREQCMR.ATTACHMENT where REQ_ID=:REQ_ID

IERP.UPDADDRSEQ=update CREQCMR.ADDR set ADDR_SEQ=:ADDR_SEQ where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE AND SAP_NO=:SAP_NO

ADDR.UPDATE.LANDEDCNTRY=update CREQCMR.ADDR set LAND_CNTRY = :LAND_CNTRY where REQ_ID = :REQ_ID
QUERY.GET.ISRLIST.BYISU=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and UPDATE_BY_ID like :ISU

REQENTRY.GETCHECKLIST=select * from CREQCMR.PROLIF_CHECKLIST where REQ_ID = :REQ_ID

USERPREF.GET_COUNTRIES=select pref.REQUESTER_ID, pref.ISSUING_CNTRY, pref.CREATE_TS, cd.SYS_LOC_CD||' - '||cd.SYS_LOC_DESC CREATE_BY \
from CREQCMR.USER_PREF_COUNTRIES pref \
left outer join CMMA.REFT_SYS_LOC_W cd \
  on pref.ISSUING_CNTRY = cd.SYS_LOC_CD \
where pref.REQUESTER_ID = :USER \
order by ISSUING_CNTRY 

USERPREF.GET_CNTRY=select * from CREQCMR.USER_PREF_COUNTRIES where REQUESTER_ID = :USER and ISSUING_CNTRY = :CNTRY

QUERY.CHECK_DNB_EXEMPT= select 1,'' from CMMA.PARTNER_EXCEPTIONS where DNB_EXEMPT = 'Y' and SERVICE_ID = :SERVICE_ID
QUERY.CHECK_DPL_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'DPL' and REQ_ID = :ID
QUERY.CHECK_DNB_MATCH_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'COMP' and REQ_ID = :ID
QUERY.CHECK_ESA_MATCH_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'ESA' and REQ_ID = :ID
QUERY.CHECK_ERO_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'ERO' and REQ_ID = :ID
QUERY.CHECK_CONFIRMATION_ATTACHMENTS=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT in ('NAM','ADDR') and REQ_ID = :ID
QUERY.CHECK_VATD_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'VATD' and REQ_ID = :ID
QUERY.CHECK_FASTPASS_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'FPA' and REQ_ID = :ID
QUERY.CHECK_ECSYS_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'ECSYS' and REQ_ID = :ID
QUERY.CHECK_CN_API_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'CNDR' and REQ_ID = :ID
QUERY.CHECK_CN_S1_GBG_ID_LIST=select INSTR(PARAMETER_VALUE,:ID,1,1),'' from CREQCMR.SYST_PARAMETERS where parameter_cd='CN_S1_GBG_ID_LIST'
QUERY.CHECK_CN_INAC_BY_GBG_ID=select distinct(b.request_id),'' from SAPR3.BUYING_GROUP a,SAPR3.BUYING_GROUP_EXT b where a.mandt = b.mandt and a.mandt = :MANDT and \
a.buying_group_id = b.buying_group_id and a.land1='CN' and a.active_status='1' and a.global_buying_group_id= :ID
#QUERY.CHECK_SALESMANAGER_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'SRA' and REQ_ID = :ID
QUERY.CHECK_TERRITORY_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'MGR' and REQ_ID = :ID
QUERY.CHECK_NAME_CHANGE_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'LTR' and REQ_ID = :ID
QUERY.CHECK_DPL_CHECKLIST_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'DPLC' and REQ_ID = :ID
QUERY.CHECK_BUSP_MATCH_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'BUSP' and REQ_ID = :ID

QUERY.GET_REQUEST_APPROVAL=SELECT DISTINCT 1,'' FROM CREQCMR.APPROVAL_REQ WHERE STATUS = 'CAPR' AND REQ_ID = :REQ_ID
QUERY.GET_ADMIN_MAIN_CUST_NAMES=SELECT MAIN_CUST_NM1, MAIN_CUST_NM2 FROM CREQCMR.ADMIN WHERE REQ_ID = :REQ_ID
APPROVAL.GET_DPL_ATTACHMENTS=select * from CREQCMR.ATTACHMENT where REQ_ID = :REQ_ID and DOC_CONTENT = :DOC_TYP
APPROVAL.GET_ALL_ATTACHMENTS=select * from CREQCMR.ATTACHMENT where REQ_ID = :REQ_ID order by DOC_CONTENT
APPROVAL.GET_CHECKLIST=select * from CREQCMR.PROLIF_CHECKLIST where REQ_ID = :REQ_ID
APPROVAL.GET_SAME_REQUESTS=select * from CREQCMR.APPROVAL_REQ where REQ_ID = :REQ_ID and APPROVAL_ID <> :APPROVAL_ID and TYP_ID = :TYPE and GEO_CD = :GEO and STATUS in ('PAPR', 'PREM', 'REJ')

#PT,ES,CEMEA,SWISS
QUERY.GET.SRLIST.BYISU=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU
QUERY.GET.SRLIST.BYISUCTC=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU and CLIENT_TIER like :CLIENT_TIER
QUERY.GET.ENTLIST.BYISU=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##Enterprise' and TXT like :ISU
QUERY.GET.SBO.BYSR=select SALES_BO_CD, SALES_BO_DESC, UPDATE_BY_ID from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY AND REP_TEAM_CD = :REP_TEAM_CD
QUERY.GET.SBO.BYSR_ES=select SALES_BO_CD, SALES_BO_DESC, UPDATE_BY_ID from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY AND REP_TEAM_CD = :REP_TEAM_CD and nvl(CLIENT_TIER,'')=''
QUERY.GET.SBO.BYSR_ISUCTC=select SALES_BO_CD, SALES_BO_DESC, UPDATE_BY_ID from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY AND REP_TEAM_CD = :REP_TEAM_CD and CLIENT_TIER like :CLIENT_TIER

#IL
QUERY.GET.SRSBOTLIST.BYENTR=select REP_TEAM_CD,SALES_BO_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and SALES_BO_DESC like :SALES_BO_DESC
QUERY.ADDR.GET.OLDADDR.BY_REQID_ADDRTYP_IL=select CUST_NM1,CUST_NM2,LAND_CNTRY,ADDR_TXT,PO_BOX,CITY1,POST_CD,DEPT,ADDR_TXT_2 from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE
GET.KNA1_ZZKV_SEQNO_DISTINCT=select DISTINCT(cast(substring(zzkv_seqno,0,6) AS INT)) from sapr3.kna1 where mandt = :MANDT and katr6 = :KATR6 AND zzkv_cusno = :ZZKV_CUSNO and ZZKV_SEQNO != '' and TRANSLATE(ZZKV_SEQNO,'','1234567890') = '' with ur
GET.ADDRSEQ.BY_REQID=select DISTINCT(cast(substring(ADDR_SEQ,0,6) AS INT)) from CREQCMR.ADDR where REQ_ID = :REQ_ID
GET.ADDRSEQ.LATEST.BY_REQID_TYPE=SELECT ADDR_SEQ FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE_LOCAL AND LPAD(ADDR_SEQ, 5, '0') NOT IN (SELECT LPAD(PAIRED_ADDR_SEQ, 5, '0') FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE_TRANS)
GET.ADDR.BY_PAIRED_SEQ=SELECT * from CREQCMR.ADDR where REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND PAIRED_ADDR_SEQ = :PAIRED_ADDR_SEQ
QUERY.ADDR.GET.ZI01LAND.BY_REQID=select LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZI01'
GET.RDC_SEQ.SECONDARY.SOLDTO=SELECT cast(substring(zzkv_seqno,0,6) AS INT) FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND KATR6 = :KATR6 AND ZZKV_CUSNO = :ZZKV_CUSNO AND KTOKD = 'ZS01' AND AUFSD = '90' and ZZKV_SEQNO != '' and TRANSLATE(ZZKV_SEQNO,'','1234567890') = ''
IL.GET.REALCTY.RBKXA=SELECT RCYAA, REALCTY, RBKXA, RCUXA FROM CMRDB2D.CMRTCUST WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA
IL.GET.ISIC.KUKLA=SELECT * FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND KATR6 = :KATR6 AND ZZKV_CUSNO = :ZZKV_CUSNO AND AUFSD = '' AND LOEVM != 'X' AND KTOKD = 'ZS01'
QUERY.GET.IL.ISIC_KUKLA_OLD_BY_REQID=SELECT ISIC_CD, CUST_CLASS, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.CLIENT_TIER_EMBARGO_CD_OLD_BY_REQID=SELECT CLIENT_TIER, EMBARGO_CD, ISU_CD,ENTERPRISE,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.IL.CLIENT_TIER_EMBARGO_CD_OLD_BY_REQID=SELECT CLIENT_TIER, EMBARGO_CD, ISU_CD,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.CLIENT_TIER_ISU_SBO_CD_OLD_BY_REQID =SELECT CLIENT_TIER, ISU_CD, SALES_BO_CD,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.BENELUX.CLIENT_TIER_ISU_SBO_CD_OLD_BY_REQID =SELECT CLIENT_TIER, ISU_CD, COMMERCIAL_FINANCED,''  FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
IL.MASS.GET.LEGACY.ADDR.SEQ=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ
IL.MASS.GET.KNA1.ADDR.SEQ=SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO AND (ZZKV_SEQNO = :ZZKV_SEQNO OR ZZKV_SEQNO = :ZZKV_SEQNO_PAD)
QUERY.GET.BENELUX.CLIENT_TIER_ISU_SBO_CD_OLD_BY_REQID =SELECT CLIENT_TIER, ISU_CD, COMMERCIAL_FINANCED,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.CLIENT_TIER_ISU_SBO_CD_OLD_BY_REQID =SELECT CLIENT_TIER, ISU_CD, SALES_BO_CD,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.MASS.GET.NAMECHANGE.BY_REQID=SELECT cust_nm1, cust_nm2, '' \
FROM   (SELECT DISTINCT cust_nm1, \
                        cust_nm2, '' \
        FROM   creqcmr.mass_updt_addr \
        WHERE  par_req_id = :REQ_ID \
        	   AND ADDR_TYPE = 'CTYA' \
               AND land_cntry IN ( 'AF', 'AM', 'AZ', 'BH', \
                                   'BY', 'KH', 'CN', 'CU', \
                                   'EG', 'GE', 'IR', 'IQ', \
                                   'IL', 'JO', 'KZ', 'KP', \
                                   'KW', 'KG', 'LA', 'LB', \
                                   'LY', 'MO', 'MD', 'MN', \
                                   'MM', 'OM', 'PK', 'QA', \
                                   'RU', 'SA', 'SD', 'SY', \
                                   'TW', 'TJ', 'TM', 'UA', \
                                   'AE', 'UZ', 'VE', 'VN', 'YE' ) \
              AND ITERATION_ID = (SELECT MAX(ITERATION_ID) FROM creqcmr.mass_updt_addr WHERE  par_req_id = :REQ_ID))              
QUERY.GET_DPL_CHECKLIST_ATTACHMENT=select DOC_LINK,CMT from CREQCMR.ATTACHMENT where DOC_CONTENT = 'DPLC' and REQ_ID = :REQ_ID  
LEGACYD.GETADDR.BY_ADDRNO=select * from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRNO = :ADDR_SEQ
GET.ADDRNO.BY_MAILING=select ADDRNO from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRMAIL = 'Y' fetch first 1 rows only
GET.ADDRNO.BY_BILLING=select ADDRNO from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRBILL = 'Y' fetch first 1 rows only
GET.ADDRNO.BY_SHIPPING=select ADDRNO from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRSHIP = 'Y' fetch first 1 rows only

QUERY.GET.ENTP.SPAIN=SELECT REP_TEAM_CD,SALES_BO_CD FROM CREQCMR.SALES_BRANCH_OFF WHERE ISSUING_CNTRY = '838' AND CLIENT_TIER = :CTC AND UPDATE_BY_ID LIKE :POST_CD AND SALES_BO_DESC = :BELONGS
QUERY.DATA.GET.DISTRICT_CD=select cd, cmt \
from CREQCMR.LOV \
where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY AND CD = :CD

#CMR2101
QUERY.GET.SBOLIST.BYISU=select DISTINCT (SALES_BO_CD), '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU
QUERY.GET.SBOLIST.BYISUCTC=select DISTINCT (SALES_BO_CD), '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU and UPDATE_BY_ID like :UPDATE_BY_ID

#PT,ES,CEMEA,SWISS,ITALY_LEGACY
QUERY.GET.CTCLIST.BYISU=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##ClientTier' and TXT like :ISU
QUERY.GET.CMRINFO.IMPORTED=select ISU_CD,CLIENT_TIER,REP_TEAM_MEMBER_NO,SALES_BO_CD,COLLECTION_CD,INAC_CD,SPECIAL_TAX_CD,affiliate from creqcmr.data_rdc where REQ_ID=:REQ_ID
QUERY.GET.SBO.BYREQ=select SALES_BO_CD, '' from creqcmr.data data where req_id= :REQ_ID
QUERY.GET.ISULIST.UPDATE=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##ISU624Mass'
QUERY.GET.CTCLIST.UPDATE=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##ClientTier624Mass'
QUERY.GET.CMR.DATARDC=SELECT CMR_NO, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID

#SWISS
QUERY.ADDR.GET.CUST_LANG_CD.BY_REQID=select CUST_LANG_CD,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.ADDR.GET.POSTCD.SWISS=select POST_CD,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID
QUERY.ADDR.GET.HW_INSTL_MSTR_FLG=select COUNT(*),'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE in ('ZI01','ZS01','ZS02') and HW_INSTL_MSTR_FLG = 'Y'
QUERY.ADDR.GET.HW_INSTL_MSTR_FLG_DETAILS=select ADDR_SEQ,IERP_SITE_PRTY_ID from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE in ('ZI01','ZS01','ZS02') and HW_INSTL_MSTR_FLG = 'Y'

#QUERY.GET.VATSUFFIX.BYCUSTLANGCD=select SALES_BO_DESC, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and REP_TEAM_CD like :REP_TEAM_CD

#AP
QUERY.GET.ARCODELIST.BYISBU=select TXT,CD from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##ISBU' and CD like :ISBU
QUERY.GET.ARCODE.BYPROV_CD=select REGION_NAME,'' from CREQCMR.PROV_REGION_OFFICE where ISSUING_CNTRY = :CNTRY AND PROV_CD = :PROV_CD
QUERY.GET.CUSTNM_PROV_BYADRTYP=select cust_nm1,state_prov from CREQCMR.ADDR where  REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.GET.ADDR_RECORDS_AP=SELECT COUNT(*),'' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID  AND CUST_NM1 = :CUST_NM1 AND ADDR_TXT = :ADDR_TXT AND CITY1 = :CITY1 AND STATE_PROV = :STATE_PROV AND LAND_CNTRY = :LAND_CNTRY
QUERY.GETADDR_TYPES=select cd,txt from CREQCMR.LOV where CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY and field_id = '##AddressType'
QUERY.GET.SME_ADDR_RECORDS_AP= select count(*), '' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID  AND CUST_NM1 = :CUST_NM1 AND nvl(CUST_NM2,'') = :CUST_NM2 AND ADDR_TXT = :ADDR_TXT  AND nvl(ADDR_TXT_2,'') = :ADDR_TXT_2  AND nvl(CITY1,'') = :CITY1 AND nvl(STATE_PROV,'') = :STATE_PROV  AND LAND_CNTRY = :LAND_CNTRY AND nvl(DEPT,'') = :DEPT

#NORDX,BELUX,NL
QUERY.GET.SRLIST.SWEDEN=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU
QUERY.GET.DSCLIST.BYSR=select SALES_BO_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU and REP_TEAM_CD like :REP_TEAM_CD
QUERY.GET.CCLIST.BYISIC=select UPDATE_BY_ID, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and REP_TEAM_CD like :REP_TEAM_CD
QUERY.GET.BOTEAMLIST.BYISU=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU
QUERY.GET.BOTEAMLIST.BYISUCTC=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU and CLIENT_TIER like :CLIENT_TIER
QUERY.GET.INACLIST.BYBO=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##INACCode' and TXT like :ENGINEERINGBO
QUERY.GET.ECONOMICLIST.BYINAC=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##EconomicCd2' and TXT like INACCODE
QUERY.GET.INACLIST.BYST=select CD, '' from creqcmr.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and FIELD_ID = '##INACCode' and TXT like :SEARCHTERM
QUERY.GET.ECONOMICLIST.BYST=select SALES_BO_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and REP_TEAM_CD like :REP_TEAM_CD
QUERY.GET.ECONOMICLIST.BYST.NL=select REP_TEAM_CD, '' from creqcmr.REP_TEAM where ISSUING_CNTRY = :ISSUING_CNTRY and REP_TEAM_MEMBER_NO like :REP_TEAM_MEMBER_NO
QUERY.GET.CCLIST.BYCNTRY=select DISTINCT UPDATE_BY_ID, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY
QUERY.GET.ICLIST.BYISIC=select ISU_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and REP_TEAM_CD like :REP_TEAM_CD

QUERY.GET.ZS01POSTCD.BY_REQID=select POST_CD,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.GET.LOCNO.BYPOSTCD=select CD,'' from CREQCMR.LOV where CMR_ISSUING_CNTRY = :ISSUING_CNTRY and CMT like :POSTCD and FIELD_ID = '##LocationNumber'
ADDRESS.GET.BYTYPE=select * from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE
QUERY.GETTXT.BYPOSTCODE.AUSTRIA=select  TXT, '' from CREQCMR.LOV WHERE Field_id = '##PostalCode' and cmr_issuing_cntry = '618' and CD=:CD
QUERY.ADDR.GET.POSTCD.AUSTRIA=select POST_CD,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.GET.SME_ADDR_RECORDS_AT= select count(*), '' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID  AND CUST_NM1 = :CUST_NM1 AND nvl(CUST_NM2,'') = :CUST_NM2 AND ADDR_TXT = :ADDR_TXT  AND nvl(CITY1,'') = :CITY1 AND nvl(STATE_PROV,'') = :STATE_PROV  AND LAND_CNTRY = :LAND_CNTRY AND nvl(POST_CD,'') = :POST_CD
QUERY.GET.STATEDESC=SELECT STATE_PROV_CD,STATE_PROV_DESC FROM CMMA.REFT_STATE_PROV_W WHERE STATE_PROV_CD = :STATE_PROV_CD
CHECK.TREATMENT.FUNC.RECORD=select * from CREQCMR.GEO_ADL_CONT_DTL where REQ_ID= :REQ_ID and CONTACT_TYPE = :CONTACT_TYPE

QUERY.GET_SUCURSALBO_DESC= SELECT COLL_BO_DESC, 'XXX' FROM CREQCMR.COLLECTOR_BO WHERE COLL_BO_ID=:BO_ID AND ISSUING_CNTRY=:CNTRY

QUERY.GET_CNTRYUSED=select CNTRY_USE, '' from CREQCMR.DATA where REQ_ID= :REQ_ID

QUERY.GET_STREET_ADDRSEQ=select ADDR_TXT, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = :ADDR_TYPE

QUERY.GET_TIN_ADDRSEQ=select DEPT, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = :ADDR_TYPE

QUERY.GET_ICE_ADDRSEQ=select DEPT, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = :ADDR_TYPE

QUERY.GET.DATA_CUST_PREF_LANG_FOR_NORDX=select cust_pref_lang, '' from creqcmr.data where req_id = :REQ_ID

# Copy Configuration Queries
QUERY.GET_GEOS=select distinct GEO_CD, '' from CREQCMR.CNTRY_GEO_DEF
QUERY.COPY_CNTRIES=select a.CNTRY_CD, a.NM||' ('||(case when d.GEO_CD is null then 'none' else d.GEO_CD end)||')' \
from CREQCMR.SUPP_CNTRY a \
left outer join CREQCMR.CNTRY_GEO_DEF d \
on a.CNTRY_CD = d.CMR_ISSUING_CNTRY \
order by a.NM 
COPY.GET_GEO_COUNTRIES=select CMR_ISSUING_CNTRY from CREQCMR.CNTRY_GEO_DEF where GEO_CD = :GEO and CMR_ISSUING_CNTRY <> :CNTRY
COPY.CLEAR.FIELD_INFO=delete from CREQCMR.FIELD_INFO where CMR_ISSUING_CNTRY = ':TRG_CNTRY'
COPY.CLEAR.FIELD_LBL=delete from CREQCMR.FIELD_LBL where CMR_ISSUING_CNTRY = ':TRG_CNTRY'
COPY.CLEAR.LOV=delete from CREQCMR.LOV where CMR_ISSUING_CNTRY = ':TRG_CNTRY'
COPY.CLEAR.SCENARIOS.TYPE=delete from CREQCMR.CUST_TYPE where ISSUING_CNTRY = ':TRG_CNTRY'
COPY.CLEAR.SCENARIOS.SUBTYPE=delete from CREQCMR.CUST_SUB_TYPE where ISSUING_CNTRY = ':TRG_CNTRY'
COPY.CLEAR.SCENARIOS=delete from CREQCMR.CUST_SCENARIOS where LOC_CD = ':TRG_CNTRY'
COPY.CREATE.FIELD_INFO=\
insert into CREQCMR.FIELD_INFO (FIELD_ID, CMR_ISSUING_CNTRY, SEQ_NO, TYPE, CHOICE, MIN_LENGTH, MAX_LENGTH, VALIDATION, REQUIRED, \
                                DEPENDS_ON, DEPENDS_SETTING, COND_REQ_IND, READ_ONLY_REQ_IND, READ_ONLY_INFO_IND, READ_ONLY_REV_IND, \
                                READ_ONLY_PROC_IND, CMT, VAL_DEPENDS_ON) \
(select FIELD_ID, ':TRG_CNTRY', SEQ_NO, TYPE, CHOICE, MIN_LENGTH, MAX_LENGTH, VALIDATION, REQUIRED, DEPENDS_ON, DEPENDS_SETTING, \
        COND_REQ_IND, READ_ONLY_REQ_IND, READ_ONLY_INFO_IND, READ_ONLY_REV_IND, READ_ONLY_PROC_IND, CMT, VAL_DEPENDS_ON \
 from CREQCMR.FIELD_INFO where CMR_ISSUING_CNTRY = ':CNTRY' \
                        order by FIELD_ID, SEQ_NO)
COPY.CREATE.FIELD_LBL=\
insert into CREQCMR.FIELD_LBL (FIELD_ID, CMR_ISSUING_CNTRY, LBL, CMT) \
(select FIELD_ID, ':TRG_CNTRY', LBL, 'Copied from :CNTRY' \
 from CREQCMR.FIELD_LBL \
 where CMR_ISSUING_CNTRY =  ':CNTRY' \
 order by FIELD_ID \
)
COPY.CREATE.LOV=\
insert into CREQCMR.LOV (FIELD_ID, CMR_ISSUING_CNTRY, DEFAULT_IND, DISP_ORDER, CD, TXT, DISP_TYPE, CMT) \
(select FIELD_ID, ':TRG_CNTRY', DEFAULT_IND, DISP_ORDER, CD, TXT, DISP_TYPE, 'Copied from :CNTRY' \
 from CREQCMR.LOV \
 where CMR_ISSUING_CNTRY = ':CNTRY' \
 order by FIELD_ID)
COPY.CREATE.SCENARIOS.TYPE=\
insert into CREQCMR.CUST_TYPE (ISSUING_CNTRY, CUST_TYP_VAL, CUST_TYP_DESC, GEO_CD, CREATE_TS, CREATE_BY_ID, UPDATE_TS, UPDATE_BY_ID) \
(select ':TRG_CNTRY', CUST_TYP_VAL, CUST_TYP_DESC, GEO_CD, current timestamp, 'SystemAdmin', current timestamp, 'SystemAdmin' \
 from CREQCMR.CUST_TYPE \
 where ISSUING_CNTRY = ':CNTRY' \
 order by CUST_TYP_VAL)
COPY.CREATE.SCENARIOS.SUBTYPE=\
insert into CREQCMR.CUST_SUB_TYPE (ISSUING_CNTRY, CUST_TYP_VAL, CUST_SUB_TYP_VAL, CUST_SUB_TYP_DESC, GEO_CD, CREATE_TS, CREATE_BY_ID, UPDATE_TS, UPDATE_BY_ID) \
(select ':TRG_CNTRY', CUST_TYP_VAL, CUST_SUB_TYP_VAL, CUST_SUB_TYP_DESC, GEO_CD, current timestamp, 'SystemAdmin', current timestamp, 'SystemAdmin' \
 from CREQCMR.CUST_SUB_TYPE \
 where ISSUING_CNTRY = ':CNTRY' \
 order by CUST_TYP_VAL, CUST_SUB_TYP_VAL)
COPY.CREATE.SCENARIOS=\
insert into CREQCMR.CUST_SCENARIOS (LOC_CD, CUST_TYP, CUST_SUB_TYP, FIELD_ID, FIELD_NAME, ADDR_TYP, SEQ_NO, VALUE, RETAIN_VAL_IND, REQ_IND, PAR_TAB_ID, LOCKED_INDC) \
(select ':TRG_CNTRY', CUST_TYP, CUST_SUB_TYP, FIELD_ID, FIELD_NAME, ADDR_TYP, SEQ_NO, VALUE, RETAIN_VAL_IND, REQ_IND, PAR_TAB_ID, LOCKED_INDC \
 from CREQCMR.CUST_SCENARIOS \
 where LOC_CD = ':CNTRY' \
 order by CUST_SUB_TYP, FIELD_ID)
 
MQSTATUS.SEARCH=\
select a.QUERY_REQ_ID, a.REQ_ID, a.REQ_TYPE, \
       a.CMR_NO, a.CMR_ISSUING_CNTRY, a.REQ_STATUS, \
       a.ERROR_CD, a.EXECP_MESSAGE, a.CREATE_TS, \
       a.CREATE_BY, a.LAST_UPDT_TS, s.NM LAST_UPDT_BY, \
       a.TARGET_SYS, a.CORRELATION_ID, a.MQ_IND, \
       a.DOCM_REFN_NO, a.REFN_SOURCE_CD, \
       ad.REQ_STATUS ADMIN_STATUS, status.STATUS_DESC ADMIN_STATUS_DESC, \
       (select 'Y' \
        from SYSIBM.SYSDUMMY1 \
        where exists (select 1  \
                      from CREQCMR.MQ_INTF_REQ_DATA d \
                      where a.QUERY_REQ_ID = d.QUERY_REQ_ID)) HAS_DATA \
from CREQCMR.MQ_INTF_REQ_QUEUE a \
left outer join CREQCMR.SUPP_CNTRY s \
  on a.CMR_ISSUING_CNTRY = s.CNTRY_CD \
left outer join CREQCMR.ADMIN ad  \
  on a.REQ_ID = ad.REQ_ID \
left outer join CREQCMR.STATUS_DESC status  \
  on ad.REQ_STATUS = status.REQ_STATUS \
where 1 = 1 

GERMANY_DEPT.VIEW= select CD from CREQCMR.LOV where FIELD_ID = '##GermanyInternalDepartment' and CMR_ISSUING_CNTRY = '724' and CD like :DEPT
QUERY.COUNT_GERMANY_DEPT= select COUNT(*),'' from CREQCMR.LOV where FIELD_ID = '##GermanyInternalDepartment' and CMR_ISSUING_CNTRY = '724' and CD like :DEPT 
DIV_DEPT.CHECK_DIV=select * from CREQCMR.LOV where FIELD_ID = '##InternalDivision' and CMR_ISSUING_CNTRY = '*' and CD = :DIV 
DIV_DEPT.CHECK_DIV_MAX=select CAST(max(DISP_ORDER) AS BIGINT) from CREQCMR.LOV where FIELD_ID = '##InternalDivision' and CMR_ISSUING_CNTRY = '*' 
DIV_DEPT.CHECK_DEPT=select * from CREQCMR.LOV where FIELD_ID = '##InternalDivDept' and CMR_ISSUING_CNTRY = '*' and CD = :DEPT 
DIV_DEPT.CHECK_DEPT_MAX=select CAST(max(DISP_ORDER) AS BIGINT) from CREQCMR.LOV where FIELD_ID = '##InternalDivDept' and CMR_ISSUING_CNTRY = '*' 
QUERY.DIV_DEPT.CHECK=select TXT,'' from CREQCMR.LOV where FIELD_ID = '##InternalDivDept' and CMR_ISSUING_CNTRY = '*' and CD = :DEPT
QUERY.GET.SME_ADDR_RECORDS_DE= SELECT COUNT(*), '' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID  AND CUST_NM1 = :CUST_NM1 AND nvl(CUST_NM2,'') = :CUST_NM2 AND ADDR_TXT = :ADDR_TXT  AND nvl(ADDR_TXT_2,'') = :ADDR_TXT_2  AND nvl(CITY1,'') = :CITY1 AND nvl(STATE_PROV,'') = :STATE_PROV  AND LAND_CNTRY = :LAND_CNTRY AND nvl(DEPT,'') = :DEPT AND ADDR_TYPE in ('ZS01', 'ZI01')
UTIL.POST_CD=select LNPLZ, PRPLZ from SAPR3.T005 where MANDT = :MANDT and LAND1 = :LAND1
QUERY.CHECK_INAC=select ZZKV_INAC, '' from SAPR3.ZKVINACN where MANDT = :MANDT and ZZKV_INAC = :INAC

#New DPL Check
DPL.NEW.GETADDRESSES=\
select ad.* \
from CREQCMR.ADDR ad \
where ad.REQ_ID = :REQ_ID \
and (DPL_CHK_RESULT is null or (DPL_CHK_RESULT is not null and DPL_CHK_RESULT <> 'N'))

GETSTATEPROVCROSMAPPING=select CD from CREQCMR.LOV where TXT = :RDCSTATEPROV and FIELD_ID = '##RdcCrosMapping' and CMR_ISSUING_CNTRY= :CNTRY

DELETE_CONTACT_INFO=delete from CREQCMR.GEO_ADL_CONT_DTL where REQ_ID = :REQ_ID

UPDATE_DATA_RDC=update creqcmr.data_rdc set REPRESENTATIVE_TEAM_MEMBER_NO= :SALES_REP ,COLLECTOR_NO= :COLNAMENO , ABBREV_NM= :ABBREVNM , COLL_BO_ID= :COLLBO where req_id= :REQ_ID

CHECK.CONTACT.INFO.RECORD=select * from CREQCMR.GEO_ADL_CONT_DTL where REQ_ID= :REQ_ID

UPDATE.ADDRESS.SSA.STATEPROV.LOCCD=UPDATE CREQCMR.ADDR SET STATE_PROV = ':STATE_PROV', LOCN_CD = ':LOCN_CD' WHERE REQ_ID = ':REQ_ID' AND ADDR_TYPE = ':ADDR_TYPE'
GET.ADDRESS.SSA.BY.REQID.ADDRTYP=select * from CREQCMR.ADDR WHERE REQ_ID = :REQ_ID and addr_type = :ADDR_TYP

CONNECT.GET_MAIN_DETAILS=select a.*, ad.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
left outer join CREQCMR.ADDR ad \
  on a.REQ_ID = ad.REQ_ID \
where a.REQ_ID = d.REQ_ID \
and a.REQ_ID = :REQ_ID \
order by case when d.CMR_ISSUING_CNTRY = '755' and ad.ADDR_TYPE = 'CTYA' then -1 \
              when ad.ADDR_TYPE = 'ZS01' then 0  \
              when ad.ADDR_TYPE = 'ZP01' then 1 \
              when ad.ADDR_TYPE = 'ZI01' then 2 \
              when ad.ADDR_TYPE = 'ZD01' then 3 \
         end, ad.ADDR_TYPE, ad.ADDR_SEQ   

GET.INTL_ADDR_BY_ID =SELECT A.* \
FROM CREQCMR.INTL_ADDR A \
WHERE REQ_ID = :REQ_ID \
AND ADDR_TYPE = :ADDR_TYPE \
AND ADDR_SEQ = :ADDR_SEQ \
FOR READ ONLY \
WITH UR

GET.INTL_ADDR_RDC_BY_ID =SELECT A.* \
FROM CREQCMR.INTL_ADDR_RDC A \
WHERE REQ_ID = :REQ_ID \
AND ADDR_TYPE = :ADDR_TYPE \
AND ADDR_SEQ = :ADDR_SEQ \
FOR READ ONLY \
WITH UR

GET.INTL_ADDR_LIST_BY_ID =SELECT A.* \
FROM CREQCMR.INTL_ADDR A \
WHERE REQ_ID = :REQ_ID \
FOR READ ONLY \
WITH UR

GET.KNA1_ZZKV_SEQNO = SELECT KUNNR, ZZKV_SEQNO \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KUNNR = :KUNNR \
FOR READ ONLY \
WITH UR

GET.DATA_CUST_PREF_LANG=select cust_pref_lang \
from creqcmr.data \
where req_id = :REQ_ID \
for read only \
with ur

GET.GEO_CITIES_BYID=SELECT ISSUING_CNTRY, CITY_ID, CITY_DESC \
FROM CREQCMR.GEO_CITIES GC \
WHERE CITY_DESC = :CITY_DESC \
AND ISSUING_CNTRY = :ISSUING_CNTRY \
AND CITY_ID like(:STATE_CD) \
FOR READ ONLY \
WITH UR

GET.GEO_CITIES_BY_CITYID=SELECT ISSUING_CNTRY, CITY_ID, CITY_DESC \
FROM CREQCMR.GEO_CITIES GC \
WHERE CITY_ID = :CITY_ID \
AND ISSUING_CNTRY = :ISSUING_CNTRY \
FOR READ ONLY \
WITH UR

GET.GEO_CITIES_BY_CITYDESC=SELECT ISSUING_CNTRY, CITY_ID, CITY_DESC \
FROM CREQCMR.GEO_CITIES GC \
WHERE CITY_DESC = :CITY_DESC \
AND ISSUING_CNTRY = :ISSUING_CNTRY \
FOR READ ONLY \
WITH UR

GET.KNA1_ADRNR=SELECT KUNNR, ADRNR \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND ZZKV_CUSNO = :CMR \
AND KTOKD = :ADDR_TYPE \
AND ZZKV_SEQNO = :ADDR_SEQ \
AND (AUFSD <> '93' OR LOEVM <> 'X') \
FOR READ ONLY \
WITH UR

GET.KNA1_BY_MANDT_SEQNO_KTOKD_CMR=SELECT * \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND ZZKV_CUSNO = :CMR \
AND KTOKD = :ADDR_TYPE \
AND ZZKV_SEQNO = :ADDR_SEQ \
AND (AUFSD <> '93' OR LOEVM <> 'X') \
FOR READ ONLY \
WITH UR

GET.CN_SADR_BY_ID=SELECT S.* \
FROM SAPR3.SADR S \
WHERE ADRNR = :ADRNR \
AND MANDT = :MANDT \
AND NATIO = '6' \
FOR READ ONLY \
WITH UR

GET.CN_ENCITY_BY_UPPER_DESC = SELECT TXT, CD \
FROM CREQCMR.LOV \
WHERE TXT LIKE :DESC \
AND FIELD_ID = :FIELD_ID \
AND CMR_ISSUING_CNTRY = :CNTRY \
FOR READ ONLY \
WITH UR

QUERY.GET.OLD_FISCAL_DATA=select VAT,TAX_CD1,COMPANY,'' from CREQCMR.DATA_RDC where REQ_ID = :REQ_ID
QUERY.GET.RDC_FISCAL_DATA=select * from SAPR3.KNA1 where STCD1 = :FISCAL_CD and KATR6 = '758' and MANDT = :MANDT and ZZKV_NODE1 = :ZZKV_NODE1 and and KTOKD = :KTOKD AND nvl(KATR10,'')<>'GTS'
QUERY.GET.RDC_FISCAL_DATA_NEW=select ZZKV_CUSNO,STCEG,STCD1,ZZKV_NODE2 from SAPR3.KNA1 where STCEG = :VAT and STCD1 = :FISCAL_CD  and KATR6 = '758' and MANDT = :MANDT and ZZKV_CUSNO = ZZKV_NODE1 \
and AUFSD<>'93' and LOEVM<>'X' and KTOKD='ZORG' and ZZKV_CUSNO<>:ZZKV_CUSNO AND nvl(KATR10,'')<>'GTS'
QUERY.GET.RDC_FISCAL_INFO_IT=select LAND1,MCOD3,STRAS,PSTLZ,STCD1,STCEG,ZZKV_NODE2,ZZKV_NODE1,KONZS,BRSCH,KATR3,ZZKV_INAC,NAME1,NAME2 from SAPR3.KNA1 \
where ZZKV_CUSNO=:ZZKV_CUSNO and KATR6 = '758' and MANDT = :MANDT \
and AUFSD <> '93' and LOEVM <>'X' and KTOKD='ZORG'
QUERY.GET.FISCAL_INFO_IT_DB2=SELECT CEXT.IDCLI,CUST.SBO, CUST.REMXA FROM CMRDB2D.CMRTCUST CUST, CMRDB2D.CMRTCEXT CEXT WHERE CUST.RCYAA=:RCYAA AND CUST.RCUXA=:RCUXA AND CUST.RCYAA=CEXT.RCYAA AND CUST.RCUXA=CEXT.RCUXA AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO

ADDRESS.FR.CHECKDUMMY=select 1 \
from CREQCMR.ADMIN a \
where a.REQ_TYPE = 'C' \
and not exists (select 1  \
                from CREQCMR.ADDR ad \
                where ad.REQ_ID = a.REQ_ID \
                and ad.ADDR_TYPE = 'ZSIR') \
and a.REQ_ID = :REQ_ID

GET.GEO_CONTACT_INFO_BY_ID =SELECT A.* \
FROM CREQCMR.GEO_ADL_CONT_DTL A \
WHERE REQ_ID = :REQ_ID \
AND CONTACT_TYPE = :ADDR_TYPE \
AND CONTACT_NUM = :ADDR_SEQ \
FOR READ ONLY \
WITH UR

#QUERY.GET.MAPPED_ISU_BY_SORTL=SELECT SEARCH_TERM, ISU FROM CREQCMR.SORTL_ISU WHERE SEARCH_TERM = :SORTL AND ISSUING_CNTRY = :KATR6
QUERY.GET.MAPPED_ISU_BY_SORTL=SELECT AP_CUST_CLUSTER_ID, ISU_CD FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE AP_CUST_CLUSTER_ID = :SORTL AND ISSUING_CNTRY = :KATR6
QUERY.GET.MAPPED_CTC_BY_ISU=SELECT CLIENT_TIER_CD, ISU_CD FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE AP_CUST_CLUSTER_ID = :SORTL AND ISSUING_CNTRY = :KATR6

QUERY.GET.ADDR_BY_ID_AND_DETAILS=SELECT COUNT(*),'' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND CUST_NM1 = :CUST_NM1 AND ADDR_TXT = :ADDR_TXT AND CITY1 = :CITY1 AND LAND_CNTRY = :LAND_CNTRY

BATCH.GET_ADDR_FOR_SAP_NO_ZS01 = select * from CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'

SYSPAR.UPDATE_REFRESH=update CREQCMR.SYST_PARAMETERS \
set PARAMETER_VALUE = :NEW_VALUE \
where PARAMETER_CD = 'LAST_REFRESH'

SYSPAR.CHECK_REFRESH=select PARAMETER_VALUE from CREQCMR.SYST_PARAMETERS where PARAMETER_CD = 'LAST_REFRESH'

SYSTEM.COLLECTORNAMENO1=SELECT * FROM CREQCMR.COLLECTOR_NAME_NO ORDER BY COLLECTOR_NO 
SYSTEM.COLLECTORNAMENO2=SELECT * FROM CREQCMR.COLLECTOR_NAME_NO WHERE ISSUING_CNTRY = :CNTRY ORDER BY COLLECTOR_NO 
SYSTEM.COLLECTORNAMENO3=SELECT * FROM CREQCMR.COLLECTOR_NAME_NO WHERE ISSUING_CNTRY = :CNTRY AND COLLECTOR_NO = :COLL_NO 
QUERY.GETSPVALFORPOSTCDIT=select CD,'' from creqcmr.lov where field_id='##StateProv' and cmr_issuing_cntry='758' and txt like :TXT

IMPORT.CHECK_ADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID and SAP_NO = :SAP_NO

MQXML.GETXMLS=select * from CREQCMR.MQ_INTF_REQ_DATA where QUERY_REQ_ID = :ID order by FILE_NAME, CREATE_TS

#Machines to Install
MACHINES.SEARCH_MACHINES=select * from CREQCMR.MACHINES_TO_INSTALL where \
REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND ADDR_SEQ = :ADDR_SEQ
MACHINES.CHECK_MACHINES_EXIST=select * from CREQCMR.MACHINES_TO_INSTALL where \
REQ_ID = :REQ_ID AND MACHINE_SERIAL_NO = :MACHINE_SERIAL_NO AND MACHINE_TYP = :MACHINE_TYP
MACHINES.SEARCH_SINGLE_MACHINE=select * from CREQCMR.MACHINES_TO_INSTALL where \
REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND ADDR_SEQ = :ADDR_SEQ AND MACHINE_SERIAL_NO = :MACHINE_SERIAL_NO AND MACHINE_TYP = :MACHINE_TYP
QUERY.GET_CURRENT_INDC=select MACHINE_TYP,MACHINE_SERIAL_NO,CURRENT_INDC from CREQCMR.MACHINES_TO_INSTALL where REQ_ID = :REQ_ID
MACHINES.CHECK_NEWLY_ADDED=select 1,'' from CREQCMR.MACHINES_TO_INSTALL \
where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ and current_indc <> 'Y'

ADDRESS.REMOVE_CURRENT=delete from CREQCMR.ADDR where REQ_ID = :ID and ADDR_TYPE = :TYPE
ADDRESS.REMOVE_CURRENT.RDC=delete from CREQCMR.ADDR_RDC where REQ_ID = :ID and ADDR_TYPE = :TYPE
ADDRESS.REMOVE_EXCEPT=delete from CREQCMR.ADDR where REQ_ID = :ID and ADDR_TYPE <> :TYPE
ADDRESS.REMOVE_PARENT=update CREQCMR.ADDR set PAR_CMR_NO = null where REQ_ID = :ID
QUERY.GETDATARDCVALUESIT=select COLLECTION_CD,SPECIAL_TAX_CD,IDENT_CLIENT,TAX_CD1,VAT,ENTERPRISE,COMPANY from CREQCMR.DATA_RDC where REQ_ID= :REQ_ID
QUERY.GETZP01STATEPROV=select STATE_PROV,'' from CREQCMR.ADDR where REQ_ID= :REQ_ID and addr_type='ZP01'
QUERY.GETZI01STATEPROV=select STATE_PROV,'' from CREQCMR.ADDR where REQ_ID= :REQ_ID and addr_type='ZI01'
QUERY.SEARCH_MACHINES=select * from CREQCMR.MACHINES_TO_INSTALL where \
REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND ADDR_SEQ = :ADDR_SEQ

#LA Prod Defect
REQUESTENTRY.TAXNUMBER.SEARCH_DATA_BY_REQID=select TAX_CD1 from CREQCMR.DATA where REQ_ID = :REQ_ID
REQUESTENTRY.TAXNUMBER.SEARCH_ADMIN_BY_REQID=select REQ_TYPE from CREQCMR.ADMIN where REQ_ID = :REQ_ID

#CMR-2085
QUERY.GETCMRNUMFORPROCESSOR=SELECT 'Y','' from SAPR3.KNA1 where MANDT = :MANDT and ZZKV_CUSNO = :CMR_NO and KATR6= :CNTRY


ATTACHMENT.GET_BY_TYPE=select * from CREQCMR.ATTACHMENT where REQ_ID = :REQ_ID and DOC_CONTENT = :TYPE

GET_CONTINFO_ON_IMPORT_FOR_CN= SELECT TELF1,TITEL_AP,NAME1 \
FROM SAPR3.KNVK \
WHERE MANDT = :MANDT \
AND KUNNR in (SELECT KUNNR \
FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :CMR \
and katr6 = :KATR6 \
AND KTOKD = :KTOKD \
AND ZZKV_SEQNO = :ZZKV_SEQNO) ORDER BY PARNR ASC FETCH FIRST 1 ROWS ONLY \
FOR READ ONLY \
WITH UR

MQ.SOF.CHECK_COMPLETE=select 1 from CREQCMR.REQ_CMT_LOG where REQ_ID = :REQ_ID and upper(CMT) like '%SOF PROCESSING COMPLETED%' 


QUERY.GET_ZP02_COUNT = select distinct ADDR_SEQ,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE

QUERY.ZP02_SEARCH_MACHINES=select count(*),'' from CREQCMR.MACHINES_TO_INSTALL where \
REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND ADDR_SEQ = :ADDR_SEQ

QUERY.ZP02_GET_MACHINES=select MACHINE_SERIAL_NO,MACHINE_TYP,'' from CREQCMR.MACHINES_TO_INSTALL where \
REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND ADDR_SEQ = :ADDR_SEQ

QUERY.VALIDATOR.IMPORTED_IT=select IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZI01' 

QUERY.VALIDATOR.IMPORTED_IN=select IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01'

QUERY.IMPORTED_ADDR_ZS01=select IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01' 

QUERY.IMPORTED_ADDR_ZP01=select IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZP01'

QUERY.CHECK_BILLING_IMPORTED_IT=select CMR_NO, '' from CREQCMR.DATA_RDC WHERE REQ_ID=:REQ_ID AND \
CMR_NO=(select PAR_CMR_NO FROM CREQCMR.ADDR \
WHERE ADDR_TYPE=:ADDR_TYPE AND IMPORT_IND ='Y' AND REQ_ID=:REQ_ID)

ADDR.GET_ENGGBO_IT=select TXT \
from \
(select TXT ,DISP_ORDER,1 as PRIORITY \
from CREQCMR.LOV \
where FIELD_ID='##EngineeringBo' \
and CMR_ISSUING_CNTRY = '758' \
and CD = (select SUBSTRING(POST_CD,1,2) \
             from CREQCMR.ADDR \
             where REQ_ID = :REQ_ID \
             and ADDR_TYPE  = 'ZS01' \
             fetch first 1 rows only with UR) \
union \
select TXT , DISP_ORDER,2 as PRIORITY \
from CREQCMR.LOV \
where FIELD_ID='##EngineeringBo' \
and CMR_ISSUING_CNTRY = '758' \
and CD = (select SUBSTRING(POST_CD,1,3) \
             from CREQCMR.ADDR \
             where REQ_ID = :REQ_ID \
             and ADDR_TYPE  = 'ZS01' \
             fetch first 1 rows only with UR) \
union \
(select TXT , DISP_ORDER,3 as PRIORITY \
from CREQCMR.LOV \
where FIELD_ID='##EngineeringBo' \
and CMR_ISSUING_CNTRY = '758' \
and CD like (select SUBSTRING(POST_CD,1,2) \
             from CREQCMR.ADDR \
             where REQ_ID = :REQ_ID \
             and ADDR_TYPE  = 'ZS01' \
             fetch first 1 rows only with UR)||'%' \
order by DISP_ORDER \
) \
) \
order by PRIORITY,DISP_ORDER 



DELETE.REACTIVATE.LIST=\
select a.REQ_ID, m.CMR_NO, k.NAME1||(case when k.NAME2 != '' then ' '||k.NAME2 else '' end), k.AUFSD, k.LOEVM \
from CREQCMR.MASS_UPDT m, CREQCMR.DATA d, CREQCMR.ADMIN a \
left outer join SAPR3.KNA1 k \
  on m.CMR_NO = k.ZZKV_CUSNO \
  and d.CMR_ISSUING_CNTRY = k.KATR6 \
  and k.MANDT = :MANDT \
  and k.KTOKD = 'ZS01' \
  AND nvl(k.KATR10,'')<>'GTS' \
where d.REQ_ID = m.PAR_REQ_ID \
and a.REQ_ID = d.REQ_ID \
and a.REQ_ID = m.PAR_REQ_ID  \
and m.ITERATION_ID = 1 \
and a.REQ_TYPE in ('R', 'D') \
and a.REQ_ID = :REQ_ID

IL.DELETE.REACTIVATE.LIST=\
select a.REQ_ID, m.CMR_NO, k.NAME1||(case when k.NAME2 != '' then ' '||k.NAME2 else '' end), k.AUFSD, k.LOEVM \
from CREQCMR.MASS_UPDT m, CREQCMR.DATA d, CREQCMR.ADMIN a, CMRDB2D.CMRTADDR la \
left outer join SAPR3.KNA1 k \
  on m.CMR_NO = k.ZZKV_CUSNO \
  and d.CMR_ISSUING_CNTRY = k.KATR6 \
  and k.MANDT = :MANDT \
  and k.KTOKD = 'ZS01' \
  AND nvl(k.KATR10,'')<>'GTS' \
  and LPAD(k.ZZKV_SEQNO, 5, '0') = LPAD(la.ADDRNO, 5, '0') \
where d.REQ_ID = m.PAR_REQ_ID \
and a.REQ_ID = d.REQ_ID \
and a.REQ_ID = m.PAR_REQ_ID  \
and m.ITERATION_ID = 1 \
and a.REQ_TYPE in ('R', 'D') \
and la.ADDRMAIL = 'Y' \
and la.RCYAA = d.CMR_ISSUING_CNTRY \
and la.RCUXA = m.CMR_NO \
and a.REQ_ID = :REQ_ID

EXTERNAL.GET_FIELDS=select info.* \
from CREQCMR.FIELD_INFO info \
where ( \
  info.CMR_ISSUING_CNTRY = :CNTRY \
  or \
  ( \
    info.CMR_ISSUING_CNTRY = '*' \
    and not exists (select 1 \
                    from CREQCMR.FIELD_INFO info2 \
                    where info.FIELD_ID = info2.FIELD_ID \
                    and info2.CMR_ISSUING_CNTRY = :CNTRY) \
  ) \
) 

LEGACYD.GETADDR_BILLING=select * from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRBILL = 'Y' order by ADDRNO

EXTERNAL.GET_FIELDS.ORDER=order by case when info.CMR_ISSUING_CNTRY = '*' then 0 else 1 end, \
         info.FIELD_ID, info.SEQ_NO 

DELETE.INTL_ADDR_BY_REQ_ID=delete from CREQCMR.INTL_ADDR where REQ_ID = :REQ_ID

COUNTINTLADDRRECORDS= SELECT COUNT(*), 'XXX' FROM CREQCMR.INTL_ADDR WHERE REQ_ID=:REQ_ID

QUERY.INTL_ADDR_BY_REQ_ID=SELECT * FROM CREQCMR.INTL_ADDR WHERE REQ_ID=:REQ_ID

QUERY.INTL_ADDR_DETAILS=SELECT INTL_CUST_NM1,INTL_CUST_NM2,INTL_CUST_NM3,INTL_CUST_NM4,ADDR_TXT_CITY1,CITY2 FROM CREQCMR.INTL_ADDR WHERE REQ_ID=:REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ

QUERY.INTL_ADDR_RDC_BY_REQ_ID=SELECT * FROM CREQCMR.INTL_ADDR_RDC WHERE REQ_ID=:REQ_ID

QUERY.ADDR_BY_REQ_ID=SELECT * FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID

#Italy
ITALY.GETINSTALLING=select * from CREQCMR.ADDR where ADDR_TYPE = 'ZS01' and REQ_ID = :REQ_ID
ITALY.UPDATE_ADDR_PAR_CMR=UPDATE CREQCMR.ADDR SET PAR_CMR_NO=:PAR_CMR_NO WHERE REQ_ID=:REQ_ID and ADDR_SEQ=:ADDR_SEQ and ADDR_TYPE=:ADDR_TYPE
QUERY.IT.CHECK.DUPLICATE_FISCAL_ADDRESS=select zzkv_cusno, '' from sapr3.kna1 where ktokd='ZORG' and mandt=:MANDT and katr6='758' and stcd1=:FISCAL_CODE and katr10='' AND nvl(KATR10,'')<>'GTS' order by SAP_TS asc
QUERY.IT.CHECK.DUPLICATE_VAT=select zzkv_cusno, '' from SAPR3.KNA1 where KTOKD='ZORG' and MANDT=:MANDT and KATR6='758' and STCEG=:VAT and KATR10='' order by SAP_TS asc
ITALY.GET.COMPANYADDR=select * from cmrdb2d.cmrtaddr where RCYAA = :CNTRY and rcuxa = :CMR and ADDRUSEC = 'Y'
QUERY.GET.CCVALUE.BYSBO=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and SALES_BO_CD like :SALES_BO_CD
QUERY.GET.SR.SBO.BYISUCTC=SELECT * FROM creqcmr.SALES_BRANCH_OFF WHERE ISSUING_CNTRY  = :CNTRY AND SALES_BO_CD = :SBO AND SALES_BO_DESC like :SALES_REP AND ISU_CD like :ISU

#LA Reactivation
QUERY.LA_REACTIVATE_COUNTRY= select SUPP_REQ_TYPE, '' from CREQCMR.SUPP_CNTRY WHERE CNTRY_CD = :CNTRY_CD
LAREACTIVATECOUNTRY.GET= select CNTRY_CD||'-'||SUPP_REQ_TYPE from CREQCMR.SUPP_CNTRY
UKI.GET_TOPMOST_INSTALLING = select * from CREQCMR.ADDR where ADDR_TYPE = 'ZI01' and REQ_ID = :REQ_ID ORDER BY ADDR_SEQ
QUERY.UKI.GET_TOP_INSTALL_1 = select * from CREQCMR.ADDR where ADDR_TYPE = 'ZI01' and REQ_ID = :REQ_ID ORDER BY ADDR_SEQ ASC FETCH FIRST ROW ONLY

#Legacy Direct
LEGACYD.GET_PENDING=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D','M','X') \
and a.REQ_STATUS IN ('PCP','CPR') \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='LD'

LEGACYD.GET_MASS_PROCESS_PENDING=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='LD'

LEGACYD.GET.ADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID 

LEGACYD.GET.ADDR_EMPTY_SAPNO=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID  and SAP_NO is null and CHANGED_INDC = 'Y'

LEGACYD.GET.MASS_UPDT_ADDR=select * from CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND CMR_NO = :CMR

LEGACYD.GET.MASS_UPDT=select * from CREQCMR.MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID
GET.RDC_BILLING_SEQ=SELECT ZZKV_SEQNO, '' from SAPR3.KNA1 where ZZKV_CUSNO= :CMR_NO AND KATR6 = :CNTRY AND MANDT = :MANDT AND KTOKD= :KTOKD

LEGACYD.GETCUST=select * from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO
LEGACYD.GETCEXT=select * from CMRDB2D.CMRTCEXT where RCYAA = :COUNTRY and RCUXA = :CMR_NO
LEGACYD.GETADDR=select * from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO order by ADDRNO
LEGACYD.GETADDR_BILLING=select * from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRBILL = 'Y' order by ADDRNO
LEGACYD.GETAUSE=select * from CMRDB2D.CMRTAUSE where RCYAA = :COUNTRY and RCUXA = :CMR_NO order by ADDRNO, ADDRUSE
LEGACYD.GETALNK=select * from CMRDB2D.CMRTALNK where RCYAA2 = :COUNTRY and RCUXA2 = :CMR_NO
LEGACYD.GETADDR_FORMASS=select * from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRNO IN (:ADDRNO)
LEGACYD.GETADDR_FISCAL=select * from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO and ADDRUSEF = 'Y'
LEGACYD.GETMAPPEDSUBIND_FORMASS=select trim(INDCL_CD) CD \
from CMMA.REFT_INDCL_W \
where length(INDCL_CD) > 0 \
and REFT_INDCL_KEY = (select REFT_INDCL_KEY \
from CMMA.REFT_UNSIC_W \
where REFT_UNSIC_CD = :ISIC and GEO_CD = 'WW') \
order by INDCL_CD asc 

LEGACYD.SEQNOTABLE=with SEQ_TABLE(id) as ( \
    select 1 from SYSIBM.SYSDUMMY1     \
    union all \
    select id + 1 from SEQ_TABLE where id < 2000 \
) \
select id from SEQ_TABLE \
where id not in (select INTEGER(ADDRNO) \
                 from CMRDB2D.CMRTADDR \
                 where RCYAA = :COUNTRY \
                 and RCUXA = :CMR_NO) \
order by id 


LEGACYD.SEQNOTABLE.IT=with SEQ_TABLE(id) as ( \
    select 1 from SYSIBM.SYSDUMMY1 \
    union all \
    select id + 1 from SEQ_TABLE where id < 2000 \
) \
select id from SEQ_TABLE \
where id not in (select INTEGER(ADDRNO) \
                 from CMRDB2D.CMRTADDR \
                 where RCYAA = '758' \
                 and RCUXA = '173368' \
                 and TRANSLATE(ADDRNO, '', '1234567890') = '') \
order by id

LEGACYD.MAXSEQ=select INTEGER(max(ADDRNO)) from CMRDB2D.CMRTADDR where RCYAA = :COUNTRY and RCUXA = :CMR_NO
LEGACYD.CLEAR_USES=delete from CMRDB2D.CMRTAUSE where RCYAA = :COUNTRY and RCUXA = :CMR_NO

LEGACYD.GET_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D','M') \
and a.REQ_STATUS IN ('PCO','CPR')  \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='LD'

LEGACYD.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M') \
and a.REQ_STATUS= 'PCO' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='LD'

LEGACYD.VALIDATE=select 1 from CMRDB2D.CMRTCUST \
where RCYAA = :COUNTRY \
and SBO NOT IN :COMPANY_CD_SBO \
and upper(trim(NCUXB)) = upper(trim(:NAME)) \
and upper(trim(LCUXB)) = upper(trim(:LOC))

LEGACYD.UPDATE_ADDR_SEQ=update CREQCMR.ADDR set ADDR_SEQ = :NEW_SEQ, SAP_NO = :SAP_NO, IMPORT_IND = 'N'  where REQ_ID = :REQ_ID and ADDR_TYPE = :TYPE and ADDR_SEQ = :OLD_SEQ 
LEGACYD.UPDATE_ADDR_SEQ_RDC=update CREQCMR.ADDR_RDC set ADDR_SEQ = :NEW_SEQ, SAP_NO = :SAP_NO where REQ_ID = :REQ_ID and ADDR_TYPE = :TYPE and ADDR_SEQ = :OLD_SEQ
SWISS.UPDATE_ADDR_SEQ=UPDATE CREQCMR.ADDR SET ADDR_SEQ = :NEW_SEQ WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = :TYPE AND ADDR_SEQ = :OLD_SEQ

LEGACYD.GET_SUPP_CNTRY_BY_ID=SELECT 1 \
FROM CREQCMR.SUPP_CNTRY \
WHERE CNTRY_CD = :CNTRY \
AND PROCESSING_TYP = 'LD'

SWISS.GET_SUPP_CNTRY_BY_ID=SELECT 1 \
FROM CREQCMR.SUPP_CNTRY \
WHERE CNTRY_CD = :CNTRY \
AND PROCESSING_TYP = 'MD'

AT.GET_SUPP_CNTRY_BY_ID=SELECT 1 \
FROM CREQCMR.SUPP_CNTRY \
WHERE CNTRY_CD = :CNTRY \
AND PROCESSING_TYP = 'MA'

DR.GET_SUPP_CNTRY_BY_ID=SELECT 1 \
FROM CREQCMR.SUPP_CNTRY \
WHERE CNTRY_CD = :CNTRY \
AND PROCESSING_TYP = 'DR'\
AND SUPP_REQ_TYPE NOT LIKE('%M0%')
FR.GET_SUPP_CNTRY_BY_ID=SELECT 1 \
FROM CREQCMR.SUPP_CNTRY \
WHERE CNTRY_CD = :CNTRY \
AND PROCESSING_TYP = 'FR'

QUERY.FR.MASS_ADDR.DPL_CHECK=SELECT DPL_CHK_RESULT, '' FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID and ITERATION_ID = :ITER_ID \
AND ((CUST_NM1 <> '' OR CUST_NM1 <> NULL) OR (CUST_NM2 <> '' OR CUST_NM2 <> NULL))

GET.KNVP.PARVW=SELECT PARVW,MANDT,KUNNR FROM SAPR3.KNVP \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT \
WITH UR


MACHINES.COUNT_IMP_MACHINES=select * from CREQCMR.MACHINES_TO_INSTALL \
where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ and current_indc = 'Y'

MACHINES.COUNT_NEW_MACHINES=select * from CREQCMR.MACHINES_TO_INSTALL \
where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE and ADDR_SEQ = :ADDR_SEQ and current_indc <> 'Y'


APPROVAL.CHECK_APPROVER=select 1 from CREQCMR.APPROVAL_REQ where lower(INTRANET_ID) = :ID
APPROVAL.MYAPPROVALS=\
select a.REQ_ID, ap.APPROVAL_ID, a.MAIN_CUST_NM1 || case when MAIN_CUST_NM2 is not null then ' '||MAIN_CUST_NM2 else '' end CUST_NM,  \
       a.REQUESTER_NM, a.REQUESTER_ID, a.REQ_TYPE, status.STATUS_DESC REQ_STATUS, d.CMR_ISSUING_CNTRY CNTRY_CD, cntry.NM CNTRY_DESC, \
       case when reason2.TXT is not null then reason2.TXT else reason.TXT end  REQ_REASON,  \
       case when lob2.TXT is not null then lob2.TXT else lob.TXT end LOB, s.DPL_CHK_RESULT, \
       nvl(def.APPROVAL_MAIL_CONTENT, typ.title) APPROVAL_TYPE, ap.DISPLAY_NAME APPROVER_NM, ap.INTRANET_ID APPROVER_ID, ap.STATUS APPROVAL_STATUS \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.STATUS_DESC status, CREQCMR.SUPP_CNTRY cntry, \
     CREQCMR.APPROVAL_REQ ap, CREQCMR.APPROVAL_TYP typ \
left outer join CREQCMR.SCORECARD s \
  on a.REQ_ID = s.REQ_ID \
left outer join CREQCMR.DEFAULT_APPROVALS def \
     on ap.DEFAULT_APPROVAL_ID = def.DEFAULT_APPROVAL_ID \
     and ap.DEFAULT_APPROVAL_ID > 0 \
left outer join CREQCMR.LOV reason  \
  on a.REQ_REASON = reason.CD \
  and reason.FIELD_ID = '##RequestReason' \
  and reason.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV reason2 \
  on a.REQ_REASON = reason2.CD \
  and reason2.FIELD_ID = '##RequestReason' \
  and reason2.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY \
left outer join CREQCMR.LOV lob \
  on a.REQUESTING_LOB = lob.CD \
  and lob.FIELD_ID = '##RequestingLOB' \
  and lob.CMR_ISSUING_CNTRY = '*' \
left outer join CREQCMR.LOV lob2 \
  on a.REQUESTING_LOB = lob2.CD \
  and lob2.FIELD_ID = '##RequestingLOB' \
  and lob2.CMR_ISSUING_CNTRY = d.CMR_ISSUING_CNTRY \
where a.REQ_ID = d.REQ_ID \
and a.REQ_ID = ap.REQ_ID \
and ap.TYP_ID = typ.TYP_ID \
and ap.GEO_CD = typ.GEO_CD \
and a.REQ_STATUS = status.REQ_STATUS \
and d.CMR_ISSUING_CNTRY = cntry.CNTRY_CD \
and lower(ap.INTRANET_ID) = :APPROVER_ID \
and  a.REQ_STATUS != 'CLO' \
{pending} \
order by case when ap.STATUS = 'PAPR' then 0 \
              when ap.STATUS = 'APR' then 1 \
              when ap.STATUS = 'CAPR' then 2 \
              when ap.STATUS = 'REJ' then 3 \
              when ap.STATUS = 'PMAIL' then 4 \
              when ap.STATUS = 'DRA' then 5 \
              else 6 \
          end, ap.LAST_UPDT_TS, a.REQ_ID, ap.APPROVAL_ID \
          
NORDX.GET_IMPORTED_VAT=select VAT,'' from CREQCMR.DATA_RDC where REQ_ID= :REQ_ID
GET.MASS.REACTDEL=select k.NAME1||(case when k.NAME2 != '' then ' '||k.NAME2 else '' end), k.AUFSD, k.LOEVM \
from SAPR3.KNA1 k  \
where ZZKV_CUSNO = :CMR_NO and KATR6= (Select CMR_ISSUING_CNTRY FROM CREQCMR.DATA where REQ_ID = :REQ_ID) and KTOKD='ZS01'


GET.DELETE_REACTIVATE=select u.PAR_REQ_ID, u.SEQ_NO, u.ITERATION_ID, u.ERROR_TXT, u.ROW_STATUS_CD, u.CMR_NO, u.INACTIVATION_TYP,k.NAME1||(case when k.NAME2 != '' then ' '||k.NAME2 else '' end) NAME, k.AUFSD ORDER_BLOCK, k.LOEVM DELETED \
  from CREQCMR.MASS_UPDT u,CREQCMR.DATA d, CREQCMR.ADMIN a  left outer join SAPR3.KNA1 k \
  on u.CMR_NO = k.ZZKV_CUSNO \
    and d.CMR_ISSUING_CNTRY = k.KATR6 \
   and k.MANDT = :MANDT \
    and k.KTOKD = 'ZS01' \
    and nvl(k.KATR10,'')<>'GTS' \
  where d.REQ_ID = u.PAR_REQ_ID \
  and a.REQ_ID = d.REQ_ID \
  and a.REQ_ID = u.PAR_REQ_ID  \
  and a.REQ_TYPE in ('R', 'D') \
  and a.REQ_ID = :PAR_REQ_ID 


GET.LOV_CD.BY_DESC_CNTRY_FIELDID = SELECT CD, TXT \
FROM CREQCMR.LOV \
WHERE CMR_ISSUING_CNTRY = :CNTRY \
AND TXT = :DESC \
AND FIELD_ID = :FIELD

GET.KUNNR_EXT.BY_KUNNR_MANDT = SELECT BUILDING, DEPARTMENT, FLOOR, OFFICE, PRIVACY_IND \
FROM SAPR3.KUNNR_EXT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT

GET.KUNNR_EXT.BY_KUNNR_MANDT_SWISS = SELECT BUILDING, FLOOR, DEPARTMENT \
FROM SAPR3.KUNNR_EXT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT  WITH UR

GET.KUNNR_EXT.BY_KUNNR_MANDT_AUSTRIA = SELECT BUILDING, DEPARTMENT \
FROM SAPR3.KUNNR_EXT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT  WITH UR

GET.KUNNR_EXT.HW_INSTL_MSTR_FLG = SELECT HW_INSTL_MSTR_FLG, MANDT, KUNNR \
FROM SAPR3.KUNNR_EXT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT  WITH UR

CHECK_ADDR_IF_UPDATED = select distinct CHANGED_INDC from CREQCMR.ADDR \
where CHANGED_INDC= ANY ( select CHANGED_INDC from CREQCMR.ADDR where REQ_ID = :REQ_ID and CHANGED_INDC='Y' and addr_type in('ZS01','ZP01','ZI01'))

#AP Double Create Queries
QUERY.CHECK_CMR_RDC=select count(*), '' from SAPR3.KNA1 where KATR6=:KATR6 and MANDT=:MANDT and ZZKV_CUSNO=:ZZKV_CUSNO
GET.CHECK_REPROCESS=select 1 from CREQCMR.MQ_INTF_REQ_QUEUE where REQ_ID = :REQ_ID and CMR_ISSUING_CNTRY = :COUNTRY and QUERY_REQ_ID <> :CURRENT_ID

GET_LEGACY_LANG_CD=select TXT from CREQCMR.LOV where CD = :CD  and CMR_ISSUING_CNTRY = :CNTRY and FIELD_ID='##CustLangLegacyMap'

ADDRESS.GETADDRSEQ.ES=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ!='%A%'

REACTIVATE_KNA1_COUNT=SELECT KATR10, '' from SAPR3.KNA1 where ZZKV_CUSNO= :CMR_NO and KATR6= :CNTRY and AUFSD='93' and LOEVM='X' and MANDT = :MANDT WITH UR

REACTIVATE_LEGACY_COUNT=SELECT COUNT(*), 'XXX' from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO WITH UR

DATA_ISSUING_CNTRY=SELECT CMR_ISSUING_CNTRY, '' from CREQCMR.DATA where REQ_ID= :REQ_ID WITH UR

ADDRESS.GETADDRSEQ.ES.CREATE=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE

ADDRESS.GETADDRSEQ.ES.MAX=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID

GET.RDC_SEQ=select ZZKV_SEQNO from SAPR3.KNA1 where ZZKV_CUSNO= :CMR_NO and KATR6 = :CNTRY and MANDT = :MANDT and ZZKV_SEQNO!='' and TRANSLATE(ZZKV_SEQNO,'','1234567890') = ''

SWISS.GET_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D') \
and a.REQ_STATUS IN ('PCP','CPR')  \
and a.PROCESSED_FLAG in ('N','Wx') \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='MD'

AT.GET_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D') \
and a.REQ_STATUS IN ('PCP','CPR')  \
and a.PROCESSED_FLAG in ('N','Wx') \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='MA'

FR.GET_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D') \
and a.REQ_STATUS IN ('PCP','CPR')  \
and a.PROCESSED_FLAG in ('N','Wx') \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='FR'

TCR.GET_PENDING.RDC=SELECT * FROM USINTERIM.US_TCR_UPDT_QUEUE WHERE PROC_STATUS IN ('P','E') AND KATR10 = '' \
order by TCR_INPUT_FILE_NM, SEQ_NO

TCR.GET_RECORDS.RDC=SELECT * FROM SAPR3.KNA1 kna1, USINTERIM.US_TAX_DATA tax \
where kna1.MANDT = tax.MANDT \
and kna1.KUNNR = tax.KUNNR \
and kna1.MANDT = :MANDT \
and kna1.KATR6 = '897' \
and kna1.ZZKV_CUSNO = :CMR_NO \
and kna1.LOEVM <> 'X' \
and kna1.AUFSD not in ('93', 'CL', '75') \
and kna1.KATR10 <> 'GTS'

TCR.CLEAN_REDUNDANT=\
update USINTERIM.US_TCR_UPDT_QUEUE q \
set q.PROC_STATUS = 'O' \
where q.PROC_status in ('P','E') \
and q.KATR10 = '' \
and exists (select 1  \
            from USINTERIM.US_TCR_UPDT_QUEUE q1  \
            where q.CMR_NO = q1.CMR_NO \
            and nvl(q.TAX_CLASS_1,'') = nvl(q1.TAX_CLASS_1,'') \
            and nvl(q.TAX_CLASS_2,'') = nvl(q1.TAX_CLASS_2,'') \
            and nvl(q.TAX_CLASS_3,'') = nvl(q1.TAX_CLASS_3,'') \
            and nvl(q.TAX_CUST_TYP_1,'') = nvl(q1.TAX_CUST_TYP_1,'') \
            and nvl(q.TAX_CUST_TYP_2,'') = nvl(q1.TAX_CUST_TYP_2,'') \
            and nvl(q.TAX_CUST_TYP_3,'') = nvl(q1.TAX_CUST_TYP_3,'') \
            and nvl(q.TAX_EXEMPT_STATUS_1,'1') = nvl(q1.TAX_EXEMPT_STATUS_1,'1') \
            and nvl(q.TAX_EXEMPT_STATUS_2,'1') = nvl(q1.TAX_EXEMPT_STATUS_2,'1') \
            and nvl(q.TAX_EXEMPT_STATUS_3,'1') = nvl(q1.TAX_EXEMPT_STATUS_3,'1') \
            and nvl(q.KATR10,'') = nvl(q1.KATR10,'') \
      and q.TCR_INPUT_FILE_NM <> q1.TCR_INPUT_FILE_NM \
      and q1.CREATE_DT > q.CREATE_DT) 


US.GET_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D','E') \
and a.REQ_STATUS IN ('PCP','CPR')  \
and a.PROCESSED_FLAG in ('N','Wx') \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='US'

AT.GET.ZS01.DATLT=select datlt, '' from sapr3.kna1 where mandt= :MANDT and katr6=:COUNTRY and zzkv_cusno =:CMR_NO \
and ktokd='ZS01' and LOEVM <> 'X' AND AUFSD not in ('90','93')

SWISS.GET.ADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID 

AT.GET.ADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID 
QUERY.AT.GET.ADDR.ZS01=select CUST_NM1,CUST_NM2 AS CUSTNM from CREQCMR.ADDR where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'
AT.GET.ZS01.DATLT=select datlt, '' from sapr3.kna1 where mandt= :MANDT and katr6=:COUNTRY and zzkv_cusno =:CMR_NO \
and ktokd='ZS01' and LOEVM <> 'X' AND AUFSD not in ('90','93')

QUERY.GET.DATA_RDC.EMBARGO_BY_REQID_SWISS=SELECT ORD_BLK, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID

QUERY.GET.SWISS.PRIMARY_SOLD_TO_ORD_BLK = SELECT DISTINCT(AUFSD),'' from SAPR3.KNA1 WHERE \
ZZKV_CUSNO=:ZZKV_CUSNO AND \
KATR6 = '848' AND \
MANDT=:MANDT AND \
KTOKD = 'ZS01' AND \
LOEVM <> 'X' AND \
(AUFSD='' or AUFSD ='88')

QUERY.SWISS.GET.SORTL_BY_ISUCTCIMS = SELECT SALES_BO_CD, '' FROM CREQCMR.SALES_BRANCH_OFF \
WHERE ISU_CD LIKE :ISU_CD AND \
ISSUING_CNTRY='848' AND \
CLIENT_TIER LIKE :CLIENT_TIER AND \
UPDATE_BY_ID LIKE :IMS AND \
SALES_BO_DESC=:POST_CD_RANGE

QUERY.DE.GET.SORTL_BY_ISUCTCIMS = SELECT SALES_BO_CD, '' FROM CREQCMR.SALES_BRANCH_OFF WHERE ISU_CD = :ISU_CD AND CLIENT_TIER = :CLIENT_TIER AND ISSUING_CNTRY='724' AND UPDATE_BY_ID LIKE :IMS

SWISS.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='MD'

AT.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='MA'

FR.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='FR'

US.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='US'

BATCH.NPS=select * \
from CREQCMR.ADMIN \
where REQ_STATUS = 'COM' \
and nvl(WAIT_REV_IND,'') <> 'Y' \
order by LAST_UPDT_TS 

BATCH.NPS.NOTIF=select * from CREQCMR.NOTIF_LIST where REQ_ID = :REQ_ID
CN.TREC.NOTIF.ADMIN=SELECT a.* FROM creqcmr.admin a JOIN creqcmr.DATA d ON a.REQ_ID=d.req_id WHERE d.CMR_ISSUING_CNTRY='641' AND a.REQ_REASON='TREC' AND a.REQ_STATUS='CPR' AND a.iteration_id=0

BATCH.NPS.REQTYPES=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##SearchRequestType'
GET.SAPR3_ADDR.KUNNR=select ZZKV_SEQNO,ZZKV_CUSNO,KTOKD from SAPR3.KNA1 where KATR6 = :KATR6 and MANDT = :MANDT  and  KUNNR = :KUNNR

COUNT.ADDR_ON_REQUEST=select count(*) from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE

QUERY.GETZS02ADDRRECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZS02' and ADDR_SEQ <> :ADDR_SEQ

QUERY.GETZP01ADDRRECORDS=select count(*), '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZP01' and ADDR_SEQ <> :ADDR_SEQ

GET.ENG_BO.ADMIN_BO = SELECT TXT, CMT FROM CREQCMR.LOV WHERE FIELD_ID = '##PostalCode' AND CMR_ISSUING_CNTRY = :CNTRY AND CD = :POSTCD FOR READ ONLY WITH UR
GET.CMRTCUST.IS_EMPTY_CTXXA = SELECT 1 FROM CMRDB2D.CMRTCUST where RCYAA = :CNTRY and RCUXA = :CMR_NO  and CTXXA = ''
QUERY.CHECK_IBM_CMR_RD = select KATR10,'' from SAPR3.KNA1 where KATR6=:KATR6 and ZZKV_CUSNO=:ZZKV_CUSNO and MANDT=:MANDT
QUERY.CHECK_VALID_CMRS_U = select count(*),'' from SAPR3.KNA1 where KATR6= '848' and MANDT=:MANDT and ZZKV_CUSNO=:ZZKV_CUSNO and KTOKD = 'ZS01' and AUFSD = ''
QUERY.CHECK_VALID_CMRS_R = select count(*),'' from SAPR3.KNA1 where KATR6=:KATR6 and MANDT=:MANDT and ZZKV_CUSNO=:ZZKV_CUSNO and KTOKD = 'ZS01' and AUFSD IN ('','88','75')
QUERY.CHECK_VALID_CMRS_D = select count(*),'' from SAPR3.KNA1 where KATR6=:KATR6 and MANDT=:MANDT and ZZKV_CUSNO=:ZZKV_CUSNO and KTOKD = 'ZS01' and  AUFSD NOT IN ('93','75','CL')
QUERY.CHECK_VALID_R_D = select count(*),'' from SAPR3.KNA1 where KATR6=:KATR6 and MANDT=:MANDT and ZZKV_CUSNO=:ZZKV_CUSNO and  BEGRU=:BEGRU and KTOKD = 'ZS01' 
QUERY.CHECK_VALID_R_D_AT=select count(*),'' from SAPR3.KNA1 where KATR6=:KATR6 and MANDT=:MANDT and ZZKV_CUSNO=:ZZKV_CUSNO and KTOKD = 'ZS01' AND KATR10<>'' AND  KATR10 != 'IBM'
CHECK.IF_RDC_HAS_MAILING = select 1 from sapr3.kna1 where zzkv_cusno= :CMRNO and MANDT=:MANDT and KATR6=:KATR6 and zzkv_seqno in (select addrno FROM CMRDB2D.cmrtaddr where RCUXA = :CMRNO AND RCYAA= '866' and ADDRMAIL='Y' Union select ltrim(addrno, '0') FROM CMRDB2D.cmrtaddr  where RCUXA = :CMRNO AND RCYAA= '866'  and ADDRMAIL='Y')
QUERY.CHECK_SINGLE_ADDRESS_R_D = select count(*),'' from SAPR3.KNA1 where KATR6=:KATR6 and MANDT=:MANDT and ZZKV_CUSNO=(SELECT CMR_NO FROM CREQCMR.DATA_RDC WHERE REQ_ID=:REQ_ID) AND nvl(KATR10,'')<>'GTS'

QUERY.GET.SBO.BYZS01 = SELECT SORTL, '' FROM SAPR3.KNA1 where KATR6=:ISSUING_CNTRY and ZZKV_CUSNO=:CMR AND MANDT=:MANDT AND KTOKD=:ADDRTYPE AND LOEVM != 'X' AND AUFSD NOT IN ('90','93')

GET.KNA1.RECORD=select * from SAPR3.KNA1 where KUNNR = :KUNNR and MANDT = :MANDT

GET_LANDED_AND_POSTAL_CD = select LAND_CNTRY,POST_CD from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01' FOR READ ONLY WITH UR

QUERY.CHECK_IF_MAIN_ZI01= select 1 from creqcmr.addr where :ADDR_SEQ in (select addr_seq from creqcmr.addr where REQ_ID=:REQ_ID and addr_type='ZI01' order by addr_seq fetch first 1 rows only) fetch first 1 rows only
GET.ADDLCTRYDATA_BY_KUNNR_MANDT=SELECT * FROM SAPR3.ADDLCTRYDATA WHERE KUNNR = :KUNNR and MANDT = :MANDT
GET.ADDLCTRYDATA_BY_KUNNR_MANDT_FIELD=SELECT * FROM SAPR3.ADDLCTRYDATA WHERE KUNNR = :KUNNR and MANDT = :MANDT and FIELD_NAME = :FIELD
QUERY.ADDR.GET.LAND_CNTRY.BY_REQID = select LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID  and ADDR_TYPE =:ADDR_TYPE order by ADDR_SEQ

QUERY.GET_OLD_POST_CD = select POST_CD,'' from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE

QUERY.GET_OLD_CITY =select CITY1,'' from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE

QUERY.GET_ABBREV_LOCN_DB = select ABBREV_LOCN,'' from CREQCMR.DATA where REQ_ID = :REQ_ID


 
## CreateCMR2.0 queries
#Engine Specific
AUTOMATION.GET_ADDR=select * \
from CREQCMR.ADDR AD, CREQCMR.ADMIN A \
where AD.REQ_ID = :REQ_ID \
and AD.REQ_ID=A.REQ_ID \
and ( \
  AD.CHANGED_INDC = 'Y' \
  or \
  nvl(AD.IMPORT_IND, 'N') = 'N' \
  or \
  AD.ADDR_TYPE = 'ZS01' \
  or \
  A.REQ_TYPE='C' \
)

AUTOMATION.IS_AUTOMATED_PROCESSING=select AUTO_ENGINE_INDC from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY
AUTOMATION.GET_PENDING=select a.REQ_ID \
from CREQCMR.ADMIN a \
where a.REQ_STATUS in ('AUT', 'LEG') \
or \
(a.REQ_STATUS = 'RET' \
 and a.LAST_UPDT_TS < (current timestamp - (select cast(nvl(PARAMETER_VALUE,'10') as int) \
                                            from CREQCMR.SYST_PARAMETERS \
                                            where PARAMETER_CD = 'ENGINE_RETRY_CYCLE') minutes) \
) \
or \
(a.REQ_STATUS = 'REP' \
 and not exists (select 1 \
                 from CREQCMR.APPROVAL_REQ r \
                 where a.REQ_ID = r.REQ_ID \
                 and r.STATUS in ('PAPR', 'PMAIL', 'PREM'))) \
order by case when a.req_status='AUT' \
  then (case when nvl(a.child_req_id,0)=0 \
      then 0 \
      else 1 end) \
  when a.req_status='RET' \
  then 3 when a.req_status='LEG' then 4 else a.req_id end
AUTOMATION.CHECK_AND_RECOVER=select AUTO_ENGINE_INDC, RECOVERY_DIRECTION from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY
AUTOMATION.GET_TRADESTYLE_USAGE=select TRADESTYLE_NM_USAGE from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY
AUTOMATION.IS_DNB_COUNTRY=select nvl(DNB_PRIMARY_INDC,'N') \
from CREQCMR.SUPP_CNTRY \
where CNTRY_CD = :CNTRY
AUTOMATION.START_FROM_QUICK_SEARCH=select nvl(START_QUICK_SEARCH,'N') \
from CREQCMR.SUPP_CNTRY \
where CNTRY_CD = :CNTRY
AUTOMATION.GET_ENGINE=select config.* \
from CREQCMR.AUTO_ENGINE_CONFIG config, CREQCMR.AUTO_ENGINE_MAPPING mapping \
where mapping.CMR_ISSUING_CNTRY = :CNTRY \
and mapping.STATUS = '1' \
and mapping.CONFIG_ID = config.CONFIG_ID \
and config.STATUS = '1' \
order by  config.EXEC_ORD
AUTO_UPDATE_EXT_FIND=select EXT_WALLET_ID,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'PG01' AND REQ_ID <> :REQ_ID
AUTO_UPDATE_EXT_CHECK=SELECT * FROM CREQCMR.ADDR AS ADR where IMPORT_IND='N' and ADR.ADDR_TYPE = 'PG01' AND ADR.EXT_WALLET_ID = :EXT_WALLET_ID AND REQ_ID <> :REQ_ID
AUTOMATION.GET_MATCHING=select * \
from CREQCMR.AUTOMATION_MATCHING \
where AUTOMATION_RESULT_ID = :RESULT_ID \
and ITEM_NO = :ITEM_NO \
and PROCESS_CD = :PROCESS_CD 
AUTOMATION.GET_MATCHING_ALL=select * \
from CREQCMR.AUTOMATION_MATCHING \
where AUTOMATION_RESULT_ID = :RESULT_ID \
and PROCESS_CD = :PROCESS_CD
AUTOMATION.GET_ON_COMPLETE_ACTION=select nvl(PROCESS_ON_COMPLETION,'N') from CREQCMR.AUTO_ENGINE_MAPPING where CMR_ISSUING_CNTRY = :CNTRY
AUTOMATION.GET_ON_COMPLETE_ACTION_REQ_ID=select nvl(PROCESS_ON_COMPLETION,'N') from CREQCMR.AUTO_ENGINE_MAPPING where CMR_ISSUING_CNTRY = (SELECT CMR_ISSUING_CNTRY FROM CREQCMR.DATA WHERE REQ_ID=:REQ_ID)
AUTOMATION.SKIP_CHECKS_INDC = select nvl(SKIP_CHECKS_INDC,'N') from CREQCMR.SCENARIO_EXCEPTIONS where CMR_ISSUING_CNTRY = :CNTRY and CUST_TYP = :CUST_TYP and CUST_SUB_TYP = :CUST_SUB_TYP
AUTOMATION.GET_OVERRIDE_DATA=select * \
from CREQCMR.AUTOMATION_DATA \
where AUTOMATION_RESULT_ID = :RESULT_ID \
and PROCESS_CD = :PROCESS_CD 
AUTOMATION.GET_PROC_CENTER=select PROC_CENTER_NM from CREQCMR.PROC_CENTER where CMR_ISSUING_CNTRY = :CNTRY
AUTOMATION.GET_SUB_INDUSTRY=select ind.INDCL_CD \
from CMMA.REFT_UNSIC_W sic, CMMA.REFT_INDCL_W ind \
where sic.REFT_INDCL_KEY = ind.REFT_INDCL_KEY \
and sic.REFT_UNSIC_CD = :ISIC \
and sic.GEO_CD = :GEO
AUTOMATION.GET.SCENARIO_EXCEPTIONS=select * from creqcmr.SCENARIO_EXCEPTIONS where CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY and CUST_TYP=:SCENARIO and CUST_SUB_TYP=:SUB_SCENARIO and SUBREGION_CD=:SUBREGION_CD
AUTOMATION.GET.US_SUBSCENARIO_KEY=select CAST(REFT_USCMR_SGRP_KEY AS VARCHAR) from cmma.REFT_USCMR_SGRP_G where USCMR_SUB_GROUP=:SUB_SCENARIO and REFT_USCMR_GRP_KEY=:SCENARIO
#UI queries
AUTOMATION.UI.GET_RESULTS=select result.*,  \
       (select m.IMPORTED_INDC \
        from CREQCMR.AUTOMATION_MATCHING m  \
        where result.AUTOMATION_RESULT_ID = m.AUTOMATION_RESULT_ID  \
        and result.PROCESS_CD = m.PROCESS_CD  \
        order by  \
          case  \
            when m.IMPORTED_INDC = 'Y' then 0 \
            when m.IMPORTED_INDC = 'N' then 1 \
            else 2 \
          end \
        fetch first 1 rows only) MATCH_IMPORT,  \
       (select d.IMPORTED_INDC  \
        from CREQCMR.AUTOMATION_DATA d  \
        where result.AUTOMATION_RESULT_ID = d.AUTOMATION_RESULT_ID  \
        and result.PROCESS_CD = d.PROCESS_CD  \
        order by  \
          case  \
            when d.IMPORTED_INDC = 'Y' then 0 \
            when d.IMPORTED_INDC = 'N' then 1 \
            else 2 \
          end \
        fetch first 1 rows only) OVERRIDE_IMPORT  \
from CREQCMR.AUTOMATION_RESULTS result, CREQCMR.DATA data, CREQCMR.AUTO_ENGINE_MAPPING mapping, CREQCMR.AUTO_ENGINE_CONFIG config  \
where data.REQ_ID = result.REQ_ID  \
and data.CMR_ISSUING_CNTRY = mapping.CMR_ISSUING_CNTRY  \
and result.PROCESS_CD = config.PROCESS_CD  \
and mapping.CONFIG_ID = config.CONFIG_ID \
and result.REQ_ID = :REQ_ID \
order by result.AUTOMATION_RESULT_ID desc, config.EXEC_ORD asc 

AUTOMATION.GET_MATCHES_IMPORT=select \
  AUTOMATION_RESULT_ID, \
  PROCESS_CD, \
  ITEM_NO, \
  '' as MATCH_KEY_NAME, \
  '' as RECORD_TYP, \
  IMPORTED_INDC, \
  CURRENT TIMESTAMP as CREATE_TS, \
  CREATE_BY, \
  LAST_UPDT_BY, \
  CURRENT TIMESTAMP as LAST_UPDT_TS, \
  listagg(match_key_name || ' = ' || match_key_value, '\\n') as MATCH_KEY_VALUE, \
  listagg(( CASE \
      WHEN MATCH_GRADE_TYP <> 'Derived' THEN (match_GRADE_TYP || ' = ' || MATCH_GRADE_VALUE) ELSE '' END), '\\n') as MATCH_GRADE_VALUE \
from \
  creqcmr.AUTOMATION_MATCHING \
where \
  AUTOMATION_RESULT_ID=:AUTOMATION_RESULT_ID \
  and PROCESS_CD =:PROCESS_CD \
group by \
  automation_result_id, \
  process_cd, \
  item_no, \
  IMPORTED_INDC, \
  LAST_UPDT_BY, \
  CREATE_BY

US.GET_MASS_PROCESS_PENDING.RDCFORUS=SELECT * FROM CREQCMR.ADMIN WHERE REQ_ID IN (SELECT REQ_ID FROM CREQCMR.DATA WHERE CMR_ISSUING_CNTRY = '897' AND REQ_ID IN (SELECT ADMIN.REQ_ID FROM CREQCMR.ADMIN ADMIN LEFT OUTER JOIN TRANSCONN.NOTIFY_REQ NOTIFY_REQ ON ADMIN.REQ_ID=NOTIFY_REQ.REQ_ID WHERE NOTIFIED_IND <> 'Y' AND ADMIN.REQ_TYPE <> 'N' AND ADMIN.REQ_TYPE = 'M'))

AUTOMATION.DPL.GET_ACCESS_TOKENS=select distinct CMT \
from CREQCMR.ADMIN \
where nvl(CMT, '') <> '' \
and REQUESTER_ID = :REQUESTER_ID \
and timestampdiff(8,char(current timestamp - LAST_UPDT_TS)) < 5
AUTOMATION.DPL.GET_UNIQUE_NAMES=select distinct trim(CUST_NM1||' '||nvl(CUST_NM2,'')) \
from CREQCMR.ADDR \
where nvl(CUST_NM1, '') <> '' \
and REQ_ID = :REQ_ID \
and DPL_CHK_RESULT = 'F'

AUTOMATION.CHECK_REACTIVATION=select count(*) from CREQCMR.AUTO_ENGINE_CONFIG where CONFIG_ID=(select CONFIG_ID from CREQCMR.AUTO_ENGINE_MAPPING where CMR_ISSUING_CNTRY = :CNTRY) and REQUEST_TYP like :REQ_TYP
AUTOMATION.CHECK_MASS_REQUESTS=select count(*) from CREQCMR.AUTO_ENGINE_CONFIG where CONFIG_ID=(select CONFIG_ID from CREQCMR.AUTO_ENGINE_MAPPING where CMR_ISSUING_CNTRY = :CNTRY ) and (REQUEST_TYP like :REQ_TYP or REQUEST_TYP='*') and PROCESS_CD<>'GBL_APPROVALS'
AUTOMATION.AUTOMATION_RESULTS=SELECT * FROM CREQCMR.AUTOMATION_RESULTS WHERE REQ_ID = :REQ_ID AND PROCESS_CD = :PROCESS_CD

#US
AUTOMATION.GET_CMT_LOG=select cmt from CREQCMR.REQ_CMT_LOG WHERE REQ_ID = :REQ_ID
QUERY.ADDRESS.GETCOUNTYFORJS=select COUNTY,'' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE=:ADDR_TYPE
US.GET.ADDRESS_BY_REQ_ID=SELECT LAND_CNTRY, STATE_PROV,COUNTY,CITY1 FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE ='ZS01'
QUERY.US_CMR_SCC.GET_SCC_MULTIPLE_BY_LAND_CNTRY_ST_CITY=SELECT C_ST||'-'||RIGHT(DIGITS(CAST(C_CNTY AS SMALLINT)),3)||'-'||RIGHT(DIGITS(CAST(C_CITY AS SMALLINT)),4), '' FROM CREQCMR.US_CMR_SCC WHERE LAND_CNTRY = :LAND_CNTRY AND N_ST = :N_ST AND N_CITY = :N_CITY
QUERY.US_CMR_SCC.GET_SCC_BY_LAND_CNTRY_ST_CNTY_CITY=SELECT RIGHT(DIGITS(CAST(C_ST AS SMALLINT)),2)||'-'||RIGHT(DIGITS(CAST(C_CNTY AS SMALLINT)),3)||'-'||RIGHT(DIGITS(CAST(C_CITY AS SMALLINT)),4), '' FROM CREQCMR.US_CMR_SCC WHERE LAND_CNTRY = :LAND_CNTRY AND N_ST = :N_ST AND C_CNTY = :C_CNTY AND UPPER(TRIM(N_CITY)) = UPPER(:N_CITY)  ORDER BY SCC_ID ASC
QUERY.US_CMR_SCC.GET_SCC_BY_LAND_CNTRY_ST_CNTY_CITY_NON_US=SELECT RIGHT(DIGITS(CAST(C_ST AS SMALLINT)),2)||'-'||RIGHT(DIGITS(CAST(C_CNTY AS SMALLINT)),3)||'-'||RIGHT(DIGITS(CAST(C_CITY AS SMALLINT)),4), '', * FROM CREQCMR.US_CMR_SCC WHERE LAND_CNTRY = :LAND_CNTRY AND C_ST = '99' AND UPPER(TRIM(N_CITY)) = UPPER(:N_CITY) ORDER BY SCC_ID ASC
US.GET.ADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID

US.GET.US_BP_MASTER=SELECT * FROM SAPR3.US_BP_MASTER WHERE MANDT = :MANDT AND TRIM(COMPANY_NO) LIKE :COMPANY_NO ORDER BY UPDATE_DT DESC
US.GET.US_BP_MASTER_FOR_COMPANY_NO=SELECT * FROM SAPR3.US_BP_MASTER WHERE MANDT = :MANDT AND COMPANY_NO = :COMPANY_NO
QUERY.US.US_BP_MASTER_EXISTS=SELECT 1, '' FROM SAPR3.US_BP_MASTER WHERE MANDT = :MANDT AND COMPANY_NO = :COMPANY_NO

US.GET.US_IBM_BO=SELECT * FROM SAPR3.US_IBM_BO WHERE MANDT = :MANDT AND TRIM(I_OFF) LIKE :I_OFF ORDER BY UPDATE_DT DESC
US.GET.US_IBM_BO_BY_I_OFF=SELECT * FROM SAPR3.US_IBM_BO WHERE MANDT = :MANDT AND I_OFF = :I_OFF
QUERY.US.US_IBM_BO_EXISTS=SELECT 1, '' FROM SAPR3.US_IBM_BO WHERE MANDT = :MANDT AND I_OFF = :I_OFF

US.GET.US_IBM_ORG=SELECT * FROM SAPR3.US_IBM_ORG WHERE MANDT = :MANDT AND TRIM(A_LEVEL_1_VALUE) LIKE :A_LEVEL_1_VALUE ORDER BY UPDATE_DT DESC
US.GET.US_IBM_ORG_BY_LEVEL_VALUE=SELECT * FROM SAPR3.US_IBM_ORG WHERE MANDT = :MANDT AND A_LEVEL_1_VALUE = :A_LEVEL_1_VALUE AND A_LEVEL_2_VALUE = :A_LEVEL_2_VALUE AND A_LEVEL_3_VALUE = :A_LEVEL_3_VALUE AND A_LEVEL_4_VALUE = :A_LEVEL_4_VALUE
QUERY.US.US_IBM_ORG_EXISTS=SELECT 1, '' FROM SAPR3.US_IBM_ORG WHERE MANDT = :MANDT AND A_LEVEL_1_VALUE = :A_LEVEL_1_VALUE AND A_LEVEL_2_VALUE = :A_LEVEL_2_VALUE AND A_LEVEL_3_VALUE = :A_LEVEL_3_VALUE AND A_LEVEL_4_VALUE = :A_LEVEL_4_VALUE

US.GET.US_CMR_SCC.GET_SCC_BY_REQ_ID_LAND_CNTRY_ST_CNTY_CITY=SELECT RIGHT(DIGITS(CAST(C_ST AS SMALLINT)), 2)|| '-' || RIGHT(DIGITS(CAST(C_CNTY AS SMALLINT)), 3)|| '-' || RIGHT(DIGITS(CAST(C_CITY AS SMALLINT)), 4) AS SCC \
FROM CREQCMR.US_CMR_SCC \
WHERE 1=1 \
AND LAND_CNTRY = (SELECT LAND_CNTRY FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01') \
AND N_ST = (SELECT STATE_PROV FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01') \
AND C_CNTY = (SELECT case when COUNTY = '' then 0 else COUNTY end FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01') \
AND UPPER(TRIM(N_CITY)) = (SELECT UPPER(CITY1) FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01')
US.GET.US_TCR_UPDT_QUEUE=SELECT * FROM USINTERIM.US_TCR_UPDT_QUEUE WHERE MANDT = :MANDT AND TCR_INPUT_FILE_NM LIKE :TCR_INPUT_FILE_NM AND PROC_STATUS IN ('I', 'P', 'E') ORDER BY SEQ_NO DESC
US.GET.US_TCR_UPDT_QUEUE_BY_TCR_INPUT_FILE_NM_AND_SEQ_NO=SELECT * FROM USINTERIM.US_TCR_UPDT_QUEUE WHERE MANDT = :MANDT AND TCR_INPUT_FILE_NM = :TCR_INPUT_FILE_NM AND SEQ_NO = :SEQ_NO

QUERY.US_COMPANY.GET_ENT_COMP=SELECT ENT_NO, COMP_NO FROM SAPR3.US_COMPANY WHERE COMP_NO =:COMP_NO AND  REPLACE(COMP_LEGAL_NAME,' ','')=:COMP_LEGAL_NAME  AND MANDT=:MANDT
QUERY.US_COMPANY.GET_COMP=SELECT COMP_NO, '' FROM SAPR3.US_COMPANY WHERE ENT_NO =:ENT_NO AND REPLACE(COMP_LEGAL_NAME,' ','')=:COMP_LEGAL_NAME AND MANDT=:MANDT
QUERY.US_ENTERPRISE.GET_ENT_NO=SELECT ENT_NO, '' FROM SAPR3.US_ENTERPRISE WHERE ENT_NO =:ENT_NO AND MANDT=:MANDT
QUERY.US_COMPANY.COMP_LEGAL_NAME=SELECT ENT_NO, COMP_NO FROM SAPR3.US_COMPANY WHERE REPLACE(COMP_LEGAL_NAME,' ','')=:COMP_LEGAL_NAME  AND MANDT=:MANDT
QUERY.US_COMPANY.GET_ENT_NO=SELECT ENT_NO, COMP_NO FROM SAPR3.US_COMPANY WHERE REPLACE(COMP_LEGAL_NAME,' ','')=:COMP_LEGAL_NAME AND COMP_NO =:COMP_NO AND ENT_NO =:ENT_NO AND MANDT=:MANDT
QUERY.DATA_RDC.CUST_CLASS=SELECT CUST_CLASS, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.DATA_RDC.ISIC=SELECT CUST_CLASS,ISIC_CD FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.BP.GET_PROCESSING_TYP=SELECT PROCESSING_TYP,'' FROM CREQCMR.SUPP_CNTRY WHERE CNTRY_CD = :CNTRY_CD
QUERY.US_GETMASSUPDGETENTNO=SELECT * FROM CREQCMR.MASS_UPDT_DATA WHERE PAR_REQ_ID =:PAR_REQ_ID AND ITERATION_ID = (SELECT ITERATION_ID FROM CREQCMR.ADMIN WHERE REQ_ID =:REQ_ID)
QUERY.US.GETMASSUPDTSKIP=SELECT katr10 FROM SAPR3.KNA1  WHERE ZZKV_CUSNO= :ZZKV_CUSNO AND MANDT= :MANDT AND KATR10 = '' 


QUERY.US_TAXTEAM.OUT_TAXTEAM=SELECT 'Y',''  FROM CREQCMR.DATA D ,  \
CREQCMR.DATA_RDC R WHERE  \
R.REQ_ID=D.REQ_ID  \
AND D.REQ_ID =:REQ_ID \
AND NVL(R.ABBREV_NM,'') = NVL(D.ABBREV_NM,'')  AND NVL(R.CLIENT_TIER,'') = NVL(D.CLIENT_TIER,'')  \
AND NVL(R.CUST_CLASS,'') = NVL(D.CUST_CLASS,'') AND NVL(R.CUST_PREF_LANG,'') = NVL(D.CUST_PREF_LANG,'')  \
AND NVL(R.INAC_CD,'') = NVL(D.INAC_CD,'')  AND NVL(R.ISU_CD,'') = NVL(D.ISU_CD,'')   \
AND NVL(R.SEARCH_TERM,'') = NVL(D.SEARCH_TERM,'') AND NVL(R.ISIC_CD,'') = NVL(D.ISIC_CD,'')  \
AND NVL(R.SUB_INDUSTRY_CD,'') = NVL(D.SUB_INDUSTRY_CD,'') AND NVL(R.VAT,'') = NVL(D.VAT,'')   \
AND NVL(R.COV_DESC ,'') = NVL(D.COV_DESC,'')  AND NVL(R.COV_ID,'') = NVL(D.COV_ID,'')   \
AND NVL(R.GBG_DESC,'') = NVL(D.GBG_DESC,'')  AND NVL(R.GBG_ID,'') = NVL(D.GBG_ID,'')   \
AND NVL(R.BG_DESC,'') = NVL(D.BG_DESC,'')  AND NVL(R.BG_ID,'') = NVL(D.BG_ID,'')   \
AND NVL(R.BG_RULE_ID,'') = NVL(D.BG_RULE_ID,'') AND NVL(R.DUNS_NO,'') = NVL(D.DUNS_NO,'') \
AND NVL(R.AFFILIATE,'') = NVL(D.AFFILIATE,'')  AND NVL(R.COMPANY,'') = NVL(D.COMPANY,'')   \
AND NVL(R.ENTERPRISE,'') = NVL(D.ENTERPRISE,'') AND NVL(R.ORD_BLK,'') = NVL(D.ORD_BLK,'')   \
AND NVL(R.US_SICMEN ,'') = NVL(D.US_SICMEN,'')  AND NVL(R.EDUC_ALLOW_CD ,'') = NVL(D.EDUC_ALLOW_CD,'') \
AND NVL(R.OEM_IND,'') = NVL(D.OEM_IND,'')  AND NVL(R.SENSITIVE_FLAG,'') = NVL(D.SENSITIVE_FLAG,'')   \
AND NVL(R.FED_SITE_IND,'') = NVL(D.FED_SITE_IND,'')  AND NVL(R.RESTRICT_TO,'') = NVL(D.RESTRICT_TO,'') \
AND NVL(R.NON_IBM_COMPANY_IND,'') = NVL(D.NON_IBM_COMPANY_IND,'')  AND NVL(R.CSO_SITE,'') = NVL(D.CSO_SITE,'') \
AND NVL(R.SIZE_CD,'') = NVL(D.SIZE_CD,'')  AND NVL(R.MISC_BILL_CD,'') = NVL(D.MISC_BILL_CD,'')   \
AND NVL(R.PCC_MKTG_DEPT,'') = NVL(D.PCC_MKTG_DEPT,'')  AND NVL(R.PCC_AR_DEPT,'') = NVL(D.PCC_AR_DEPT,'')   \
AND NVL(R.SVC_AR_OFFICE,'') = NVL(D.SVC_AR_OFFICE,'')  AND NVL(R.PPSCEID,'') = NVL(D.PPSCEID,'')   \
AND NVL(R.SVC_TERRITORY_ZONE,'') = NVL(D.SVC_TERRITORY_ZONE,'')  AND NVL(R.MTKG_AR_DEPT,'') = NVL(D.MTKG_AR_DEPT,'')   \
AND NVL(R.MKTG_DEPT,'') = NVL(D.MKTG_DEPT,'')  AND NVL(R.BP_REL_TYPE,'') = NVL(D.BP_REL_TYPE,'')   \
AND NVL(R.MEM_LVL,'') = NVL(D.MEM_LVL,'')  AND NVL(R.BP_ACCT_TYP,'') = NVL(D.BP_ACCT_TYP,'')  \
AND NVL(R.BP_NAME,'') = NVL(D.BP_NAME,'')  AND NVL(R.RESTRICT_IND,'') = NVL(D.RESTRICT_IND,'')  

QUERY.US_TAXTEAM.IN_TAXTEAM=SELECT 'Y',''  FROM CREQCMR.DATA D ,  \
CREQCMR.DATA_RDC R WHERE  \
R.REQ_ID=D.REQ_ID  \
AND D.REQ_ID =:REQ_ID \
AND ( R.TAX_CD1 = D.TAX_CD1 OR (R.TAX_CD1 IS NULL  AND D.TAX_CD1 IS NULL ) ) \
AND ( R.TAX_CD2 = D.TAX_CD2 OR (R.TAX_CD2 IS NULL  AND D.TAX_CD2 IS NULL ) ) \
AND ( R.TAX_CD3 = D.TAX_CD3 OR (R.TAX_CD3 IS NULL  AND D.TAX_CD3 IS NULL ) ) \
AND ( R.TAX_EXEMPT_STATUS_1 = D.TAX_EXEMPT_STATUS_1 OR (R.TAX_EXEMPT_STATUS_1 IS NULL  AND D.TAX_EXEMPT_STATUS_1 IS NULL ) ) \
AND ( R.TAX_EXEMPT_STATUS_2 = D.TAX_EXEMPT_STATUS_2 OR (R.TAX_EXEMPT_STATUS_2 IS NULL  AND D.TAX_EXEMPT_STATUS_2 IS NULL ) ) \
AND ( R.TAX_EXEMPT_STATUS_3 = D.TAX_EXEMPT_STATUS_3 OR (R.TAX_EXEMPT_STATUS_3 IS NULL  AND D.TAX_EXEMPT_STATUS_3 IS NULL ) ) \
AND ( R.ICC_TAX_CLASS = D.ICC_TAX_CLASS  OR (R.ICC_TAX_CLASS  IS NULL  AND D.ICC_TAX_CLASS  IS NULL ) ) \
AND ( R.ICC_TAX_EXEMPT_STATUS = D.ICC_TAX_EXEMPT_STATUS OR (R.ICC_TAX_EXEMPT_STATUS IS NULL  AND D.ICC_TAX_EXEMPT_STATUS IS NULL ) ) \
AND ( R.OUT_CITY_LIMIT = D.OUT_CITY_LIMIT OR (R.OUT_CITY_LIMIT IS NULL  AND D.OUT_CITY_LIMIT IS NULL ) ) \

QUERY.US_TAXTEAM.OUT_ADDR_TAXTEAM=SELECT 'Y','' FROM CREQCMR.ADDR A, CREQCMR.ADDR_RDC R  \
WHERE A.REQ_ID =:REQ_ID  \
AND A.ADDR_TYPE = 'ZS01'  \
AND  A.REQ_ID = R.REQ_ID  \
AND  NVL(R.ADDR_TXT,'')=NVL(A.ADDR_TXT,'')  \
AND  NVL(R.ADDR_TXT_2,'')=NVL(A.ADDR_TXT_2,'')  \
AND  NVL(R.CITY2,'')=NVL(A.CITY2,'')  \
AND  NVL(R.POST_CD,'')=NVL(A.POST_CD,'')  \
AND  NVL(R.DIVN,'')=NVL(A.DIVN,'')  \
AND  NVL(R.DEPT,'')=NVL(A.DEPT,'')  \
AND  NVL(R.PO_BOX,'')=NVL(A.PO_BOX,'')  \
AND  NVL(R.BLDG,'')=NVL(A.BLDG,'')  \
AND  NVL(R.FLOOR,'')=NVL(A.FLOOR,'')  \
AND  NVL(R.CUST_PHONE,'')=NVL(A.CUST_PHONE,'')  \
AND  NVL(R.CUST_FAX,'')=NVL(A.CUST_FAX,'')  \

#FR
REQ.NM_MATCH=SELECT \
  adr.* \
FROM \
  CREQCMR.ADMIN as adm, \
  CREQCMR.DATA as da, \
  CREQCMR.ADDR as adr \
WHERE \
  adm.REQ_ID = adr.REQ_ID \
  AND adm.REQ_ID = da.REQ_ID \
  AND adm.REQ_ID <> :REQ_ID \
  AND adm.REQ_TYPE = 'C' \
  AND adm.REQ_STATUS <> 'CAN' \
  AND adm.REQ_STATUS <> 'DRA' \
  AND adm.REQ_STATUS <> 'PRJ' \
  AND da.CUST_SUB_GRP LIKE :SCENARIO \
  AND UPPER(adr.LAND_CNTRY)=:LAND_CNTRY \
  AND adr.ADDR_TYPE=:ADDR_TYPE \
  AND CMR_ISSUING_CNTRY =:ISSUING_CNTRY \
  AND LAST_UPDT_TS > ( \
    CURRENT DATE - case dayname(CURRENT DATE) when 'Tuesday' then 5 when 'Monday' then 4 else 3 end \
  )

GET.ADDR.ADDR_TYP.FROM.REQID = SELECT adr.* FROM CREQCMR.ADDR as adr WHERE adr.REQ_ID = :REQ_ID AND adr.ADDR_TYPE = :ADDR_TYPE

#CODE MAINTENANCE
CNAE.SEARCH=SELECT * FROM CMMA.REFT_BR_CNAE WHERE CNAE_NO LIKE :CNAE ORDER BY CNAE_NO
QUERY.CNAE.SAVE=SELECT COUNT(*),'' FROM CMMA.REFT_BR_CNAE WHERE CNAE_NO = :CNAE
QUERY.AP_CLUSTER_MAP.SAVE = SELECT COUNT(*),'' FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE AP_CUST_CLUSTER_ID = :AP_CUST_CLUSTER_ID AND ISSUING_CNTRY = :ISSUING_CNTRY AND CLIENT_TIER_CD = :CLIENT_TIER AND ISU_CD = :ISU_CD
BR_SBO_COLLECTOR.GET_LIST=SELECT * FROM CMMA.REFT_BR_SBO_COLLECTOR
BR_SBO_COLLECTOR.GET_RECORD=SELECT * FROM CMMA.REFT_BR_SBO_COLLECTOR WHERE STATE_CD = :STATE_CD
AP_CUST_CLUSTER_TIER_MAP.GET_LIST = SELECT * FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP where ISSUING_CNTRY like :CNTRY order by ISSUING_CNTRY, AP_CUST_CLUSTER_ID ,CLIENT_TIER_CD, ISU_CD
AP_CUST_CLUSTER_TIER_MAP.GET_RECORD=SELECT * FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP where ISSUING_CNTRY=:ISSUING_CNTRY and AP_CUST_CLUSTER_ID= :CLUSTER_ID and CLIENT_TIER_CD= :CLIENT_TIER_CD and ISU_CD= :ISU_CD
AUTOMATION.CONFIG.GET_CONFIGS=select * from CREQCMR.AUTO_CONFIG_DEFN order by CREATE_TS
RECORD.GET_AUTO_ENGINE_CONFIG=select * from CREQCMR.AUTO_CONFIG_DEFN where CONFIG_ID = :ID
QUERY.GET_AUTO_ELEMENTS=select CONFIG_ID, ELEMENT_ID, EXEC_ORD, PROCESS_CD, REQUEST_TYP, ACTION_ON_ERROR, OVERRIDE_DATA_INDC, STOP_ON_ERROR_INDC, STATUS \
from CREQCMR.AUTO_ENGINE_CONFIG \
where CONFIG_ID = :ID \
order by EXEC_ORD
QUERY.GET_AUTO_ENGINE_CNTRY=select map.CMR_ISSUING_CNTRY, map.PROCESS_ON_COMPLETION, nvl(lov.TXT,sup.NM) NM, geo.GEO_CD, sup.AUTO_ENGINE_INDC, \
    (select 'Y' from CREQCMR.SCENARIO_EXCEPTIONS exc where (map.CMR_ISSUING_CNTRY = exc.SUBREGION_CD) fetch first 1 row only) EXCEPTIONS \
from CREQCMR.AUTO_ENGINE_MAPPING map \
left outer join CREQCMR.SUPP_CNTRY sup \
  on LEFT(map.CMR_ISSUING_CNTRY,3) = sup.CNTRY_CD \
left outer join CREQCMR.LOV lov \
  on lov.CMR_ISSUING_CNTRY = sup.CNTRY_CD \
  and lov.FIELD_ID = '##SysLocExtension' \
  and lov.CD = map.CMR_ISSUING_CNTRY \
left outer join CREQCMR.CNTRY_GEO_DEF geo \
  on sup.CNTRY_CD = geo.CMR_ISSUING_CNTRY \
where map.CONFIG_ID = :ID    \
order by 3

QUERY.GET_AUTO_GET_COUNTRIES=select sup.CNTRY_CD, sup.NM, geo.GEO_CD, sup.CNTRY_CD SYS_LOC  \
from CREQCMR.SUPP_CNTRY sup \
left outer join CREQCMR.CNTRY_GEO_DEF geo \
  on sup.CNTRY_CD = geo.CMR_ISSUING_CNTRY \
where not exists (select 1 from CREQCMR.AUTO_ENGINE_MAPPING where CMR_ISSUING_CNTRY = sup.CNTRY_CD) \
union \
select lov.CD CNTRY_CD, lov.TXT NM, geo.GEO_CD, lov.CMR_ISSUING_CNTRY SYS_LOC \
from CREQCMR.LOV lov \
left outer join CREQCMR.CNTRY_GEO_DEF geo \
  on lov.CMR_ISSUING_CNTRY = geo.CMR_ISSUING_CNTRY \
where lov.FIELD_ID = '##SysLocExtension' \
and lov.CMR_ISSUING_CNTRY in (select CNTRY_CD from CREQCMR.SUPP_CNTRY) \
and not exists (select 1 from CREQCMR.AUTO_ENGINE_MAPPING where CMR_ISSUING_CNTRY = lov.CD) \
order by 2



QUERY.CHECK_AUTO_ID=select CONFIG_ID,'1' from CREQCMR.AUTO_CONFIG_DEFN where CONFIG_ID = :ID
QUERY.GET_ALL_AUTO_IDS=select CONFIG_ID,nvl(SHORT_DESC,CONFIG_DEFN) from CREQCMR.AUTO_CONFIG_DEFN
QUERY.GET_MAPPED_COUNTRIES=select map.CMR_ISSUING_CNTRY, nvl(lov.TXT,sup.NM), sup.AUTO_ENGINE_INDC, map.CONFIG_ID, defn.CONFIG_DEFN, geo.GEO_CD, map.PROCESS_ON_COMPLETION, \
           (select 'Y' from CREQCMR.SCENARIO_EXCEPTIONS exc where map.CMR_ISSUING_CNTRY = exc.SUBREGION_CD fetch first 1 row only) EXCEPTIONS, \
           defn.SHORT_DESC \
from CREQCMR.AUTO_ENGINE_MAPPING map, CREQCMR.AUTO_CONFIG_DEFN defn \
left outer join CREQCMR.SUPP_CNTRY sup \
  on LEFT(map.CMR_ISSUING_CNTRY,3) = sup.CNTRY_CD \
left outer join CREQCMR.LOV lov \
  on lov.CMR_ISSUING_CNTRY = sup.CNTRY_CD \
  and lov.FIELD_ID = '##SysLocExtension' \
  and lov.CD = map.CMR_ISSUING_CNTRY \
left outer join CREQCMR.CNTRY_GEO_DEF geo \
  on sup.CNTRY_CD = geo.CMR_ISSUING_CNTRY \
where map.CONFIG_ID = defn.CONFIG_ID \
order by 2

AUTOMATION.GET_LOV_STARTSWITH = select * from creqcmr.LOV where FIELD_ID =:FIELD_ID and CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY AND CD like :CD

AUTOMATION.GET.KNA1.BY_CMR = SELECT NAME1,NAME2,NAME4 FROM SAPR3.KNA1 WHERE MANDT =:MANDT AND KATR6 = :KATR6 \
AND KTOKD = 'ZS01' AND ZZKV_CUSNO = :ZZKV_CUSNO AND LOEVM != 'X' AND AUFSD = ''
#Brazil Automation
BR.AUTO.GET_INSTALL_ADDRS=select * \
from CREQCMR.ADDR \
where REQ_ID = :REQ_ID \
and ADDR_TYPE = 'ZI01'
BR.AUTO.GET_DUP_CMR_VAT=SELECT ZZKV_CUSNO, NAME1, NAME2, STCEG FROM SAPR3.KNA1 \
WHERE KATR6 = '631'AND MANDT=:MANDT AND ZZKV_CUSNO IN \
(SELECT DISTINCT ZZKV_CUSNO FROM SAPR3.KNA1 WHERE KATR6 = '631' AND MANDT = :MANDT AND LOEVM = '' \
AND AUFSD NOT IN ('93','75') AND STCEG = :VAT AND KTOKD = :KTOKD AND nvl(KATR10,'')<>'GTS') AND nvl(KATR10,'')<>'GTS'  ORDER BY SAP_TS DESC
BR.AUTO.GET_DUP_CMR_VAT_BP=SELECT ZZKV_CUSNO, NAME1, NAME2, STCEG FROM SAPR3.KNA1 \
WHERE KATR6 = '631'AND MANDT=:MANDT AND nvl(KATR10,'')<>'GTS' AND ZZKV_CUSNO IN \
(SELECT DISTINCT ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE KATR6 = '631' AND LOEVM = '' \
AND AUFSD NOT IN ('93','75') AND SORTL = '606' AND MANDT = :MANDT AND STCEG = :VAT AND KTOKD = :KTOKD AND nvl(KATR10,'')<>'GTS') ORDER BY SAP_TS DESC
BR.AUTO.GET_DUP_CMR_VAT_OTHERS=SELECT ZZKV_CUSNO, NAME1, NAME2, STCEG FROM SAPR3.KNA1 \
WHERE KATR6 = '631'AND MANDT=:MANDT AND nvl(KATR10,'')<>'GTS' AND ZZKV_CUSNO IN \
(SELECT DISTINCT ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE KATR6 = '631' AND LOEVM = '' \
AND AUFSD NOT IN ('93','75') AND SORTL NOT IN ('606','010') AND MANDT = :MANDT AND STCEG = :VAT AND KTOKD = :KTOKD AND nvl(KATR10,'')<>'GTS') ORDER BY SAP_TS DESC
BR.CEDP.TEST=select ABREVNAM from PZ_CI_LA.CROSBR_CROVPMN where CTYNUM ='631' and CUSTNUM='00010229' WITH UR
BR.AUTO.CEDP.ROOT_MATCH=select distinct kna1.KATR6, kna1.ZZKV_CUSNO, kna1.NAME1, case \
when kna1.AUFSD = '88' then 'Denial' \
when kna1.AUFSD = '93' then 'Inactive' \
when kna1.AUFSD = '' or kna1.AUFSD = ' ' then 'Active' \
end as LEGACY_STATUS, \
case \
when ext.CAP_IND = 'Y' then 'Yes (copy cov & lde)' \
else 'No (set IBM data as new cmr)' \
end as CAP, \
case \
 when kna1.STCEG <> '' then kna1.STCEG \
 else kna1.STCD1 \
 end as VAT, \
 kna1.ZZKV_NODE1 as COMPANY_ID, kna1.ZZKV_INAC as INAC, kna1.sortl as SBO, \
case \
    when concat (kna1.BRSCH, kna1.KATR3) = '34A' then 'F' \
    when concat (kna1.BRSCH, kna1.KATR3) = '34V' then 'V' \
    when concat (kna1.BRSCH, kna1.KATR3) = '32S' then 'S' \
    when concat (kna1.BRSCH, kna1.KATR3) = '32T' then 'M' \
    when concat (kna1.BRSCH, kna1.KATR3) = '32N' then 'Y' \
    when concat (kna1.BRSCH, kna1.KATR3) = '32C' then 'P' \
    when concat (kna1.BRSCH, kna1.KATR3) = '21'  then 'Z' \
    when concat (kna1.BRSCH, kna1.KATR3) = '21Z' then '9' \
    when concat (kna1.BRSCH, kna1.KATR3) = '34Q' then 'Q' \
    when concat (kna1.BRSCH, kna1.KATR3) = '5K'  then 'K' \
    when concat (kna1.BRSCH, kna1.KATR3) = '32B' then 'out of date \u2013 should be S' \
    else 'A' end as MRC, \
 kna1.ZZKV_SIC as ISIC, 'HPHO12' as COLLECTOR_NO, \
 kna1.ERDAT as "Creation Date", \
 COMP_REVENUE.COMP_REVENUE_SUM AS SUM_4Y_REVENUE, \
 kna1.BRSCH as ISU_CD, kna1.KATR3 as CLIENT_TIER \
 from sapr3.KNA1 kna1 \
 left outer join sapr3.KUNNR_EXT ext \
 on kna1.KUNNR = ext.KUNNR \
 and kna1.MANDT = ext.MANDT \
 LEFT OUTER JOIN \
      (select REV.SAP_CUSTOMER_NO KUNNR, REV.REV_TOTAL COMP_REVENUE_SUM, 6 NO_OF_YRS, (REV.REV_TOTAL / 6) COMP_AVG_4Y_REVENUE, (REV.REV_TOTAL / 6) FIXED_AVG_4Y_REVENUE \
       from (select SAP_CUSTOMER_NO, sum(nvl(REV_CY,0) + nvl(REV_CY_M1,0) + + nvl(REV_CY_M2,0) + nvl(REV_CY_M3,0) + nvl(REV_CY_M4,0) + nvl(REV_CY_M5,0) + nvl(REV_CY_M6,0)) REV_TOTAL \
             from IZ_CLIENT.AIW_SAP_ANNUAL_REV \
             group by SAP_CUSTOMER_NO) REV) COMP_REVENUE \
      ON KNA1.KUNNR = COMP_REVENUE.KUNNR \
where kna1.KTOKD = 'ZS01' \
AND nvl(KATR10,'')<>'GTS' \
and kna1.KATR6 = '631' \
and ext.CAP_IND = 'Y' \
and kna1.KATR10 = '' \
and (kna1.STCEG like :VAT or kna1.STCD1 like :VAT) and \
CASE \
WHEN :KUKLA = '45' THEN kna1.sortl = '606' \
WHEN :KUKLA = '81' THEN kna1.sortl = '010' \
ELSE kna1.sortl NOT IN ('606','010') \
END \
ORDER BY COMP_REVENUE.COMP_REVENUE_SUM DESC NULLS LAST, KNA1.ERDAT DESC with ur

BR.AUTO.GET_VAL_FROM_CNAE=SELECT * FROM CMMA.REFT_BR_CNAE WHERE CNAE_NO = :CNAE WITH UR
BR.AUTO.GET_VAL_FROM_STATE=SELECT * FROM CMMA.REFT_BR_SBO_COLLECTOR WHERE STATE_CD = :STATE WITH UR
BR.AUTO.GET_SBO_FROM_STATE=SELECT SBO FROM CMMA.REFT_BR_SBO_COLLECTOR WHERE STATE_CD = :STATE WITH UR
BR.AUTO.GET_COLLECTOR_FROM_STATE=SELECT COLLECTOR_NO FROM CMMA.REFT_BR_SBO_COLLECTOR WHERE STATE_CD = :STATE WITH UR
BR.AUTO.GET_CUST_SCENARIO_FIELDS=SELECT \
  VALUE \
FROM \
  CREQCMR.CUST_SCENARIOS \
WHERE \
  CUST_TYP=:CUST_TYPE AND \
  FIELD_NAME=:FIELD_NAME AND \
  LOC_CD='631'

GET.LD_MASS_UPDT_FOR_DPL_CHECK=SELECT * FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID \
AND ((CUST_NM1 <> '' OR CUST_NM1 <> NULL) OR (CUST_NM2 <> '' OR CUST_NM2 <> NULL)) \
AND ITERATION_ID = :ITER_ID

GET.LD_MASS_UPDT_EXT_ADDR=SELECT * FROM CMRDB2D.CMRTADDR WHERE RCYAA = :CNTRY AND RCUXA = :CMR_NO

QUERY.COUNT.LD_MASS_UPDT_FOR_DPL_CHECK=SELECT COUNT(*),'XXX' FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID \
AND ((CUST_NM1 <> '' OR CUST_NM1 <> NULL) OR (CUST_NM2 <> '' OR CUST_NM2 <> NULL)) \
AND ITERATION_ID = :ITER_ID AND (DPL_CHK_RESULT <> NULL OR DPL_CHK_RESULT <> '')

QUERY.COUNT.LD_MASS_UPDT_INC_DPL_CHECK=SELECT COUNT(*),'XXX' FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID \
AND ((CUST_NM1 <> '' OR CUST_NM1 <> NULL) OR (CUST_NM2 <> '' OR CUST_NM2 <> NULL)) \
AND ITERATION_ID = :ITER_ID AND (DPL_CHK_RESULT IS NULL OR DPL_CHK_RESULT = '')

QUERY.COUNT.LD_MASS_UPDT_ADDR_ZS01_ZP01=SELECT COUNT(*),'' FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :ID \
AND ADDR_TYPE IN ('ZS01','ZP01') AND ITERATION_ID = :ITER_ID

QUERY.COUNT.LD_MASS_UPDT_ATT_DPL_CHECK=SELECT COUNT(*),'XXX' FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID \
AND ((CUST_NM1 <> '' OR CUST_NM1 <> NULL) OR (CUST_NM2 <> '' OR CUST_NM2 <> NULL)) \
AND ITERATION_ID = :ITER_ID AND DPL_CHK_RESULT = 'F'

QUERY.BR.AUTO.GET_UPDATE_INFO=SELECT kna1.KUKLA,kna1.STCEG,kna1.TELX1,kna1.AUFSD, \
kna1.ZZKV_NODE1, kna1.ZZKV_INAC, kna1.BRSCH, kna1.SORTL,knvk.NAME1  \
FROM SAPR3.KNA1 kna1, SAPR3.KNVK knvk \
WHERE kna1.KUNNR=knvk.KUNNR AND \
kna1.ZZKV_CUSNO=:ZZKV_CUSNO AND \
kna1.MANDT=:MANDT AND \
kna1.KATR6=:KATR6 AND \
kna1.LOEVM<>'X' AND \
kna1.KTOKD=:KTOKD ORDER BY AUFSD ASC

BR.GET_DISTINCT_MAILS=select * \
from CREQCMR.GEO_ADL_CONT_DTL \
where REQ_ID = :REQ_ID \
order by CONTACT_NUM, case when CONTACT_TYPE = 'EM' then 1 when CONTACT_TYPE = 'LE' then 2 else 3 end, GEO_ADL_CONT_DTL_ID 
BR.GET_TAX_CD=select * from CREQCMR.GEO_TAX_INFO where REQ_ID = :REQ_ID and TAX_CD = '30' order by GEO_TAX_INFO_ID
BR.GET_LEGACY_IND=select BRSCH from SAPR3.ZZKV_SIC \
where MANDT = :MANDT \
and BRAN1 = :SUB_IND \
and ZZKV_GEO = 'WW'
BR.GET_INSTALL_AT=SELECT * FROM CREQCMR.ADDR WHERE ADDR_TYPE='ZI01' AND REQ_ID=:REQID

BR.GET_SORTL_RULES=SELECT ISU_CD, CLIENT_TIER, MRC_CD FROM CREQCMR.SALES_BRANCH_OFF WHERE ISSUING_CNTRY=:ISSUING_CNTRY AND SALES_BO_CD=:SALES_BO_CD

AUTO.CHEKC_FIND_CMR=select 1 from CREQCMR.ADDR where REQ_ID = :REQ_ID and nvl(IMPORT_IND, '') = 'Y'

AUTO.COV.GET_COV_FROM_BG=select cov.COVTYPE||cov.COVID BASE_COV_ID, cov.DELTYPE||cov.DELID FINAL_COV_ID, kna1.BRSCH, kna1.KATR3 \
from SAPR3.KNA1EXT cov, SAPR3.BUYING_GROUP_EXT bg, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid  \
where cov.MANDT = bg.MANDT \
and kna1.MANDT = cov.MANDT \
and kna1.MANDT = bg.MANDT \
and kna1.MANDT = :MANDT \
and cov.KUNNR = bg.KUNNR \
and kna1.KUNNR = cov.KUNNR \
and kna1.KUNNR = bg.KUNNR \
and bg.BUYING_GROUP_ID = :KEY  \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and cov.COV_ENDDATE > current date \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.BRSCH, kna1.KATR3 \
order by count(distinct KNA1.brsch), count(distinct KNA1.katr3), count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only

AUTO.COV.GET_SBO_FROM_BG_FR =select kna1.SORTL,'1' \
from SAPR3.KNA1EXT cov, SAPR3.BUYING_GROUP_EXT bg, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid  \
where cov.MANDT = bg.MANDT \
and kna1.MANDT = cov.MANDT \
and kna1.MANDT = bg.MANDT \
and kna1.MANDT = :MANDT \
and cov.KUNNR = bg.KUNNR \
and kna1.KUNNR = cov.KUNNR \
and kna1.KUNNR = bg.KUNNR \
and bg.BUYING_GROUP_ID = :KEY  \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and cov.COV_ENDDATE > current date \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.BRSCH, kna1.KATR3, kna1.SORTL \
order by count(distinct KNA1.brsch), count(distinct KNA1.katr3), count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only


AUTO.COV.GET_COV_FROM_BG_ES=select kna1.BRSCH, kna1.KATR3 , kna1.ZZKV_NODE2 , kna1.SORTL \
from SAPR3.KNA1EXT cov, SAPR3.BUYING_GROUP_EXT bg, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid  \
where cov.MANDT = bg.MANDT \
and kna1.MANDT = cov.MANDT \
and kna1.MANDT = bg.MANDT \
and kna1.MANDT = :MANDT \
and cov.KUNNR = bg.KUNNR \
and kna1.KUNNR = cov.KUNNR \
and kna1.KUNNR = bg.KUNNR \
and bg.BUYING_GROUP_ID = :KEY  \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
and kna1.brsch <> '21' \
and nvl(kna1.KATR10,'')<>'GTS' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.ZZKV_NODE2, kna1.BRSCH, kna1.KATR3, kna1.SORTL \
order by count(distinct KNA1.brsch), count(distinct KNA1.ZZKV_NODE2), count(distinct KNA1.katr3), count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only

AUTO.COV.GET_COV_FROM_BG_UK=select kna1.BRSCH, kna1.KATR3 , kna1.ZZKV_NODE2 , kna1.SORTL \
from SAPR3.KNA1EXT cov, SAPR3.BUYING_GROUP_EXT bg, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid  \
where cov.MANDT = bg.MANDT \
and kna1.MANDT = cov.MANDT \
and kna1.MANDT = bg.MANDT \
and kna1.MANDT = :MANDT \
and cov.KUNNR = bg.KUNNR \
and kna1.KUNNR = cov.KUNNR \
and kna1.KUNNR = bg.KUNNR \
and bg.BUYING_GROUP_ID = :KEY  \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
and kna1.brsch <> '21' \
and nvl(kna1.KATR10,'')<>'GTS' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.ZZKV_NODE2, kna1.BRSCH, kna1.KATR3, kna1.SORTL \
order by count(distinct KNA1.brsch), count(distinct KNA1.ZZKV_NODE2), count(distinct KNA1.katr3), count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only


AUTO.COV.GET_COV_FROM_BG_IR=select kna1.BRSCH, kna1.KATR3 , kna1.ZZKV_NODE2 , kna1.SORTL \
from SAPR3.KNA1EXT cov, SAPR3.BUYING_GROUP_EXT bg, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid  \
where cov.MANDT = bg.MANDT \
and kna1.MANDT = cov.MANDT \
and kna1.MANDT = bg.MANDT \
and kna1.MANDT = :MANDT \
and cov.KUNNR = bg.KUNNR \
and kna1.KUNNR = cov.KUNNR \
and kna1.KUNNR = bg.KUNNR \
and bg.BUYING_GROUP_ID = :KEY  \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.ZZKV_NODE2, kna1.BRSCH, kna1.KATR3, kna1.SORTL \
order by count(distinct KNA1.brsch), count(distinct KNA1.ZZKV_NODE2), count(distinct KNA1.katr3), count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only

AUTO.COV.CALCULATE_COV_ELEMENTS_DACH=select kna1.BRSCH, kna1.KATR3 , kna1.ZZKV_NODE2 , kna1.SORTL, kna1.ZZKV_INAC \
from SAPR3.KNA1EXT cov, SAPR3.BUYING_GROUP_EXT bg, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid  \
where cov.MANDT = bg.MANDT \
and kna1.MANDT = cov.MANDT \
and kna1.MANDT = bg.MANDT \
and kna1.MANDT = :MANDT \
and cov.KUNNR = bg.KUNNR \
and kna1.KUNNR = cov.KUNNR \
and kna1.KUNNR = bg.KUNNR \
and bg.BUYING_GROUP_ID = :KEY  \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.ZZKV_NODE2, kna1.BRSCH, kna1.KATR3, kna1.SORTL, kna1.ZZKV_INAC \
order by count(distinct KNA1.brsch), count(distinct KNA1.ZZKV_NODE2), count(distinct KNA1.katr3), count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only

AUTO.COV.GET_COV_FROM_VAT=select cov.COVTYPE||cov.COVID BASE_COV_ID, cov.DELTYPE||cov.DELID FINAL_COV_ID, kna1.BRSCH, kna1.KATR3 \
from SAPR3.KNA1EXT cov, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid \
where kna1.MANDT = cov.MANDT \
and kna1.MANDT = :MANDT \
and kna1.KUNNR = cov.KUNNR \
and kna1.STCEG = :KEY  \
and kna1.KATR6 = :COUNTRY \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.LOEVM <> 'X' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
and cov.COV_ENDDATE > current date \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.BRSCH, kna1.KATR3 \
order by count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only

AUTO.COV.GET_COV_FROM_TAX_CD1=select cov.COVTYPE||cov.COVID BASE_COV_ID, cov.DELTYPE||cov.DELID FINAL_COV_ID, kna1.BRSCH, kna1.KATR3 \
from SAPR3.KNA1EXT cov, SAPR3.KNA1 kna1, SAPR3.COVERAGE_ID cid \
where kna1.MANDT = cov.MANDT \
and kna1.MANDT = :MANDT \
and kna1.KUNNR = cov.KUNNR \
and kna1.STCD1 like :KEY \
and kna1.KATR6 = :COUNTRY \
and kna1.LOEVM <> 'X' \
and kna1.AUFSD <> '93' \
and cov.COVTYPE = cid.COVTYPE \
and cov.COVID = cid.COVID \
AND nvl(kna1.KATR10,'')<>'GTS' \
and cov.COV_ENDDATE > current date \
and not exists (select 1 \
                from SAPR3.CNTRY_DEFAULT_COVERAGE dflt \
                where dflt.MANDT = kna1.MANDT \
                and dflt.ISO_ISSUING_CNTRY_CD = :ISO_CNTRY \
                and dflt.COVID = cov.COVID \
                and dflt.COVTYPE = cov.COVTYPE) \
group by cov.COVTYPE||cov.COVID, cov.DELTYPE||cov.DELID, kna1.BRSCH, kna1.KATR3 \
order by count(distinct KNA1.zzkv_cusno) desc \
fetch first 5 rows only

AUTO.GBG.COV.KNA1.KONSZ=SELECT COUNT(*) FROM sapr3.BUYING_GROUP_EXT  bg_gp_ext , SAPR3.KNA1 kna1  WHERE  kna1.katr6 = :CNTRY \
AND   kna1.loevm <> 'X' AND kna1.mandt = :MANDT AND kna1.ktokd = 'ZS01' AND kna1.aufsd = '' \
AND kna1.mandt = bg_gp_ext.mandt AND bg_gp_ext.buying_group_id = :BG_ID AND kna1.kunnr = bg_gp_ext.kunnr \
AND KNA1.KONZS = :AFFILIATE
QUERY.BR.CHECK_ACTIVE_CMR=SELECT 1,'' \
FROM SAPR3.KNA1 \
WHERE AUFSD NOT IN ('93','75') \
AND LOEVM<>'X' \
AND KATR6 = '631' \
AND KTOKD='ZS01' \
AND ZZKV_CUSNO=:ZZKV_CUSNO \
AND MANDT=:MANDT 

MAIL.CHECK_PROC_TYPE=select sup.PROCESSING_TYP \
from CREQCMR.SUPP_CNTRY sup, CREQCMR.DATA d \
where sup.CNTRY_CD = d.CMR_ISSUING_CNTRY \
and sup.AUTO_PROC_ENABLED = 'Y' \
and d.REQ_ID = :REQ_ID

ITALY.GET.BILLINGFIELDS=select * from CMRDB2D.CMRTCEXT where rcuxa= :CMR and rcyaa= :CNTRY

ITALY.GET.LEGACY_CUST_RECORDS_FOR_COMPANY=select CUST.* from cmrdb2d.CMRTCUST as CUST, CMRDB2D.CMRTCEXT as CEXT where CUST.RCYAA=CEXT.RCYAA and CUST.RCYAA='758' and CUST.RCUXA=CEXT.RCUXA and CEXT.CODCP=:COMPANY and nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO
ITALY.GET.LEGACY_CEXT_RECORDS_FOR_COMPANY=select CEXT.* from cmrdb2d.CMRTCUST as CUST, CMRDB2D.CMRTCEXT as CEXT where CUST.RCYAA=CEXT.RCYAA and CUST.RCYAA='758' and CUST.RCUXA=CEXT.RCUXA and CEXT.CODCP=:COMPANY and nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO
ITALY.GET.LEGACY_COMPANY_ADDR_RECORD=select * from cmrdb2d.CMRTADDR ADDR, CMRDB2D.CMRTCUST CUST where CUST.RCYAA='758' and CUST.RCYAA=ADDR.RCYAA and CUST.RCUXA=ADDR.RCUXA and CUST.RCUXA=:COMPANY and ADDRUSEC='Y' and nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO
ITALY.GET.BILLING_CHILD_RECORDS=SELECT ext.* FROM CMRDB2D.CMRTCUST cust,CMRDB2D.CMRTCEXT ext WHERE ext.RCYAA=cust.RCYAA AND cust.RCUXA=ext.RCUXA AND cust.RCUXA IN(SELECT DISTINCT RCUXA FROM CMRDB2D.CMRTCEXT WHERE RCYAA= :CNTRY AND CODCC = :CMR) AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO AND  cust.RCYAA= :CNTRY
ITALY.GET.COMPANY_CHILD_RECORDS=SELECT ext.* FROM CMRDB2D.CMRTCUST cust,CMRDB2D.CMRTCEXT ext WHERE ext.RCYAA=cust.RCYAA AND cust.RCUXA=ext.RCUXA AND cust.RCUXA IN(SELECT DISTINCT RCUXA FROM CMRDB2D.CMRTCEXT WHERE RCYAA= :CNTRY AND CODCP = :CMR) AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO AND cust.RCYAA= :CNTRY

LD.UPDT_LEGACY_BILLING_CHILD_RECORDS=UPDATE CMRDB2D.CMRTCEXT SET IVA = :IVA ,CODSSV = :CODSSV WHERE RCYAA= :CNTRY AND CODCC = :CMR

LD.UPDT_LEGACY_COMPANY_CHILD_RECORDS_CUST=UPDATE CMRDB2D.CMRTCUST SET VAT = :VAT ,RENXA = :RENXA WHERE RCYAA= :CNTRY AND RCUXA = :CMR

LD.GET_LEGACY_BILLING_ADDR=SELECT * \
FROM CMRDB2D.CMRTADDR \
WHERE RCYAA = :CNTRY \
AND RCUXA = :CMR \
AND ADDRBILL = 'Y'

LD.UPDT_LEGACY_BILLING_ADDR=UPDATE CMRDB2D.CMRTADDR \
SET ADDRNO = :SEQNO \
WHERE RCYAA = :CNTRY \
AND RCUXA = :CMR \
AND ADDRBILL = 'Y'

LD.MASS_UPDT.GET_EXISTS_FISCAL_CD_FROM_LEGACY=SELECT 1 FROM CMRDB2D.CMRTCEXT \
WHERE RCYAA = :CNTRY AND CODFIS = :FISCOD
LEGACY.CHECK_EXISTS_CMR_NO=SELECT 1 FROM CMRDB2D.CMRTCUST WHERE RCYAA = :COUNTRY and RCUXA = :CMR_NO WITH UR

LD.MASS_UPDT.GET_ALL_CUST_IN_HIERARCHY_IT=SELECT CUST.* \
FROM CMRDB2D.CMRTCUST AS CUST \
JOIN CMRDB2D.CMRTCEXT AS CEXT ON CUST.RCYAA = CEXT.RCYAA AND CUST.RCUXA = CEXT.RCUXA \
WHERE CUST.RCYAA = :CNTRY \
AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO \
AND CEXT.CODCP = :CODCP

LD.MASS_UPDT.GET_ALL_CEXT_IN_HIERARCHY_IT=SELECT CEXT.* \
FROM CMRDB2D.CMRTCEXT AS CEXT, CMRDB2D.CMRTCUST CUST \
WHERE CEXT.RCYAA = :CNTRY \
AND CEXT.RCYAA = CUST.RCYAA \
AND CEXT.RCUXA = CUST.RCUXA \
AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO \
AND CEXT.CODCP = :CODCP

LD.MASS_UPDT.GET_ALL_CUST_IN_BILLING_IT=SELECT CUST.* \
FROM CMRDB2D.CMRTCUST AS CUST \
JOIN CMRDB2D.CMRTCEXT AS CEXT ON CUST.RCYAA = CEXT.RCYAA AND CUST.RCUXA = CEXT.RCUXA \
WHERE CUST.RCYAA = :CNTRY \
AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO \
AND CEXT.CODCC = :CODCC

LD.MASS_UPDT.GET_ALL_CEXT_IN_BILLING_IT=SELECT CEXT.* \
FROM CMRDB2D.CMRTCEXT AS CEXT, CMRDB2D.CMRTCUST CUST \
WHERE CEXT.RCYAA = :CNTRY \
AND CEXT.RCYAA = CUST.RCYAA \
AND CUST.RCUXA = CEXT.RCUXA \
AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO \
AND CEXT.CODCC = :CODCC

LD.MASS_UPDT.GET_ALL_CUST_SAME_CMR=SELECT CUST.* \
FROM CMRDB2D.CMRTCUST AS CUST \
WHERE CUST.RCYAA = :CNTRY \
AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO \
AND CUST.RCUXA = :CMR

LD.MASS_UPDT.GET_ALL_CUSTEXT_SAME_CMR=SELECT CEXT.* \
FROM CMRDB2D.CMRTCEXT AS CEXT \
WHERE CEXT.RCYAA = :CNTRY \
AND CEXT.RCUXA = :CMR

# CreateCMR 2.0 - Phase 2
AUTO_ENGINE.ELEMENTS=select PROCESS_CD, PROCESS_DESC, PROCESS_TYP, NO_IMPORT_INDC \
from CREQCMR.AUTO_ENGINE_ELEMENTS order by case when LEFT(PROCESS_CD,3) = 'GBL' then 0 else 1 end, PROCESS_CD

QUERY.EXCEP.GET_COUNTRIES=select SYS_LOC_CD, SYS_LOC_DESC||' - '||SYS_LOC_CD, SYS_LOC_DESC \
from CMMA.REFT_SYS_LOC_W \
where SYS_LOC_CD in (select CNTRY_CD from CREQCMR.SUPP_CNTRY) \
union \
select CD, TXT||' - '||CMR_ISSUING_CNTRY TXT, TXT \
from CREQCMR.LOV \
where FIELD_ID = '##SysLocExtension' \
and CMR_ISSUING_CNTRY in (select CNTRY_CD from CREQCMR.SUPP_CNTRY) \
order by 3

QUERY.EXCEP.GET_SCENARIOS=select t.CUST_TYP_VAL, t.CUST_TYP_DESC, s.CUST_SUB_TYP_VAL, s.CUST_SUB_TYP_DESC \
from CREQCMR.CUST_TYPE t, CREQCMR.CUST_SUB_TYPE s \
where t.CUST_TYP_VAL = s.CUST_TYP_VAL \
and t.ISSUING_CNTRY = :COUNTRY \
and case \
      when t.ISSUING_CNTRY <> '706' and t.GEO_CD is not null and t.GEO_CD like t.ISSUING_CNTRY||'%' then t.GEO_CD = :GEOCD \
      else t.GEO_CD <> '1234' \
    end \
and s.ISSUING_CNTRY = t.ISSUING_CNTRY \
order by t.CUST_TYP_DESC, s.CUST_SUB_TYP_DESC 

QUERY.EXCEP.GET_SCENARIOS.US=select  g.REFT_USCMR_GRP_KEY, g.USCMR_GRP, s.REFT_USCMR_SGRP_KEY, s.USCMR_SUB_GRP_DESC  \
from CMMA.REFT_USCMR_GRP_G g, CMMA.REFT_USCMR_SGRP_G s \
where g.REFT_USCMR_GRP_KEY = s.REFT_USCMR_GRP_KEY \
and g.REFT_USCMR_GRP_KEY > 0 \
order by g.REFT_USCMR_GRP_KEY, s.REFT_USCMR_SGRP_KEY

QUERY.EXCEP.GET_ADDRESS_TYPES=select CD, TXT from CREQCMR.LOV where FIELD_ID = '##AddressType' and CMR_ISSUING_CNTRY = :COUNTRY order by DISP_ORDER

RECORD.EXCEP_LOAD=select * \
from CREQCMR.SCENARIO_EXCEPTIONS \
where CMR_ISSUING_CNTRY = :COUNTRY \
and SUBREGION_CD = :GEOCD \
order by case when CUST_TYP = '*' then 0 else 1 end, \
  case when CUST_SUB_TYP = '*' then 0 else 1 end, \
  CUST_TYP, CUST_SUB_TYP
  
LD.REACTIVATE_BILLING_CHECK= SELECT 1 FROM CMRDB2D.CMRTCUST CUST WHERE CUST.RCUXA = :CMR_NO AND CUST.RCYAA = :COUNTRY \
AND CUST.STATUS = 'C' 

LD.REACTIVATE_COMPANY_CHECK= SELECT 1 FROM CMRDB2D.CMRTCUST CUST WHERE CUST.RCUXA = :CMR_NO AND CUST.RCYAA = :COUNTRY \
AND CUST.STATUS = 'C' 

LD.DELETE_BILLING_CHECK= SELECT 1 FROM CMRDB2D.CMRTCUST CUST WHERE CUST.RCUXA IN (SELECT DISTINCT RCUXA \
FROM CMRDB2D.CMRTCEXT WHERE RCYAA = :COUNTRY and CODCC = :CMR_NO and RCUXA != :INPUTCMR) AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO AND CUST.RCYAA = :COUNTRY AND CUST.STATUS = 'A' 

LD.DELETE_COMPANY_CHECK= SELECT 1 FROM CMRDB2D.CMRTCUST CUST WHERE CUST.RCUXA IN (SELECT DISTINCT RCUXA \
FROM CMRDB2D.CMRTCEXT WHERE RCYAA = :COUNTRY and CODCP = :CMR_NO and RCUXA != :INPUTCMR) AND CUST.RCYAA = :COUNTRY AND nvl(CUST.SBO,'') NOT IN :COMPANY_CD_SBO AND CUST.STATUS = 'A'  

LD.REACDEL_RESERVED_CMR_CHECK = SELECT 1 FROM CREQCMR.RESERVED_CMR_NOS WHERE CMR_ISSUING_CNTRY= :COUNTRY \
AND CMR_NO= :CMR_NO AND MANDT= :MANDT

QUERY.LD.CHECK_EXISTING_CMR_NO=SELECT 'Y','' from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO
QUERY.LD.CHECK_EXISTING_CMR_NO_RESERVED = SELECT 'Y','' FROM CREQCMR.RESERVED_CMR_NOS WHERE CMR_ISSUING_CNTRY= :COUNTRY \
AND CMR_NO= :CMR_NO AND MANDT= :MANDT
QUERY.LD.CHECK_RDC_PROCESSING_STATUS = SELECT RDC_PROCESSING_STATUS,'' FROM CREQCMR.ADMIN WHERE REQ_ID = :REQ_ID

LD.GET.HW_MASTER_INSTALL_FLAG=SELECT * FROM SAPR3.KUNNR_EXT \
WHERE MANDT = :MANDT \
AND KUNNR  = :KUNNR

AUTO.GET.DEFAULT_CLUSTER=SELECT AP_CUST_CLUSTER_ID,'' FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY = :ISSUING_CNTRY AND DEFAULT_INDC = 'Y'
AUTO.GET_LAND_CNTRY=select LAND_CNTRY, '' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZP01'

AUTO_UPDATE_EXT_FIND=select EXT_WALLET_ID,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'PG01'

AUTO_UPDATE_EXT_CHECK=SELECT * FROM CREQCMR.ADDR AS ADR where nvl(ADR.IMPORT_IND,'N') ='N' and ADR.ADDR_TYPE = 'PG01' AND ADR.EXT_WALLET_ID = :EXT_WALLET_ID AND REQ_ID <> :REQ_ID AND REQ_ID < :REQ_ID

QUERY.QUICK.GET_DEFAULT_COUNTRY=select DEFAULT_LANDED_CNTRY, '' from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY  
QUERY.QUICK.CHECK_SUBREGION=select CD, '' from CREQCMR.LOV where CMR_ISSUING_CNTRY = :CNTRY and FIELD_ID = '##CountrySubRegion' and CD = :CD
QUERY.QUICK.CHECK_SUBREGION_DEFLT=select CD, '' from CREQCMR.LOV where CMR_ISSUING_CNTRY = :CNTRY and FIELD_ID = '##CountrySubRegion' and CD = :CNTRY

AUTO.VALIDATE_CLUSTER_SALESMAN=select REP_TEAM_MEMBER_NO from creqcmr.REP_TEAM where ISSUING_CNTRY= :ISSUING_CNTRY and REP_TEAM_CD= :REP_TEAM_CD

QUERY.VALIDATOR.BILLING.CROSSBORDERIT=select LAND_CNTRY, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZP01'

QUERY.GET.CUSTLANGCD.ZS01=SELECT CUST_LANG_CD,'' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'

QUERY.CODE.ISIC.GET_ALL=select isic.REFT_UNSIC_KEY, isic.REFT_UNSIC_CD, isic.REFT_UNSIC_ABBREV_DESC, indcl.REFT_INDCL_KEY, indcl.INDCL_CD, indcl.INDCL_ABBREV_DESC, isic.GEO_CD \
from CMMA.REFT_UNSIC_W isic, CMMA.REFT_INDCL_W indcl \
where isic.REFT_INDCL_KEY = indcl.REFT_INDCL_KEY \
and GEO_CD = :GEO \
order by isic.REFT_UNSIC_CD

QUERY.CODE.ISIC.GET_SUBIND=select indcl.REFT_INDCL_KEY, indcl.INDCL_CD, indcl.INDCL_ABBREV_DESC \
from CMMA.REFT_INDCL_W indcl order by indcl.INDCL_CD

CODE.ISIC.GET_MAX_KEY=select CAST(max(REFT_UNSIC_KEY) AS INTEGER) from CMMA.REFT_UNSIC_W

QUERY.GET_STREET_LENGTH_AU=select ADDR_TXT, ADDR_TXT_2 from CREQCMR.ADDR where REQ_ID = :REQID

QUERY.GET_TS_BY_KUNNR=SELECT * FROM SAPR3.TRANS_SERVICE WHERE MPP_NUM = :KUNNR
QUERY.GETUPTSRDC=SELECT MAX(SHAD_UPDATE_TS),'' FROM sapr3.kna1 WHERE KATR6= :COUNTRY AND ZZKV_CUSNO= :CMRNO AND MANDT= :MANDT
QUERY.GETUPTSADDR=SELECT MAX(RDC_LAST_UPDT_DT),'' FROM CREQCMR.ADDR WHERE REQ_ID= :REQ_ID

#GERMANY AUTOMATION ENGINE CREATECMR 2.0
DE.CHECK_DEPARTMENT=select CD from creqcmr.LOV where CMR_ISSUING_CNTRY='724' and FIELD_ID='##GermanyInternalDepartment' and CD=:CD

#UKI AUTOMATION ENGINE CREATECMR 2.0
UKI.CHECK_DEPARTMENT=select CD from creqcmr.LOV where CMR_ISSUING_CNTRY=:CNTRY and FIELD_ID='##UKIInternalDepartment' and CD=:CD

DNB.GET_CURR_SOLD_TO=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01' order by ADDR_SEQ
DNB.GET_CURR_SOLD_TO_RDC=select * from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01' order by ADDR_SEQ
DNB.GET_CURR_SOLD_TO_INTLADDR=SELECT * FROM CREQCMR.INTL_ADDR WHERE REQ_ID= :REQ_ID AND ADDR_TYPE = 'ZS01' ORDER BY ADDR_SEQ
GET.KNA1_FOR_SINGLE_REACTIVATION=SELECT * \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND nvl(KATR10,'')<>'GTS' \
AND KTOKD='ZS01' \
AND (LOEVM='X' OR AUFSD='93')

FIND_SINGLE_REACT_RECORDS_RDC=SELECT * FROM SAPR3.KNA1 \
WHERE KATR6 = :COUNTRY \
AND MANDT = :MANDT \
AND ZZKV_CUSNO =:CMR_NO
FR.GET_UNIQUE_ADDR_COUNT=SELECT COUNT(*) FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID\
AND CUST_NM1 = :CUST_NM1 AND ADDR_TXT = :ADDR_TXT AND CITY1 = :CITY1

DE.AUTO.GETISUCTC_FOR_COVERAGE = select isu_cd, client_tier from creqcmr.data where SEARCH_TERM=:SEARCH_TERM group by ISU_CD, CLIENT_TIER order by count(REQ_ID) desc

QUERY.COUNT_NON_SOLD_TO_ADDR=select count(*), '' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE!='ZS01'

QUERY.AUTO.SKIP_VERIFICATION_INDC= select nvl(SKIP_VERIFICATION_INDC,''),'' from CREQCMR.SCENARIO_EXCEPTIONS where CMR_ISSUING_CNTRY =:CNTRY and CUST_TYP = :CUST_TYP and CUST_SUB_TYP = case when CMR_ISSUING_CNTRY='897' and CUST_SUB_TYP<>'*' then (select REFT_USCMR_SGRP_KEY||'' from CMMA.REFT_USCMR_SGRP_G where USCMR_SUB_GROUP=:CUST_SUB_TYP) else :CUST_SUB_TYP end AND SUBREGION_CD=:SUBREGION_CD

#For  TR
TR.GETADRNR=SELECT KUNNR,ADRNR \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND KTOKD = :ADDR_TYPE \
AND ZZKV_SEQNO = :ADDR_SEQ \
AND (AUFSD <> '93' OR LOEVM <> 'X' OR AUFSD <> '90') \
FOR READ ONLY \
WITH UR

TR.GETINSTALLING=select * from CREQCMR.ADDR where ADDR_TYPE = 'ZS01' and REQ_ID = :REQ_ID
TR.GETLEGACYMAIL=SELECT * FROM CMRDB2D.CMRTADDR WHERE RCYAA = '862' and ADDRNO = '00001' and RCUXA =:CMR_NO
TR.UPDATEDNBADDR=update CREQCMR.ADDR set ADDR_SEQ = :ADDR_SEQ where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'
TR.ADDR.UPDATE.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID and ADDR_SEQ in ('00005') and SAP_NO is null
TR.ADDR.UPDATE.DPLCHECK=update CREQCMR.ADDR set DPL_CHK_RESULT = 'Y' where REQ_ID = :REQ_ID and ADDR_SEQ in ('00005') and SAP_NO is null
TR.ADDR.UPDATE.IMPORTIND_ZD=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID and ADDR_SEQ in ('00004') and SAP_NO is null
TR.ADDR.UPDATE.DPLCHECK_ZD=update CREQCMR.ADDR set DPL_CHK_RESULT = 'Y' where REQ_ID = :REQ_ID and ADDR_SEQ in ('00004') and SAP_NO is null
TR.UPDATE.ABBNAME=update CREQCMR.DATA set ABBREV_NM = :ABBREV_NM where REQ_ID = :REQ_ID

GET.TR_SADR_BY_ID=SELECT S.* \
FROM SAPR3.SADR S \
WHERE ADRNR = :ADRNR \
AND MANDT = :MANDT \
AND NATIO = '4' \
FOR READ ONLY \
WITH UR

LEGACYD.CMRTCEXT_CHECK_COMPANY=SELECT RCYAA, '' FROM CMRDB2D.CMRTCEXT WHERE RCYAA= :COUNTRY AND RCUXA= :CMR_NO AND RCYAA=CODCC=CODCP

TR.GETZD01COUNT=select count(*),'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZD01'
TR.GETZI01COUNT=select count(*),'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZI01'
TR.GETSEQFORBILLING=select INTEGER(max(INTEGER(ADDR_SEQ))),'' from CREQCMR.ADDR WHERE REQ_ID = :REQ_ID
TR.MASS.GETSEQFORBILLING=select INTEGER(max(INTEGER(ADDRNO))),'' from cmrdb2d.CMRTADDR WHERE rcuxa = :CMR_NUM and rcyaa=:CNTRY
TR.GETRDCZI01COUNT=SELECT count(*),'' FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :CMR_NO AND AUFSD = '90' AND KTOKD = :ADDR_TYPE
TR.GET.ZS01SEQ=SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND KTOKD = 'ZS01' AND ZZKV_CUSNO = :CMR_NO AND LOEVM <> 'X' AND AUFSD <> '93'
TR.GET.ZS01UPDATEINIT=SELECT CHANGED_INDC FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZS01'
TR.GET.ZI01UPDATEINIT=SELECT CHANGED_INDC FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZI01'
TR.GET.ZD01UPDATEINIT=SELECT CHANGED_INDC FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZD01'
TR.GET.ZP01UPDATEINIT=SELECT CHANGED_INDC FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZP01'
TR.ADDR.UPDATE.ZI01SHARE.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID and ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZI01'
TR.ADDR.UPDATE.ZI01SHARE.SEQ=update CREQCMR.ADDR set ADDR_SEQ = '00005' where REQ_ID = :REQ_ID and ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZI01'
TR.ADDR.UPDATE.ZD01SHARE.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID and ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZD01'
TR.ADDR.UPDATE.ZD01SHARE.SEQ=update CREQCMR.ADDR set ADDR_SEQ = '00004' where REQ_ID = :REQ_ID and ADDR_SEQ = :SEQ AND ADDR_TYPE = 'ZD01'
TR.GET.SHAREALLADDRSEQINLEGACY=SELECT ADDRNO FROM  CMRDB2D.CMRTADDR WHERE RCUXA = :CMR_NO AND RCYAA = :KATR6 AND ADDRMAIL = 'Y' AND ADDRBILL = 'Y' AND ADDRINST = 'Y' AND ADDRSHIP = 'Y' AND ADDREPL = 'Y'
TR.ADDR.UPDATE.ZP01SHARE.SEQ2=update CREQCMR.ADDR set ADDR_SEQ = '00002' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZP01'
TR.ADDR.UPDATE.ZP01SHARE.SEQ1=update CREQCMR.ADDR set ADDR_SEQ = '00001' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZP01'
TR.ADDR.UPDATE.ZP01SHARE.N.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZP01'
TR.ADDR.UPDATE.ZP01SHARE.Y.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'Y' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZP01'
TR.GET_BILL_SEQ_FROM_LEGACY=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRBILL = 'Y'
TR.ADDR.UPDATE.ZP01SHARE.Y.CHANGEINCD=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'Y' WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZP01'
TR.ADDR.UPDATE.ZS01SHARE.Y.CHANGEINCD=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'Y' WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZS01'
TR.GET_MAIL_SEQ_FROM_LEGACY=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRMAIL = 'Y'
LOCK.US.DATA=update CREQCMR.ADMIN set LOCK_IND = 'Y' where REQ_ID = :REQ_ID

TR.MASS.GETMAXSEQBILLING= select * from cmrdb2d.CMRTADDR where rcuxa = :CMR_NUM and rcyaa= :CNTRY and addrno in ( \
select INTEGER(max(INTEGER(ADDRNO))) from cmrdb2d.cmrtaddr where rcuxa = :CMR_NUM and rcyaa= :CNTRY)

AUTO.US.GET_LAST_UPD_TS_USCMR=select VARCHAR_FORMAT(D_CHANGE, 'YYYY-MM-DD'),'' from {SCHEMA}.A11T0CUS where I_CUST_ENTITY = :CMR_NO

AUTO.US.GET_LAST_UPD_TS_RDC=select VARCHAR_FORMAT(SHAD_UPDATE_TS,'YYYY-MM-DD') from sapr3.KNA1 where ZZKV_CUSNO=:ZZKV_CUSNO and MANDT=:MANDT and KATR6=:KATR6 and ktokd='ZS01'

AUTO.GET_CODES_USCMR=select e.I_ENT_TYPE I_ENT_TYPE, c.I_BP_ACCOUNT_TYPE I_BP_ACCOUNT_TYPE, c.C_LEASING_CO C_LEASING_CO, c.C_GEM C_GEM, c.C_COM_RESTRCT_CODE C_COM_RESTRCT_CODE, c.I_CO I_CO, \
c.I_CUST_OFF_5 I_CUST_OFF_5, c.I_CUST_OFF_3 I_CUST_OFF_3, c.i_cust_off_1 I_CUST_OFF_1, c.i_cust_off_2 I_CUST_OFF_2, c.i_cust_off_2 I_CUST_OFF_9, c.f_misc_billing F_MISC_BILLING, c.c_sic_men  C_SIC_MEN \
from {SCHEMA}.A11T0CUS c, {SCHEMA}.A11T0COM co, {SCHEMA}.A11T0ENT e \
where co.I_ENT = e.I_ENT \
and co.I_CO = c.I_CO \
and c.I_CUST_ENTITY = :CMR_NO WITH UR

AUTO.GET_US_RESTRICT_TO = SELECT FIELD_VALUE FROM SAPR3.ADDLCTRYDATA WHERE FIELD_NAME = 'US_RESTRICT_TO' AND KUNNR IN (SELECT KUNNR FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :CMR_NO AND KATR6 = '897' AND LOEVM != 'X' ) AND MANDT = :MANDT
AUTO.GET_CGEM=SELECT GEM FROM (select k.ZZKV_CUSNO, k.NAME1, k.KTOKD, k.KUKLA, k.BRAN1, k.STCD2, nvl(g.GEM_CD,'1') AS GEM \
from SAPR3.KNA1 k \
left outer join SAPR3.US_GEM_TRANS g \
  on k.KUKLA = g.KUKLA \
  and left(k.BRAN1,1) = g.ZZKV_IND \
  and ( (k.STCD1 = '' and g.TAX_CUST_TYP = 'A') or left(k.STCD1,1) = g.TAX_CUST_TYP) \
where k.MANDT = :MANDT \
and k.KATR6 = '897') WHERE ZZKV_CUSNO = :CMR_NO
AUTO.GET_ENTTYPE=select ENT_TYPE_CODE FROM SAPR3.US_ENTERPRISE WHERE MANDT = :MANDT AND ENT_NO = :ENT_NO

AUTO.FR.COV.SORTL=select kna1.SORTL \
from SAPR3.KNA1 kna1, SAPR3.KNA1EXT ext \
where kna1.MANDT = :MANDT \
and kna1.KUNNR = ext.KUNNR \
and kna1.MANDT = ext.MANDT \
and (ext.COVTYPE||ext.COVID  = :COVID or ext.DELTYPE||ext.DELID = :COVID) \
group by kna1.SORTL \
order by count(distinct kna1.ZZKV_CUSNO ) desc


AUTO.BELUX.COV.SORTL=select kna1.SORTL \
from SAPR3.KNA1 kna1, SAPR3.KNA1EXT ext  \
where kna1.MANDT = :MANDT \
and kna1.KUNNR = ext.KUNNR \
and kna1.MANDT = ext.MANDT \
and kna1.konzs = :KONZS \
and LAND1 = :LAND1 \
and (ext.COVTYPE||ext.COVID  = :COVID) \
group by kna1.SORTL \
order by count(distinct kna1.ZZKV_CUSNO ) desc

AUTO.NL.COV.SORTL=select kna1.SORTL \
from SAPR3.KNA1 kna1, SAPR3.KNA1EXT ext  \
where kna1.MANDT = :MANDT \
and kna1.KUNNR = ext.KUNNR \
and kna1.MANDT = ext.MANDT \
and kna1.katr6 = :KATR6 \
and (ext.COVTYPE||ext.COVID  = :COVID) \
group by kna1.SORTL \
order by count(distinct kna1.ZZKV_CUSNO ) desc

AUTO.DE.CHECK_IF_ADDRESS_EXIST=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ and CUST_NM1= :NAME1 \
and LAND_CNTRY = :LAND_CNTRY and CITY1= :CITY and TRANSPORT_ZONE = :TRANSPORT_ZONE  

AUTO.CHECK_IF_ADDRESS_EXIST=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and (ADDR_TYPE != :ADDR_TYPE or ADDR_SEQ != :ADDR_SEQ) and lower(CUST_NM1) like lower(:NAME1) \
and LAND_CNTRY = :LAND_CNTRY and lower(CITY1) like lower(:CITY) 

AUTO.UKI.CHECK_IF_ADDRESS_EXIST=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ and lower(CUST_NM1) like lower(:NAME1) \
and LAND_CNTRY = :LAND_CNTRY and lower(CITY1) like lower(:CITY) and ADDR_TYPE= :ADDR_TYPE

AUTO.GET_MKTG_AR_DEPT_USCMR=SELECT cus.I_CUST_OFF_3,''  FROM  {SCHEMA}.A11T0CUS cus, {SCHEMA}.A11T0COM com \
WHERE cus.I_CUST_OFF_3 IN ('1QP', 'OCA', 'WYK', 'WYL', 'WYR', 'YUC', 'SD4', 'SD5', 'TWN', 'TWS', 'JNI', 'JNC', 'JNE', 'JIQ', 'JJT', 'DLF', 'DLH', 'DLJ','1T8') \
and com.I_ENT=:ENTERPRISE \
and cus.I_CO = com.I_CO \
GROUP BY cus.I_CUST_OFF_3 \
ORDER BY count(*) DESC WITH UR
GET_SCENARIO_DESC_FR = SELECT CUST_SUB_TYP_DESC FROM CREQCMR.CUST_SUB_TYPE WHERE ISSUING_CNTRY = '706' AND CUST_SUB_TYP_VAL = :CUST_SUB_TYP_VAL AND CUST_TYP_VAL = :CUST_TYP_VAL
GET_SCENARIO_DESC_US = select USCMR_SUB_GRP_DESC from cmma.REFT_USCMR_SGRP_G where USCMR_SUB_GROUP=:SUB_SCENARIO

AUTO.CHK_CMDE_USER=select PROC_CENTER_NM from CREQCMR.USER_PREF where REQUESTER_ID = :REQUESTER_ID
AUTO.GET_STATE_DESCRIP = select STATE_PROV_DESC from CMMA.REFT_STATE_PROV_W where STATE_PROV_CD = :STATE_PROV_CD and REFT_COUNTRY_KEY = '106'

QUERY.GETZS01OLDCUSTNAME=select CUST_NM1,'' from CREQCMR.ADDR_RDC where REQ_ID=:REQ_ID and ADDR_TYPE='ZS01'

# SWISS, PT_Legacy
QUERY.ADDR.GET.POST_CD.BY_REQID=select POST_CD,LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.ADDR.GET.VAT_REQID=select VAT,'' from CREQCMR.DATA where REQ_ID = :REQ_ID

#CEE
CEE.GETADRNR=SELECT KUNNR,ADRNR \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND KTOKD = :ADDR_TYPE \
AND ZZKV_SEQNO = :ADDR_SEQ \
AND (AUFSD <> '93' OR LOEVM <> 'X' OR AUFSD <> '90') \
FOR READ ONLY \
WITH UR
GET.CEE_SADR_BY_ID=SELECT S.* \
FROM SAPR3.SADR S \
WHERE ADRNR = :ADRNR \
AND MANDT = :MANDT \
FOR READ ONLY \
WITH UR
CEE.GETINSTALLING=select * from CREQCMR.ADDR where ADDR_TYPE = 'ZS01' and REQ_ID = :REQ_ID
CEE.GETADDRSEQ.MAX=select MAX(ZZKV_SEQNO)||'','DUMMY' from sapr3.kna1 where MANDT= :MANDT and KATR6 = :KATR6 and ZZKV_CUSNO =:ZZKV_CUSNO and LOEVM <>'X' and ZZKV_SEQNO < 500 AND ZZKV_SEQNO <>'' AND length(trim(translate(ZZKV_SEQNO,'','0123456789')))=0
CEE.GETSOLDTOSEQFROMRDC=SELECT ZZKV_SEQNO from sapr3.kna1 where MANDT= :MANDT and KATR6 = :KATR6 and ZZKV_CUSNO =:ZZKV_CUSNO AND KTOKD = 'ZS01' AND AUFSD NOT IN ('90','93')
CEE.GETADDRSEQ.MAX1=select MAX(DISTINCT(cast(substring(ZZKV_SEQNO,0,5) AS INT))) ||'','DUMMY' from sapr3.kna1 where MANDT= :MANDT and KATR6 = :KATR6 and ZZKV_CUSNO =:ZZKV_CUSNO and LOEVM <>'X' and ZZKV_SEQNO < 500 AND ZZKV_SEQNO <>'' AND length(trim(translate(ZZKV_SEQNO,'','0123456789')))=0
CEE.CHECKDUPCMR=SELECT MANDT,KATR6,ZZKV_CUSNO FROM SAPR3.KNA1 WHERE MANDT= :MANDT AND KATR6 = :KATR6 AND ZZKV_CUSNO = :CMRNO AND KTOKD = 'ZS01' AND AUFSD = ''
CEE.GET_STKZN_FROM_DATA_RDC=SELECT STKZN FROM SAPR3.KNA1 WHERE KUNNR = :KUNNR AND MANDT = :MANDT
CEE.GET_G_SEQ_FROM_LEGACY=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRUSEG = 'Y'
CEE.GET_ZS01_SEQ_FROM_LEGACY=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRINST = 'Y'
CEE.GET_G_ADRLN6_FROM_LEGACY=SELECT ADDRL6, ADDRL4 FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRUSEG = 'Y'
CEE.GET_TAXOFFICE=SELECT FIELD_VALUE FROM SAPR3.ADDLCTRYDATA WHERE MANDT = :MANDT AND KUNNR = :KUNNR AND FIELD_NAME = 'TAX_JURIS_CD'
CEE.GET.KNVP.PARVW=SELECT PARVW,MANDT,KUNNR FROM SAPR3.KNVP WHERE KUNNR = :KUNNR AND MANDT = :MANDT AND PARVW = 'ZP'
CEE.ADDR.CHANGE.ZP02NEW=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZP02'
CEE.GET.ZP02UPDATEINIT=SELECT CHANGED_INDC FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZP02'
CEE.ADDR.CHANGE.ZS01UPDATE=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'Y' WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZS01'
CEE.ADDR.CHANGE.ZP01UPDATE=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'Y' WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZP01'
US.SETCMRNO=UPDATE CREQCMR.MASS_CREATE_DATA set CMR_NO =:CMR_NO WHERE PAR_REQ_ID=:REQ_ID AND SEQ_NO = :SEQ_NO
CEE.GET_SOLDTO_SEQ_FROM_LEGACY=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRINST = 'Y'
CEE.ISSHAREZP01=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDRBILL = 'Y'
CEE.ISSHAREZS02=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDRMAIL = 'Y'
CEE.ISSHAREZD01=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDRSHIP = 'Y'
CEE.ISSHAREZI01=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDREPL = 'Y'
CEE.ADDR.UPDATE.ZP01SHARE.N.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZP01' AND ADDR_SEQ NOT IN (SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO )
CEE.ADDR.UPDATE.ZS02SHARE.N.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS02' AND ADDR_SEQ NOT IN (SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO )
CEE.ADDR.UPDATE.ZD01SHARE.N.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZD01' AND ADDR_SEQ NOT IN (SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO )
CEE.ADDR.UPDATE.ZI01SHARE.N.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'N' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZI01' AND ADDR_SEQ NOT IN (SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO )
CEE.GETLEGACYGADDR=SELECT * FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA and RCUXA =:CMR_NO AND ADDRUSEG = 'Y'
CEE.ADDR.UPDATE.ZS01SHARE.Y.CHANGEINCD=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'Y' WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZS01'
CEE.GETADDRSEQ.MAX.FROM.LEGACY=select MAX(ADDRNO)||'','DUMMY' from CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA and ADDRNO < 500
ANZ.ADDR.PAYGOSAPNO=UPDATE CREQCMR.ADDR SET SAP_NO=:SAP_NO, IERP_SITE_PRTY_ID=:IERP_SITE_PRTY_ID WHERE REQ_ID=:REQ_ID AND ADDR_TYPE='PG01' AND ADDR_SEQ='200'
ANZ.ADDR.PAYGO.U=update CREQCMR.ADDR set ADDR_SEQ = '200' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'PG01' AND ADDR_SEQ = '1'
ANZ.GET.EXTWALLET_BYKUNNR=select EXT_WALLET_ID, '' from SAPR3.KUNNR_EXT where KUNNR = :KUNNR AND MANDT = :MANDT
ANZ.ADDR.SAPNO_BYEXTWALLET.U=UPDATE CREQCMR.ADDR SET SAP_NO=:SAP_NO, IERP_SITE_PRTY_ID=:IERP_SITE_PRTY_ID WHERE REQ_ID = :REQ_ID and ADDR_TYPE = 'PG01' AND EXT_WALLET_ID = :EXT_WALLET_ID 
ANZ.GET.PAYGOSEQ_BYKUNNR=select ZZKV_SEQNO, '' from SAPR3.kna1 where KUNNR = :KUNNR AND MANDT = :MANDT
ANZ.ADDR.SEQNO_BYKUNNR.U=UPDATE CREQCMR.ADDR SET ADDR_SEQ=:ADDR_SEQ  WHERE REQ_ID = :REQ_ID and ADDR_TYPE = 'PG01' AND SAP_NO = :SAP_NO
CEE.GET.ZP02IMPORTINIT=SELECT IMPORT_IND FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = 'ZP02'
ANZ.ADDR.PAYGO.U=update CREQCMR.ADDR set ADDR_SEQ = '200' where REQ_ID = :REQ_ID AND ADDR_TYPE = 'PG01' AND ADDR_SEQ = '1'
ANZ.GET.EXTWALLET_BYKUNNR=select EXT_WALLET_ID, '' from SAPR3.KUNNR_EXT where KUNNR = :KUNNR AND MANDT = :MANDT
ANZ.ADDR.SAPNO_BYEXTWALLET.U=UPDATE CREQCMR.ADDR SET SAP_NO=:SAP_NO, IERP_SITE_PRTY_ID=:IERP_SITE_PRTY_ID WHERE REQ_ID = :REQ_ID and ADDR_TYPE = 'PG01' AND EXT_WALLET_ID = :EXT_WALLET_ID 
ANZ.GET.PAYGOSEQ_BYKUNNR=select ZZKV_SEQNO, '' from SAPR3.kna1 where KUNNR = :KUNNR AND MANDT = :MANDT
ANZ.ADDR.SEQNO_BYKUNNR.U=UPDATE CREQCMR.ADDR SET ADDR_SEQ=:ADDR_SEQ  WHERE REQ_ID = :REQ_ID and ADDR_TYPE = 'PG01' AND SAP_NO = :SAP_NO

# BENELUX Legacy sunset
BENELUX.GET_CHECK_REALCTY=select REALCTY from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO
BENELUX.GET_ADDR_BYID=SELECT * FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID
QUERY.BENELUX.CHECK_RDC_ZP01=SELECT 1,'' FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 and MANDT = :MANDT AND ZZKV_SEQNO=:ZZKV_SEQNO AND ZZKV_CUSNO = :ZZKV_CUSNO AND KTOKD=:KTOKD
QUERY.BENELUX.CHECK_REALCTY=select REALCTY,'' from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO
BENELUX.GET_RDC_ZS01=SELECT AUFSD, LOEVM, ZZKV_CUSNO,ZZKV_SEQNO,KTOKD,MANDT  FROM SAPR3.KNA1 WHERE KATR6 =:CNTRY AND ZZKV_CUSNO=:CMRNO AND MANDT=:MANDT AND KTOKD=:ADDRTYPE
WW.GET_RDC_AUFSD=SELECT AUFSD FROM sapr3.kna1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT and ZZKV_CUSNO = :ZZKV_CUSNO and KTOKD = :KTOKD

#CMR-4606 add to get RU Duplicat CMR field
CEE.GET_DUPCMR_FIELD_VALUE=SELECT MANDT,KATR6,ZZKV_CUSNO,KATR3,BRSCH,ZZKV_NODE1,ZZKV_NODE2, SORTL FROM SAPR3.KNA1 \
WHERE MANDT= :MANDT AND KATR6 = :KATR6 AND ZZKV_CUSNO = :CMRNO AND KTOKD = 'ZS01' AND AUFSD <> '93' AND TELX1 like '% CIS'

QUERY.GET.ISIC_OLD_BY_REQID=SELECT ISIC_CD, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID

AUTO.US.CHECK_CMDE=select 1 from CMMA.USER_ROLES r, CREQCMR.USER_PREF p where r.USER_ID=p.REQUESTER_ID and r.USER_ID=:EMAIL and p.PROC_CENTER_NM='Kuala Lumpur' and r.ROLE_ID='PROCESSOR'


AUTO.US.CHECK_CSP_VALID= \
select \
  kna1.katr6, \
  kna1.zzkv_cusno, \
  case when ( \
    substr(kna1.erdat, 1, 4) || '-' || substr(kna1.erdat, 5, 2) || '-' || substr(kna1.erdat, 7, 2) \
  ) >= SUBSTR(CURRENT TIMESTAMP - 30 days, 1, 10) then 'Ok' when log.field = 'CAP_IND' \
  and log.new = 'Y' \
  AND SUBSTR(log.CHGTS, 1, 10) >= SUBSTR(CURRENT TIMESTAMP - 30 days, 1, 10) then 'Ok' else 'Reject' end as Creation_CAP_Changed, \
  case when sic.brsch = '5B' then 'Ok' else 'Reject' end as Sic_validation, \
  case when f.revenue = 0 then 'Ok' else 'Reject' end as Revenue \
from \
  sapr3.kna1 kna1 \
  left outer join sapr3.CHANGELOG log on kna1.mandt = log.mandt \
  and kna1.kunnr = log.kunnr \
  left outer join sapr3.zzkv_sic sic on kna1.mandt = sic.mandt \
  and kna1.zzkv_sic = sic.zzkv_sic \
  left outer join ( \
    select \
      kna1.zzkv_cusno, \
      sum \
        (case when rev.COMP_REVENUE_SUM is null then 0 else rev.COMP_REVENUE_SUM end) revenue \
    from \
      rdc_sapr3.kna1 kna1 \
      left outer join ( \
        select \
          REV.SAP_CUSTOMER_NO KUNNR, \
          REV.REV_TOTAL COMP_REVENUE_SUM \
        from \
          ( \
            select \
              SAP_CUSTOMER_NO, \
              sum ( \
                nvl(REV_CY, 0) + nvl(REV_CY_M1,0) \
                ) REV_TOTAL \
            from \
              IZ_CLIENT.AIW_SAP_ANNUAL_REV \
            group by \
              SAP_CUSTOMER_NO \
          ) REV \
      ) rev on kna1.kunnr = rev.Kunnr \
    where \
      kna1.katr6 = '897' \
      and zzkv_cusno = :CMR_NO \
    group by \
      kna1.zzkv_cusno \
  ) f on kna1.zzkv_cusno = f.zzkv_cusno \
  and kna1.katr6 = '897' \
where \
  kna1.katr6 = '897' \
  and kna1.zzkv_cusno = :CMR_NO



AUTO.US.GET_CSP_AFFILIATE= \
Select a.katr6,g.gu_duns_no,e.cap_ind,a.konzs,a.zzkv_node2,a.zzkv_node1, \
       a.brsch,a.katr3,a.zzkv_inac,count (distinct a.zzkv_cusno) count_cmr,sum(nvl(h.revenue,0)) revenue \
from rdc_sapr3.kna1 a \
LEFT OUTER JOIN rdc_SAPR3.KUNNR_EXT E \
  ON A.KUNNR = E.KUNNR \
  and e.mandt = '100' \
LEFT OUTER JOIN rdc_SAPR3.KDUNS_NEW F \
  ON A.KUNNR = F.KUNNR \
  and f.mandt= '100' \
LEFT OUTER JOIN rdc_SAPR3.KDUNS_FAMILY G \
  ON G.MANDT = F.MANDT \
  AND G.ENTITY_ID = F.ENTITY_ID \
  AND G.ENTITY_TYPE = F.ENTITY_TYPE \
left outer join (select REV.SAP_CUSTOMER_NO KUNNR, REV.REV_TOTAL REVENUE \
from (select SAP_CUSTOMER_NO, sum(nvl(REV_CY,0) + nvl(REV_CY_M1,0)) REV_TOTAL \
from IZ_CLIENT.AIW_SAP_ANNUAL_REV \
group by SAP_CUSTOMER_NO) REV) h on h.kunnr = a.kunnr \
right outer join ( \
  select a.katr6,a.zzkv_cusno,g.gu_duns_no,e.cap_ind,a.konzs,a.zzkv_node2,a.zzkv_node1,a.brsch,a.katr3,a.zzkv_inac \
  from rdc_sapr3.kna1 a \
  LEFT OUTER JOIN rdc_SAPR3.KUNNR_EXT E \
    ON  A.KUNNR = E.KUNNR and e.mandt ='100' \
  LEFT OUTER JOIN rdc_SAPR3.KDUNS_NEW F \
    ON  A.KUNNR = F.KUNNR and f.mandt= '100' \
  LEFT OUTER JOIN rdc_SAPR3.KDUNS_FAMILY G \
    ON G.MANDT = F.MANDT \
    AND G.ENTITY_ID = F.ENTITY_ID \
    AND G.ENTITY_TYPE = F.ENTITY_TYPE \
  where katr6 = '897' \
  and a.zzkv_cusno = :CMR_NO \
  and e.cov_elg_ind = 'Y') l \
  on l.katr6 = a.katr6 \
  and l.gu_duns_no = g.gu_duns_no \
where a.katr6 = '897' \
and e.cov_elg_ind = 'Y' \
and e.cap_ind = 'Y' \
and a.zzkv_cusno <> :CMR_NO \
AND nvl(a.KATR10,'')<>'GTS' \
group by a.katr6,g.gu_duns_no,e.cap_ind,a.konzs,a.zzkv_node2,a.zzkv_node1,a.brsch,a.katr3,a.zzkv_inac \
order by revenue desc,count_cmr desc

AUTO.US.GET_CMR_REVENUE= \
select a.zzkv_cusno,sum(nvl(r.revenue,0)) revenue \
from rdc_sapr3.kna1 a \
left outer join (select REV.SAP_CUSTOMER_NO KUNNR, REV.REV_TOTAL revenue \
from (select SAP_CUSTOMER_NO, sum(nvl(REV_CY,0) + nvl(REV_CY_M1,0)) REV_TOTAL \
from IZ_CLIENT.AIW_SAP_ANNUAL_REV \
group by SAP_CUSTOMER_NO) REV) r on \
a.kunnr = r.kunnr \
where a.katr6 ='897' \
AND nvl(a.KATR10,'')<>'GTS' \
and zzkv_cusno = :CMR_NO \
group by zzkv_cusno


AUTO.US.AFF_ENT_DUNS_CHECK= \
Select g.gu_duns_no, bg.GLOBAL_BUYING_GROUP_ID, count(distinct a.zzkv_cusno) count_cmr \
from sapr3.kna1 a, \
SAPR3.BUYING_GROUP_EXT BX, \
sapr3.BUYING_GROUP bg, \
SAPR3.KDUNS_NEW F, \
SAPR3.KDUNS_FAMILY G \
right outer join ( \
  select a.katr6,g.gu_duns_no \
  from sapr3.kna1 a \
  LEFT OUTER JOIN SAPR3.KDUNS_NEW F \
    ON  A.KUNNR = F.KUNNR and f.mandt= :MANDT \
  LEFT OUTER JOIN SAPR3.KDUNS_FAMILY G \
    ON G.MANDT = F.MANDT \
    AND G.ENTITY_ID = F.ENTITY_ID \
    AND G.ENTITY_TYPE = F.ENTITY_TYPE \
  where katr6 = '897' \
  and zzkv_cusno=:CMR_NO) l \
  on l.katr6 = a.katr6 \
  and l.gu_duns_no = g.gu_duns_no \
where a.katr6 = '897' \
and A.KUNNR = BX.KUNNR \
and A.mandt= :MANDT \
and a.MANDT=bX.MANDT \
and bx.MANDT=bg.MANDT \
and BX.BUYING_GROUP_ID=bg.BUYING_GROUP_ID \
and A.KUNNR = F.KUNNR \
and f.mandt= a.mandt \
and G.MANDT = F.MANDT \
AND G.ENTITY_ID = F.ENTITY_ID \
AND G.ENTITY_TYPE = F.ENTITY_TYPE \
and g.gu_duns_no<>'' \
AND nvl(a.KATR10,'')<>'GTS' \
and a.zzkv_cusno <> :CMR_NO \
and a.ZZKV_NODE2=:ENTERPRISE \
and a.KONZS=:AFFILIATE \
group by g.gu_duns_no,bg.GLOBAL_BUYING_GROUP_ID \
order by count_cmr desc \
fetch first 5 rows only

AUTO.US.GET_RDC_VALUES=select KUKLA, ZZKV_SIC, BRAN1, KONZS \
from sapr3.kna1 where ZZKV_CUSNO=:CMR_NO and KATR6='897' and MANDT=:MANDT and LOEVM <>'X' and KTOKD <> 'ZP01' \
order by \
case when KTOKD = 'ZS01' then 0 when KTOKD = 'ZI01' then 1 else 2 end

AUTO.US.GET_CUSTTYPE=select ABRVW \
from sapr3.kna1 where ZZKV_CUSNO=:CMR_NO and KATR6='897' and MANDT=:MANDT and LOEVM <>'X' and KTOKD <> 'ZP01' \
order by \
case when KTOKD = 'ZS01' then 0 when KTOKD = 'ZI01' then 1 else 2 end
AUTO.US.GET_IBM_DIRECT=select kna1.KONZS, kna1.KATR3, kna1.BRSCH, kna1.ZZKV_INACT, kna1.ZZKV_INAC, kna1.KUNNR, kna1.ZZKV_CUSNO, kna1.ZZKV_SIC, kna1.BRAN1, data.FIELD_VALUE RESTRICT_TO \
from SAPR3.KNA1 kna1 \
left outer join SAPR3.ADDLCTRYDATA data \
  on kna1.MANDT = data.MANDT \
  and kna1.KUNNR = data.KUNNR \
  and data.FIELD_NAME = 'US_RESTRICT_TO' \
where kna1.KATR6 = '897' \
and kna1.MANDT = :MANDT \
and kna1.KATR10 = '' \
and upper(trim(kna1.NAME1))||upper(trim(kna1.NAME2)) LIKE :NAME \
and kna1.KTOKD =  'ZS01' \
and kna1.AUFSD = '' \
and kna1.LOEVM = '' \
and kna1.KONZS <> '' \
and kna1.ORT01 = :CITY \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.PSTLZ like :POST_CD \
and nvl(data.FIELD_VALUE, 'NO_VALUE_RETRIEVED') = 'NO_VALUE_RETRIEVED' \
order by kna1.SHAD_UPDATE_TS desc


AUTO.US.GET_IBM_DIRECT.CMR=select kna1.KONZS, kna1.KATR3, kna1.BRSCH, kna1.ZZKV_INACT, kna1.ZZKV_INAC, kna1.KUNNR, kna1.ZZKV_CUSNO, kna1.ZZKV_SIC, kna1.BRAN1, data.FIELD_VALUE RESTRICT_TO \
from SAPR3.KNA1 kna1 \
left outer join SAPR3.ADDLCTRYDATA data \
  on kna1.MANDT = data.MANDT \
  and kna1.KUNNR = data.KUNNR \
  and data.FIELD_NAME = 'US_RESTRICT_TO' \
where kna1.KATR6 = '897' \
and kna1.MANDT = :MANDT \
and kna1.KATR10 = '' \
and kna1.ZZKV_CUSNO = :CMR_NO \
and kna1.KTOKD =  'ZS01' \
and nvl(data.FIELD_VALUE, 'NO_VALUE_RETRIEVED') <> 'NO_VALUE_RETRIEVED' \
order by kna1.SHAD_UPDATE_TS desc

AUTO.US.GET_AFF_FOR_INAC=\
select kna1.KONZS, count(1) \
from SAPR3.KNA1 kna1 \
where kna1.MANDT = :MANDT \
and kna1.ZZKV_INAC = :INAC \
and kna1.KATR6 = '897' \
AND nvl(kna1.KATR10,'')<>'GTS' \
and kna1.KONZS <> '' \
group by kna1.KONZS \
order by 2 desc

AUTO.US.GET_INAC_FOR_AFF=\
select kna1.ZZKV_INAC, count(1) \
from SAPR3.KNA1 kna1 \
where kna1.MANDT = :MANDT \
and kna1.KATR6 = '897' \
and kna1.KONZS = :AFFILIATE \
AND nvl(kna1.KATR10,'')<>'GTS' \
group by kna1.ZZKV_INAC  \
order by 2 desc

AUTO.CHECK_CHILD_STATUS=select REQ_STATUS from CREQCMR.ADMIN where REQ_ID = :CHILD_ID
AUTO.US.GET_ISU_BY_ISIC=select BRSCH from sapr3.ZZKV_SIC where zzkv_sic=:ISIC and ZZKV_GEO='US' and  mandt=:MANDT

AUTO.CA.GET_CMR_REVENUE= \
select a.zzkv_cusno,sum(nvl(r.revenue,0)) revenue \
from rdc_sapr3.kna1 a \
left outer join (select REV.SAP_CUSTOMER_NO KUNNR, REV.REV_TOTAL revenue \
from (select SAP_CUSTOMER_NO, sum(nvl(REV_CY,0) + nvl(REV_CY_M1,0)) REV_TOTAL \
from IZ_CLIENT.AIW_SAP_ANNUAL_REV \
group by SAP_CUSTOMER_NO) REV) r on \
a.kunnr = r.kunnr \
where a.katr6 ='649' \
AND nvl(a.KATR10,'')<>'GTS' \
and zzkv_cusno = :CMR_NO \
group by zzkv_cusno


AUTO.CA.INAC_DUNS_CHECK= \
Select g.gu_duns_no, bg.GLOBAL_BUYING_GROUP_ID, count(distinct a.zzkv_cusno) count_cmr \
from sapr3.kna1 a, \
SAPR3.BUYING_GROUP_EXT BX, \
sapr3.BUYING_GROUP bg, \
SAPR3.KDUNS_NEW F, \
SAPR3.KDUNS_FAMILY G \
right outer join ( \
  select a.katr6,g.gu_duns_no \
  from sapr3.kna1 a \
  LEFT OUTER JOIN SAPR3.KDUNS_NEW F \
    ON  A.KUNNR = F.KUNNR and f.mandt= :MANDT \
  LEFT OUTER JOIN SAPR3.KDUNS_FAMILY G \
    ON G.MANDT = F.MANDT \
    AND G.ENTITY_ID = F.ENTITY_ID \
    AND G.ENTITY_TYPE = F.ENTITY_TYPE \
  where katr6 = '649' \
  and zzkv_cusno=:CMR_NO) l \
  on l.katr6 = a.katr6 \
  and l.gu_duns_no = g.gu_duns_no \
where a.katr6 = '649' \
and A.KUNNR = BX.KUNNR \
and A.mandt= :MANDT \
and a.MANDT=bX.MANDT \
and bx.MANDT=bg.MANDT \
and BX.BUYING_GROUP_ID=bg.BUYING_GROUP_ID \
and A.KUNNR = F.KUNNR \
and f.mandt= a.mandt \
and G.MANDT = F.MANDT \
AND G.ENTITY_ID = F.ENTITY_ID \
AND G.ENTITY_TYPE = F.ENTITY_TYPE \
and g.gu_duns_no<>'' \
AND nvl(a.KATR10,'')<>'GTS' \
and a.zzkv_cusno <> :CMR_NO \
and a.ZZKV_INAC = :INAC \
group by g.gu_duns_no,bg.GLOBAL_BUYING_GROUP_ID \
order by count_cmr desc \
fetch first 5 rows only

AUTO.CA.CHECK_CMR_NEW= \
SELECT kna1.katr6, \
kna1.zzkv_cusno, \
CASE \
WHEN ( Substr(kna1.erdat, 1, 4) \
|| '-' \
|| Substr(kna1.erdat, 5, 2) \
|| '-' \
|| Substr(kna1.erdat, 7, 2) ) >= Substr( \
CURRENT TIMESTAMP - 30 DAYS, 1, \
10) THEN 'Ok' \
ELSE 'Reject' \
END AS Creation_CAP_Changed \
FROM   sapr3.kna1 kna1 \
WHERE  kna1.katr6 = '649' \
AND kna1.zzkv_cusno = :CMR_NO
       
AUTO.CA.GET_ISU_BY_ISIC=select BRSCH from sapr3.ZZKV_SIC where zzkv_sic=:ISIC and ZZKV_GEO='CA' and  mandt=:MANDT       

QUERY.GET.GERMANY.CHECK_SOLD_TO_ACTIVE= SELECT 1,'' from SAPR3.KNA1 WHERE \
ZZKV_CUSNO=:ZZKV_CUSNO AND \
KATR6 = '724' AND \
MANDT=:MANDT AND \
KTOKD = 'ZS01' AND \
AUFSD<>'93'

AUTO.US.GET_ATTN_RDC=select NAME3, NAME4 \
from sapr3.kna1 where ZZKV_CUSNO=:CMR_NO and KATR6='897' and MANDT=:MANDT and LOEVM <>'X' and KTOKD = :ADDR_TYP
#Malta Queries
MT.GET_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('C','U','R','D') \
and a.REQ_STATUS IN ('PCP','CPR')  \
and a.PROCESSED_FLAG in ('N','Wx') \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and a.DISABLE_AUTO_PROC = 'N' \
and s.PROCESSING_TYP ='MA'
DR.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M', 'N') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='DR' 
DR.GET.ADDR=select * from CREQCMR.ADDR where REQ_ID = :REQ_ID 

QUERY.QUICK_SEARCH.RESTRICT_TO=select CD, CD||' ('||TXT||')' from CREQCMR.LOV where FIELD_ID = '##RestrictTo' order by CD

US.GET.SUBIND_FOR_ISIC=select INDCL_CD from CMMA.REFT_INDCL_W where REFT_INDCL_KEY in (select REFT_INDCL_KEY from CMMA.REFT_UNSIC_W where REFT_UNSIC_CD= :ISIC ) fetch first 1 rows only

AUTO.US.GET_US_RESTR_TO_LOV=select txt from creqcmr.lov where FIELD_ID='##RestrictToLookup' and CMR_ISSUING_CNTRY='897' and CD=:RESTRICT_TO

#Single Reactivation
QUERY.LD.SINGLE_REACT_CHECK_ACTIVE_PARENT_COMPANY=SELECT STATUS,RCUXA,'' FROM CMRDB2D.CMRTCUST WHERE RCYAA= :COUNTRY AND RCUXA=(SELECT CODCP FROM CMRDB2D.CMRTCEXT WHERE RCYAA= :COUNTRY AND RCUXA= :CMR_NO)
QUERY.LD.SINGLE_REACT_CHECK_ACTIVE_PARENT_BILLING=SELECT STATUS,RCUXA,'' FROM CMRDB2D.CMRTCUST WHERE RCYAA= :COUNTRY AND RCUXA=(SELECT CODCC FROM CMRDB2D.CMRTCEXT WHERE RCYAA= :COUNTRY AND RCUXA= :CMR_NO)

ADDR.UPDATE.LANDEDCNTRY.GR=update CREQCMR.ADDR set LAND_CNTRY = :LAND_CNTRY where REQ_ID = :REQ_ID AND ADDR_TYPE in ('ZS01','ZP01')
AUTO.USBP.CHECK_RESTRICTION=select C_COM_RESTRCT_CODE, I_CUST_ENTITY||'' from {SCHEMA}.A11T0CUS where I_CUST_ENTITY = :CMR_NO

QUICK_SEARCH.DNB.USCOUNTY=select COUNC, BEZEI from SAPR3.T005F where MANDT = :MANDT and SPRAS = 'E' and LAND1 = 'US' and REGIO = :STATE and upper(BEZEI) like :COUNTY
QUICK_SEARCH.DNB.USCOUNTY.ALL=select COUNC, BEZEI from SAPR3.T005F where MANDT = :MANDT and SPRAS = 'E' and LAND1 = 'US' and REGIO = :STATE


AUTO.US.CHECK_ZP01_ADDRESS=select 1 from sapr3.kna1 where katr6='897' and mandt=:MANDT and ktokd='ZP01' and aufsd<>'93' and loevm<>'X' and zzkv_cusno=:CMR_NO
AUTO.US.CHECK_ZI01_ON_REQ=SELECT 1 FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE='ZI01'
AUTO.US.BP_ACCOUNT_TYPE=select BP_ACCT_TYP from creqcmr.data where req_id=:REQ_ID
AUTO.US.USCMR.AFFILIATE=select trim(I_MKT_AFFLTN||'') I_MKT_AFFLTN, I_CUST_ENTITY \
from {SCHEMA}.A11T0CUS \
where I_CUST_ENTITY = :CMR_NO

AUTO.GET_DEFAULT_COVERAGE=select COVTYPE||COVID from SAPR3.CNTRY_DEFAULT_COVERAGE where MANDT = :MANDT and ISO_ISSUING_CNTRY_CD = :COUNTRY

AUTO.US.GET_REJECTION=select * from CREQCMR.WF_HIST where REQ_ID = :REQ_ID and REQ_STATUS = 'PRJ' order by WF_ID desc
AUTO.US.GET_COMMENTS=select * from CREQCMR.REQ_CMT_LOG where REQ_ID = :REQ_ID and CREATE_BY_ID <> 'AutomationEngine' and CREATE_BY_ID <> 'CreateCMR' order by CMT_ID
AUTO.REJECTION_CODES=select * from CREQCMR.LOV where FIELD_ID = '##RejectReasonProc'
AUTO.US.GET_ATTACHMENTS=select * from CREQCMR.ATTACHMENT where REQ_ID = :REQ_ID and DOC_ATTACH_BY_ID <> 'AutomationEngine' and DOC_ATTACH_BY_ID <> 'CreateCMR' 
AUTO.US.USCMR.ENTERPRISE=select trim(com.I_ENT||'') I_ENT, cus.I_CUST_ENTITY \
from {SCHEMA}.A11T0COM com, {SCHEMA}.A11T0CUS cus \
where cus.I_CO = com.I_CO \
and cus.I_CUST_ENTITY = :CMR_NO

AUTO.DE.GET_SBOLIST_FROM_ISUCTC = select DISTINCT (SALES_BO_CD) from creqcmr.SALES_BRANCH_OFF where ISU_CD = :ISU and CLIENT_TIER = :CLIENT_TIER and ISSUING_CNTRY = :ISSUING_CNTRY and UPDATE_BY_ID like :UPDATE_BY_ID

AUTO.AT.GET_SBOLIST_FROM_ISUCTC = select DISTINCT (SALES_BO_CD) from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU and UPDATE_BY_ID like :UPDATE_BY_ID
AUTO.AT.GET_SBOLIST_FROM_ISU = select DISTINCT (SALES_BO_CD) from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and ISU_CD like :ISU
#EMEA
AUTO.EMEA.DUP_ABBREV_CHECK=select * from CMRDB2D.CMRTCUST WHERE REALCTY = :CNTRY and NCUXB = :ABBREV_NM and LCUXB = :ABBREV_LOCN 
#CMDE_REQUESTER
AUTO.CHECK_CMDE=select 1 from CREQCMR.PROC_CENTER p, CREQCMR.USER_PREF u, CMMA.USER_ROLES r where REQUESTER_ID=:REQUESTER_ID and u.PROC_CENTER_NM = p.PROC_CENTER_NM and r.ROLE_ID='PROCESSOR' and p.CMR_ISSUING_CNTRY=:CNTRY and u.REQUESTER_ID=r.USER_ID GROUP by cmr_issuing_cntry
AUTO.CHECK_CMDE_REQUESTER = select 1 from CREQCMR.PROC_CENTER p, CREQCMR.USER_PREF u, CMMA.USER_ROLES r where REQUESTER_ID=:REQUESTER_ID AND r.ROLE_ID='CMDE' and u.PROC_CENTER_NM = p.PROC_CENTER_NM and p.CMR_ISSUING_CNTRY=:CMR_ISSUING_CNTRY and u.REQUESTER_ID=r.USER_ID GROUP by cmr_issuing_cntry

#MCO2
QUERY.GET.MCO2SR.BYISU=select REP_TEAM_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and UPDATE_BY_ID like :ISU
QUERY.GET.MCO2SBOLIST.BYSR=select SALES_BO_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and UPDATE_BY_ID like :ISU and REP_TEAM_CD like :REP_TEAM_CD

TR.MASS.GETMAILINGADDR=select * from cmrdb2d.CMRTADDR where addrmail='Y' and rcyaa= :CNTRY and rcuxa= :CMR_NUM
AUTO.CHECK_DPL_APPROVAL=SELECT 1 from CREQCMR.DEFAULT_APPROVALS a, CREQCMR.DEFAULT_APPROVAL_CONDITIONS c where a.DEFAULT_APPROVAL_ID=c.DEFAULT_APPROVAL_ID and a.DEFAULT_APPROVAL_DESC like '%DPL %' and c.FIELD_ID='CmrIssuingCntry' and c.VALUE like :ISSUING_CNTRY and a.REQUEST_TYP=:REQ_TYPE

AUTO.GET_EXISTING_VAT=select VAT from CREQCMR.DATA_RDC where REQ_ID= :REQ_ID
RECORD.GBL_CHECKLIST=select * from CREQCMR.PROLIF_CHECKLIST where REQ_ID = :REQID

#UKI
QUERY.UK.GET.SBOSR_FOR_ISIC=select SALES_BO_CD, SALES_BO_DESC from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY='866' and REP_TEAM_CD=:ISIC_CD and ISU_CD like :ISU_CD and CLIENT_TIER like :CLIENT_TIER
GET_STCD1_ZS01.UKI=SELECT STCD1,KUNNR FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND KATR6 = :KATR6 AND LOEVM != 'X' AND KTOKD = 'ZS01' AND ZZKV_CUSNO = :ZZKV_CUSNO AND AUFSD = ''
UKI.GET.INSTALLING_ADDR_CUST_NM= select CUST_NM1,CUST_NM2 FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZI01' AND ADDR_SEQ='00001'
QUERY.UKI.GET_ABBNAME_DATA=SELECT ABBREV_NM,'' FROM CREQCMR.DATA WHERE REQ_ID = :REQ_ID
QUERY.GET.CUSTNM1_ADDR_UKI=SELECT CUST_NM1,CUST_NM2,'' FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = :ADDR_TYPE
QUERY.GET.CMR_BY_CNTRY_CUSNO_SAPR3_FOR_UKI=select * from sapr3.kna1 where mandt= :MANDT AND KATR6 IN ('866', '754') AND ZZKV_CUSNO= :CMRNO
QUERY.GET.CHECK_EXISTS_CMR_NO_FOR_UKI=select * from CMRDB2D.CMRTCUST where rcyaa IN ('866', '754') and rcuxa= :CMR_NO
QUERY.UK.GET.SBOSR_FOR_ISU_CTC = SELECT * FROM CREQCMR.SALES_BRANCH_OFF WHERE ISSUING_CNTRY  = :CNTRY AND SALES_BO_CD = :SBO AND SALES_BO_DESC = :SALES_REP AND ISU_CD like :ISU AND CLIENT_TIER like :CTC
QUERY.IE.GET.SBOSR_FOR_ISU_CTC = SELECT * FROM CREQCMR.SALES_BRANCH_OFF WHERE ISSUING_CNTRY  = :CNTRY AND SALES_BO_CD = :SBO AND REP_TEAM_CD = :SALES_REP AND ISU_CD like :ISU
# UKI ES DB2 
QUERY.GET.COUNT.ADDRTYP = SELECT COUNT(CASE WHEN ADDRINST = 'Y' THEN 1 END) AS  ADDRINST, \
COUNT(CASE WHEN ADDRMAIL = 'Y' THEN 1 END) AS ADDRMAIL, \
COUNT(CASE WHEN ADDRSHIP = 'Y' THEN 1 END) AS ADDRSHI, \
COUNT(CASE WHEN ADDREPL = 'Y' THEN 1 END) AS  ADDREPL \
FROM CMRDB2D.CMRTADDR ADDR, CMRDB2D.CMRTCUST CUST WHERE ADDR.RCUXA = CUST.RCUXA AND ADDR.RCYAA = CUST.RCYAA AND \
CUST.RCYAA = :RCYAA AND CUST.RCUXA = :RCUXA AND CUST.REALCTY = :REALCTY
# UKI ES DB2 
QUERY.GET.COUNT.ADDRTYP = SELECT COUNT(CASE WHEN ADDRINST = 'Y' THEN 1 END) AS  ADDRINST, \
COUNT(CASE WHEN ADDRMAIL = 'Y' THEN 1 END) AS ADDRMAIL, \
COUNT(CASE WHEN ADDRSHIP = 'Y' THEN 1 END) AS ADDRSHI, \
COUNT(CASE WHEN ADDREPL = 'Y' THEN 1 END) AS  ADDREPL \
FROM CMRDB2D.CMRTADDR ADDR, CMRDB2D.CMRTCUST CUST WHERE ADDR.RCUXA = CUST.RCUXA AND ADDR.RCYAA = CUST.RCYAA AND \
CUST.RCYAA = :RCYAA AND CUST.RCUXA = :RCUXA AND CUST.REALCTY = :REALCTY

#Greece LD
ADDR.UPDATE.LANDEDCNTRY.GR=update CREQCMR.ADDR set LAND_CNTRY = :LAND_CNTRY where REQ_ID = :REQ_ID AND ADDR_TYPE in ('ZS01','ZP01')
GREECE.GET.MAILINGADDR=SELECT * from CMRDB2D.CMRTADDR where RCYAA = :RCYAA and RCUXA = :RCUXA and ADDRMAIL = :ADDRMAIL
GREECE.GET.BILLINGADDR=SELECT * from CMRDB2D.CMRTADDR where RCYAA = :RCYAA and RCUXA = :RCUXA and ADDRBILL = :ADDRBILL
ADDR.UPDATE.IMPORTIND.N=UPDATE CREQCMR.ADDR SET IMPORT_IND = 'N' WHERE REQ_ID = :REQID

#PT,CY,GR
QUERY.VALIDATOR.IMPORTED=select IMPORT_IND, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01'  

QUERY.GET.CMRINFO.IMPORTED_GR=select ISU_CD,CLIENT_TIER,REP_TEAM_MEMBER_NO,SALES_BO_CD,INAC_CD,ENTERPRISE from creqcmr.data_rdc where REQ_ID=:REQ_ID

QUERY.VALIDATOR.IMPORTED_ZS01=select IMPORT_IND, '' \
FROM CREQCMR.ADDR \
WHERE REQ_ID = :REQID \
AND ADDR_TYPE = 'ZS01'

QUERY.ADDR.GET.CITY.BY_REQID_ADDRTYP=select CITY1,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ
QUERY.ADDR.GET.CUSTNM1.BY_REQID_ADDRTYP=select CUST_NM1,CUST_NM2,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID and ADDR_TYPE = :ADDR_TYPE order by ADDR_SEQ

ADDRESS.COUNT.ALLTYPE=select COUNT(*) from CREQCMR.ADDR where REQ_ID = :REQ_ID

QUERY.GET.COLLECTIONCD = SELECT TXT, '' from CREQCMR.LOV WHERE CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY AND FIELD_ID = '##CollectionCd'

QUERY.DATA.GET.SALESBO_CD=select rt.REP_TEAM_MEMBER_NO \
from CREQCMR.SALES_BRANCH_OFF sbo, CREQCMR.REP_TEAM rt \
where sbo.REP_TEAM_CD = rt.REP_TEAM_CD \
and sbo.ISSUING_CNTRY = :ISSUING_CNTRY AND sbo.REP_TEAM_CD = :REP_TEAM_CD

QUERY.GET.PROVNM_CD = select BUSN_TYP, TERRITORY_CD, COLLECTION_CD  from CREQCMR.DATA where REQ_ID = :REQ_ID

DELETE.LIST=\
select a.REQ_ID, m.CMR_NO, k.NAME1||(case when k.NAME2 != '' then ' '||k.NAME2 else '' end), k.AUFSD, k.LOEVM \
from CREQCMR.MASS_UPDT m, CREQCMR.DATA d, CREQCMR.ADMIN a \
left outer join SAPR3.KNA1 k \
  on m.CMR_NO = k.ZZKV_CUSNO \
  and d.CMR_ISSUING_CNTRY = k.KATR6 \
  AND nvl(k.KATR10,'')<>'GTS' \
  and k.MANDT = :MANDT \
  and k.KTOKD = 'ZS01' \
  and k.AUFSD <> '90' \
where d.REQ_ID = m.PAR_REQ_ID \
and a.REQ_ID = d.REQ_ID \
and a.REQ_ID = m.PAR_REQ_ID  \
and m.ITERATION_ID = 1 \
and a.REQ_TYPE = 'D' \
and a.REQ_ID = :REQ_ID

IL.DELETE.LIST=\
select a.REQ_ID, m.CMR_NO, k.NAME1||(case when k.NAME2 != '' then ' '||k.NAME2 else '' end), k.AUFSD, k.LOEVM \
from CREQCMR.MASS_UPDT m, CREQCMR.DATA d, CREQCMR.ADMIN a \
left outer join SAPR3.KNA1 k \
  on m.CMR_NO = k.ZZKV_CUSNO \
  and d.CMR_ISSUING_CNTRY = k.KATR6 \
  AND nvl(k.KATR10,'')<>'GTS' \
  and k.MANDT = :MANDT \
  and k.KTOKD = 'ZS01' \
  and (k.AUFSD <> '90' and k.AUFSD <> '93') \
where d.REQ_ID = m.PAR_REQ_ID \
and a.REQ_ID = d.REQ_ID \
and a.REQ_ID = m.PAR_REQ_ID  \
and m.ITERATION_ID = 1 \
and a.REQ_TYPE = 'D' \
and a.REQ_ID = :REQ_ID

COUNT.LOVBYCD = SELECT COUNT(*) FROM CREQCMR.LOV WHERE CMR_ISSUING_CNTRY=:CNTRY AND FIELD_ID=:FIELD_ID AND CD=:CD
QUERY.GET.CN.ADDRDETAILS=select CUST_NM1,CUST_NM2,CUST_NM3,ADDR_TXT,ADDR_TXT,CITY1,CITY2,DEPT,BLDG,OFFICE,PO_BOX,'' from CREQCMR.ADDR where REQ_ID = :REQ_ID
QUERY.GLC.CN.SEARCHTERM=SELECT AP_CUST_CLUSTER_ID, CLIENT_TIER_CD, ISU_CD FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY = '641' AND CREATE_BY LIKE :GLC_CD AND DEFAULT_INDC =:DEFAULT_INDC

#sql for ME only begin
QUERY.GET.CMR.ME=select * from sapr3.kna1 where mandt= :MANDT AND KATR6= :CNTRY AND ZZKV_CUSNO= :CMRNO
#CMR-6019 Used to Check ME 675 Duplicate exist
QUERY.CHECK.ME.DUP.EXIST.DB2 = select CEBO, '' from cmrdb2d.CMRTCUST where RCUXA = :CMRNO AND RCYAA = '675' AND CEBO <>''
QUERY.CHECK_VATD_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'VATD' and REQ_ID = :ID
QUERY.GET.VAT_OLD_BY_REQID=SELECT VAT, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.OLD_ZS01_DEPT_BY_REQID=select DEPT,'' from CREQCMR.ADDR_RDC where REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
#sql for ME only end
QUERY.DE.PAYGO.CHECK=select 1,'' from CMMA.FINDCMR_PARTNERS where (SERVICE_ID = :SYST_ID or SYST_ID = :SYST_ID) and PAYGO_ACCREDITED = 'Y'
QUERY.VALIDATECMR=SELECT ZZKV_CUSNO,'' FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND KATR6= :KATR6 AND MANDT = :MANDT
QUERY.GET.KUNNR.SOLDTO=SELECT KUNNR,'' FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6= :KATR6 AND LOEVM <> 'X' AND KTOKD in ('ZS01', 'ZI01') order by (case when KTOKD = 'ZS01' then 0 else 1 end),(case when AUFSD = '' then 0 else 1 end)
QUERY.DE.PAYGO.CHECK=select 1,'' from CMMA.FINDCMR_PARTNERS where (SERVICE_ID = :SYST_ID or SYST_ID = :SYST_ID) and PAYGO_ACCREDITED = 'Y'

#SG
KNA1.CHECK_IF_CMR_EXISTS=SELECT * FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO AND KATR6 = :KATR6 AND AUFSD = '' AND KTOKD = 'ZS01' AND LOEVM != 'X'
GET.CNTRYCD_FRM_LANDCNTRY = SELECT CNTRY_CD FROM CREQCMR.SUPP_CNTRY WHERE DEFAULT_LANDED_CNTRY = :LAND_CNTRY
KNA1.GET_ISIC=SELECT ZZKV_SIC FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND KATR6 = :KATR6 AND ZZKV_CUSNO = :CMR_NO AND AUFSD = '' AND LOEVM != 'X' AND KTOKD = 'ZS01'

QUERY.LEGACY.SEARCH.CNTRY=select distinct c.realcty, k.vtext||' ('||c.rcyaa||')' \
from cmrdb2d.cmrtcust c \
left outer join sapr3.tvk6t k \
on trim(c.realcty) = k.katr6 \
where k.mandt = :MANDT \
and k.spras = 'E'

LEGACY.SEARCH.KNA1=select * from SAPR3.KNA1 \
where MANDT = :MANDT \
and KATR6 = :KATR6 \
and ZZKV_CUSNO = :CMR_NO \
order by case when KTOKD = 'ZS01' then 0 else 1 end, case when AUFSD = '' then 0 else 1 end, ZZKV_SEQNO
QUERY.CHECK_LD_MASS_NEW_TEMP=select count(*), '' FROM CREQCMR.SUPP_CNTRY WHERE CNTRY_CD = :CNTRY AND PROCESSING_TYP in ('LD','DR') AND SUPP_REQ_TYPE LIKE '%M%'

QUERY.GET.CMRINFO.IMPORTED_AFRICA=select ISU_CD,CLIENT_TIER,ENTERPRISE,INAC_CD,SALES_BO_CD from creqcmr.data_rdc where REQ_ID=:REQ_ID

QUERY.VISUAL.DAILY_CREATES=select COUNTRY, count(1) COUNTS \
from (select case \
				when d.CMR_ISSUING_CNTRY in ('649') then 'Canada' \
				when d.CMR_ISSUING_CNTRY in ('619','621','627','647','640','759','791','839','843','859') then 'Caribbean and North Districts' \
				when d.CMR_ISSUING_CNTRY in ('613','629','631','655','661','663','681','683','829','731','735','781','799','811','813','815','869','871') then 'Latin America' \
				when d.CMR_ISSUING_CNTRY in ('897') then 'US' \
				when d.CMR_ISSUING_CNTRY in ('616','796') then 'Australia and New Zealand' \
				when d.CMR_ISSUING_CNTRY in ('615','643','720','749','714','778','646','818','834','856','852') then 'ASEAN' \
				when d.CMR_ISSUING_CNTRY in ('641','738','736') then 'Greater China Group' \
				when d.CMR_ISSUING_CNTRY in ('615','744','790','652') then 'India and South Asia' \
				when d.CMR_ISSUING_CNTRY in ('624','788') then 'BeNeLux' \
				when d.CMR_ISSUING_CNTRY in ('603','607','358','626','699','644','704','668','651','740','694','695','705','787','820','826','821','707','693','708','363','359','889','741') then 'Central and Eastern Europe' \
				when d.CMR_ISSUING_CNTRY in ('618','724','848') then 'DACH' \
				when d.CMR_ISSUING_CNTRY in ('758') then 'Italy' \
				when d.CMR_ISSUING_CNTRY in ('706') then 'France' \
				when d.CMR_ISSUING_CNTRY in ('680','610','620','840','636','841','645','692','669','810','881','667','662','865','383','745','698','656','753','725','691','879','675','750','752','637','762','764','767','768','770','772','700','769','382','780','717','373','642','782','880','804','805','808','823','670','831','827','832','635','876','833','835','864','842','850','851','718','729','862','857','677','849','883','825') then 'Middle East and Africa' \
				when d.CMR_ISSUING_CNTRY in ('678','702','806','846') then 'Nordics' \
				when d.CMR_ISSUING_CNTRY in ('726','755','822','838','666') then 'SPGI' \
				when d.CMR_ISSUING_CNTRY in ('866','754') then 'UKI' \
				when d.CMR_ISSUING_CNTRY in ('760') then 'Japan' else 'Unclassified' end COUNTRY \
		  from CREQCMR.ADMIN a, CREQCMR.DATA d \
      where a.REQ_ID = d.REQ_ID \
      and a.CREATE_TS >= current date \
      and a.CREATE_TS < current date + 1) a \
group by a.COUNTRY

QUERY.VISUAL.DAILY_COMPLETES=select COUNTRY, count(1) COUNTS \
from (select case \
        when d.CMR_ISSUING_CNTRY in ('649') then 'Canada' \
        when d.CMR_ISSUING_CNTRY in ('619','621','627','647','640','759','791','839','843','859') then 'Caribbean and North Districts' \
        when d.CMR_ISSUING_CNTRY in ('613','629','631','655','661','663','681','683','829','731','735','781','799','811','813','815','869','871') then 'Latin America' \
        when d.CMR_ISSUING_CNTRY in ('897') then 'US' \
        when d.CMR_ISSUING_CNTRY in ('616','796') then 'Australia and New Zealand' \
        when d.CMR_ISSUING_CNTRY in ('615','643','720','749','714','778','646','818','834','856','852') then 'ASEAN' \
        when d.CMR_ISSUING_CNTRY in ('641','738','736') then 'Greater China Group' \
        when d.CMR_ISSUING_CNTRY in ('615','744','790','652') then 'India and South Asia' \
        when d.CMR_ISSUING_CNTRY in ('624','788') then 'BeNeLux' \
        when d.CMR_ISSUING_CNTRY in ('603','607','358','626','699','644','704','668','651','740','694','695','705','787','820','826','821','707','693','708','363','359','889','741') then 'Central and Eastern Europe' \
        when d.CMR_ISSUING_CNTRY in ('618','724','848') then 'DACH' \
        when d.CMR_ISSUING_CNTRY in ('758') then 'Italy' \
        when d.CMR_ISSUING_CNTRY in ('706') then 'France' \
        when d.CMR_ISSUING_CNTRY in ('680','610','620','840','636','841','645','692','669','810','881','667','662','865','383','745','698','656','753','725','691','879','675','750','752','637','762','764','767','768','770','772','700','769','382','780','717','373','642','782','880','804','805','808','823','670','831','827','832','635','876','833','835','864','842','850','851','718','729','862','857','677','849','883','825') then 'Middle East and Africa' \
        when d.CMR_ISSUING_CNTRY in ('678','702','806','846') then 'Nordics' \
        when d.CMR_ISSUING_CNTRY in ('726','755','822','838','666') then 'SPGI' \
        when d.CMR_ISSUING_CNTRY in ('866','754') then 'UKI' \
        when d.CMR_ISSUING_CNTRY in ('760') then 'Japan' else 'Unclassified' end COUNTRY \
      from CREQCMR.ADMIN a, CREQCMR.DATA d \
      where a.REQ_ID = d.REQ_ID \
      and exists (select 1 \
            from CREQCMR.WF_HIST h \
            where h.REQ_ID = a.REQ_ID \
            and h.CREATE_TS >= current date \
            and h.CREATE_TS < current date + 1 \
            and h.REQ_STATUS = 'COM')) a \
group by a.COUNTRY

KNA1.NORDICS.BP.ISUCTC = SELECT concat(BRSCH,KATR3) FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND KATR6 = :CNTRY AND ZZKV_CUSNO = :CMR AND LOEVM != 'X' AND KTOKD = 'ZS01'
QUERY.GET_MQ_COUNTRIES=select CNTRY_CD, NM from CREQCMR.SUPP_CNTRY where PROCESSING_TYP = 'MQ' order by NM 
AUTO.PAYGO.CHECK=select 1 from CMMA.FINDCMR_PARTNERS where (SERVICE_ID = :SYST_ID or SYST_ID = :SYST_ID) and PAYGO_ACCREDITED = 'Y'

QUERY.GET.CMRINFO.IMPORTED_PT=select ISU_CD,CLIENT_TIER,REP_TEAM_MEMBER_NO,SALES_BO_CD,INAC_CD,ENTERPRISE from creqcmr.data_rdc where REQ_ID=:REQ_ID
QUERY.GET.START_FROM_QUICK_SEARCH=select nvl(START_QUICK_SEARCH,'N'),'' \
from CREQCMR.SUPP_CNTRY \
where CNTRY_CD = :CNTRY

GET_DISTRICT_CODE_PT=select CMT from CREQCMR.LOV where CMR_ISSUING_CNTRY = '822' AND CD = :CD
#US Sunset SQL beginning
BATCH.US.GET.MASS_UPDT=SELECT MASS_UPDT.* FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND ROW_STATUS_CD NOT IN ('DONE')
#US Sunset SQL ending
#France sql beginning
FRANCE.GET_SUPP_CNTRY_BY_ID=SELECT 1 FROM CREQCMR.SUPP_CNTRY WHERE CNTRY_CD = :CNTRY AND PROCESSING_TYP = 'FR'
BATCH.FR.GET.MASS_UPDT=SELECT MASS_UPDT.* FROM CREQCMR.MASS_UPDT MASS_UPDT WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND ROW_STATUS_CD NOT IN ('DONE')
DATA.GETCMRNO.FR=select cmr_no from CREQCMR.DATA where REQ_ID=:REQ_ID
ADMIN.GETREQTYPE.FR=select req_type from CREQCMR.ADMIN where REQ_ID=:REQ_ID
GET.KUNNR_EXT.BY_KUNNR_MANDT_FR = SELECT BUILDING, FLOOR, DEPARTMENT \
FROM SAPR3.KUNNR_EXT \
WHERE KUNNR = :KUNNR \
AND MANDT = :MANDT  WITH UR
ADDRESS.GETMADDRSEQ_CREATECMR=select distinct ADDR_SEQ from CREQCMR.ADDR where REQ_ID = :REQ_ID \
AND ADDR_SEQ NOT IN ('598', '599') \
AND trim(translate(ADDR_SEQ,'', '0123456789')) = ''
FR.ADDRESS.GETMADDRSEQ_RDC=select distinct zzkv_seqno from sapr3.kna1 where mandt = :MANDT and katr6 = '706' AND zzkv_cusno = :ZZKV_CUSNO with ur
NORDX.GETMADDRSEQ_CREATECMR=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID \
AND ADDR_SEQ NOT IN ('598', '599') \
AND trim(translate(ADDR_SEQ,'', '0123456789')) = ''
NORDX.KNVV.GETVKBUR = SELECT VKBUR, '' FROM SAPR3.KNVV JOIN SAPR3.KNA1 ON SAPR3.KNVV.KUNNR = SAPR3.KNA1.KUNNR WHERE SAPR3.KNA1.MANDT= :MANDT \
AND SAPR3.KNA1.ZZKV_CUSNO = :CMRNO \
AND SAPR3.KNA1.KATR6= :CNTRY \
AND SAPR3.KNA1.KTOKD= :ADDR_TYPE \
WITH UR 

#KUNNR_U_FR
GET.KNA1.KUNNR_U_FR=SELECT KUNNR,ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = '706' \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
AND AUFSD = :AUFSD \
AND  LOEVM != 'X' \
WITH UR
#TAX CODE_FR
GET.TAXCODE.TAXKD_FR=SELECT TAXKD, MANDT, KUNNR, ALAND FROM SAPR3.KNVI \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND ALAND = 'GB' \
WITH UR

#France sql ending
QUERY.GET.COUNTRY=select CMR_ISSUING_CNTRY,'' from creqcmr.data where REQ_ID= :REQ_ID
FR.GET_CMR_DATARDC=SELECT CMR_NO, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.LD.CHECK_EXISTING_CMR_NO_SA=SELECT RCUXA,STATUS from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO

QUERY.LD.CHECK_CMR_EXIST_IN_RDC_SA = SELECT ZZKV_CUSNO,LOEVM,AUFSD from SAPR3.KNA1 WHERE MANDT= :MANDT and ZZKV_CUSNO= :CMR_NO and KATR6= :COUNTRY

QUERY.LD.OLD_COD_COF_BY_REQID_SA=SELECT CREDIT_CD,COMMERCIAL_FINANCED FROM CREQCMR.DATA_RDC where REQ_ID= :REQ_ID

QUERY.LD.GET_LANDED_COUNTRY_DESC=select COUNTRY_DESC , '' from CMMA.REFT_COUNTRY_W where COUNTRY_CD= ( Select LAND_CNTRY from CREQCMR.ADDR where REQ_ID= :REQ_ID and addr_type='ZS01')

QUERY.LD.CHECK_CMR_EXIST_IN_RDC = SELECT ZZKV_CUSNO,'' from SAPR3.KNA1 WHERE MANDT= :MANDT and ZZKV_CUSNO= :CMR_NO and KATR6= :COUNTRY

QUERY.GET_LAND_CNTRY_ZS01= SELECT LAND_CNTRY,'' FROM CREQCMR.ADDR where ADDR_TYPE='ZS01' and REQ_ID= :REQ_ID

GET.OLD_COD_COF_BY_REQID= SELECT CREDIT_CD,COMMERCIAL_FINANCED FROM CREQCMR.DATA_RDC where REQ_ID= :REQ_ID

QUERY.LD.GET_STATUS=SELECT STATUS,'' from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO

GET.RDC_ADDR_TYPES=select KTOKD from SAPR3.KNA1 where ZZKV_CUSNO= :CMR_NO and KATR6 = :CNTRY and MANDT = :MANDT

QUERY.GET.OLD_BUSN_TYP=select BUSN_TYP,'' from creqcmr.data_rdc where REQ_ID=:REQ_ID

QUERY.GET_CNTRY_CD_BY_LANDED=select CNTRY_CD, '' from CREQCMR.SUPP_CNTRY where DEFAULT_LANDED_CNTRY = :COUNTRY

#Paygo
PAYGO.CHECK=select 1 from CMMA.FINDCMR_PARTNERS where (SERVICE_ID = :SERVICE_ID or SYST_ID = :SYST_ID) and PAYGO_ACCREDITED = 'Y'
KNA1.US.MULTIPLE_BILLTO = SELECT * FROM  SAPR3.KNA1 WHERE MANDT = :MANDT AND KATR6 = '897' AND LOEVM != 'X' AND KTOKD = 'ZP01' AND (ZZKV_SEQNO >= '200' AND ZZKV_SEQNO <= '290') AND ZZKV_CUSNO = :ZZKV_CUSNO

FR.GET.ZS01KATR10=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND KTOKD='ZS01' \
AND LOEVM <> 'X' \
AND AUFSD NOT IN ('90','93') 
FR.GET.ZS01KATR10=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND KTOKD='ZS01' \
AND LOEVM <> 'X' \
AND AUFSD NOT IN ('90','93') \

QUERY.VALIDATECMR=SELECT ZZKV_CUSNO,'' FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND KATR6= :KATR6 AND MANDT = :MANDT
QUERY.GET.KUNNR.SOLDTO=SELECT KUNNR,'' FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6= :KATR6 AND LOEVM <> 'X' AND KTOKD in ('ZS01', 'ZI01', 'ZS02') order by (case when KTOKD in ('ZS01','ZS02') then 0 else 1 end),(case when AUFSD = '' then 0 else 1 end)

QUERY.QUICKSEARCH.ASYNC.CHECK=select count(1)||'', '' from SAPR3.KNA1 where MANDT = :MANDT and KATR6 = :CNTRY and ZZKV_CUSNO = :CMR_NO and LOEVM <> 'X'

#Cloning Pending Records
CLONING_PENDING_RECORDS= select * from CREQCMR.CMR_CLONING_QUEUE where \
STATUS in ('PENDING','IN_PROG','LEGACY_ERR','LEGACY_OK','LEGACYSKIP','RDC_INPROG','RDC_ERR') \
and CLONING_PROCESS_CD in ('LEGACY','LEGACYSKIP')

CLONING_KNA1_COUNT=select count(*) from SAPR3.KNA1 k where k.KATR6=:KATR6 and k.MANDT=:MANDT and k.ZZKV_CUSNO=:ZZKV_CUSNO \
AND (k.AUFSD <> '93' OR k.LOEVM <> 'X') \
AND not exists (select 1  \
         from CREQCMR.CMR_CLONING_QUEUE q \
         where k.KATR6 = q.CMR_ISSUING_CNTRY \
		 and k.ZZKV_CUSNO = q.CMR_NO)

CLONING_CMR_CLONING_RDC_REF_PENDING= select r.* from CREQCMR.RDC_CLONING_REFN r where \
r.CMR_CLONING_PROCESS_ID = :ID \
and r.CMR_NO = :CMR \
and r.CMR_ISSUING_CNTRY = :CNTRY \
and r.STATUS in ('P','R') \
and (r.TARGET_KUNNR is null or r.TARGET_KUNNR ='')

CLONING_CMR_CLONING_RDC_REF_PENDING_CHILD= select r.* from CREQCMR.RDC_CLONING_REFN r where \
r.CMR_CLONING_PROCESS_ID = :ID \
and r.CMR_NO = :CMR \
and r.CMR_ISSUING_CNTRY = :CNTRY \
and r.STATUS in ('P','R') \
and (r.TARGET_KUNNR is not null or r.TARGET_KUNNR <> '')

CLONING_CMR_CLONING_RDC_REF_PENDING_DC= select r.* from CREQCMR.RDC_CLONING_REFN r where \
r.CMR_CLONING_PROCESS_ID = :ID \
and r.CMR_NO = :CMR \
and r.CMR_ISSUING_CNTRY IN (<CMR_ISSUING_CNTRY>) \
and r.STATUS in ('P','R') \
and (r.TARGET_KUNNR is null or r.TARGET_KUNNR ='')

CLONING_CMR_CLONING_RDC_REF_PENDING_CHILD_DC= select r.* from CREQCMR.RDC_CLONING_REFN r where \
r.CMR_CLONING_PROCESS_ID = :ID \
and r.CMR_NO = :CMR \
and r.CMR_ISSUING_CNTRY IN (<CMR_ISSUING_CNTRY>) \
and r.STATUS in ('P','R') \
and (r.TARGET_KUNNR is not null or r.TARGET_KUNNR <> '')

CLONING_CMR_STATUS_CHK= select distinct STATUS from CREQCMR.RDC_CLONING_REFN where CMR_CLONING_PROCESS_ID= :ID and CMR_NO= :CMR_NO \
and CMR_ISSUING_CNTRY = :CNTRY

CLONING_CMR_STATUS_CHK_DC= select distinct STATUS from CREQCMR.RDC_CLONING_REFN where CMR_CLONING_PROCESS_ID= :ID and CMR_NO= :CMR_NO \
and CMR_ISSUING_CNTRY IN (<CMR_ISSUING_CNTRY>)

GET.KNB1.RECORD=select * from SAPR3.KNB1 where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNVV.RECORD=select * from SAPR3.KNVV where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNEX.RECORD=select * from SAPR3.KNEX where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNVP.RECORD=select * from SAPR3.KNVP where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.ADDLCTRYDATA.RECORD=select * from SAPR3.ADDLCTRYDATA where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNA1ADDLBILLING.RECORD=select * from SAPR3.KNA1_ADDL_BILLING where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.SADR.RECORD=select * from SAPR3.SADR where MANDT = :MANDT and ADRNR = :ADRNR WITH UR
GET.KNVK.RECORD=select * from SAPR3.KNVK where MANDT = :MANDT and KUNNR = :KUNNR WITH UR
GET.KNVI.CURRENT=select * from SAPR3.KNVI where MANDT = :MANDT and KUNNR = :KUNNR WITH UR
GET.KUNNR_EXT.RECORD=Select * from SAPR3.KUNNR_EXT WHERE KUNNR = :KUNNR AND MANDT= :MANDT WITH UR
GET.KNBK.RECORD=select * from SAPR3.KNBK where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNVA.RECORD=select * from SAPR3.KNVA where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNVL.RECORD=select * from SAPR3.KNVL where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.SIZEINFO.RECORD=select * from SAPR3.SIZEINFO where KUNNR = :KUNNR and MANDT = :MANDT WITH UR
GET.KNB1.RECORDS.BY.ZZKV_CUSNO=SELECT * FROM SAPR3.KNB1 WHERE KUNNR IN (SELECT KUNNR FROM SAPR3.KNA1  WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND  KATR6 = :KATR6 AND MANDT = :MANDT) AND MANDT = :MANDT

CLONING_CEE_DUPLICATE_CREATE= SELECT RCYAA from CMRDB2D.CMRTCUST where RCUXA = :CMR_NO \
and RCYAA in ('607','358','626','651','694','695','787','363','359','889','741') 

GET.KNA1.ZZKV_CUSNO.DUPLICATE_CHECK=SELECT KUNNR, MANDT, ZZKV_CUSNO, KTOKD, BRAN5, KATR6, LAND1 FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6 = :KATR6 

GET.KNA1.KUKLA_VAL=SELECT KUKLA FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6 = :KATR6 

GET.KEY_AUTO_GEN.SEQNO=SELECT SRANGE,\
       ERANGE,\
       LST_USED,\
       CASE \
           WHEN (TYPE LIKE 'ALPHA%') THEN 'ALPHA'  WHEN (type like 'CHAR%') then 'CHAR' \
           WHEN (TYPE LIKE 'NUM%') THEN 'NUM' ELSE '0' END   AS TYPE, REPLACE(TYPE,CASE WHEN (TYPE LIKE 'ALPHA%') THEN 'ALPHA' \
           WHEN (TYPE LIKE 'CHAR%') THEN 'CHAR' WHEN (TYPE LIKE 'NUM%') THEN 'NUM' \
           ELSE '0' \
       END, \
       '0') AS KEY_LENGTH, \
          WARNING_NUM \
FROM SAPR3.KEY_AUTO_GEN A \
WHERE MANDT = :MANDT AND KATR6 = :KATR6 AND KEYID = :KEYID WITH UR

GET.WW_STATE_PROV_CD= SELECT STATE_PROV_CD, '' FROM CMMA.REFT_STATE_PROV_W WHERE STATE_PROV_DESC= :STATE_PROV_DESC WITH UR
GET.CN_STATE_PROV_CD= SELECT STATE_PROV_CD, '' FROM CMMA.REFT_STATE_PROV_W WHERE STATE_PROV_DESC LIKE :STATE_PROV_DESC AND SUBSTRING((STATE_PROV_CD),1,1) > '9' WITH UR
GET.CN_CITY_TXT=SELECT TRIM(TXT) TXT, '' FROM CREQCMR.LOV WHERE CD = :CD AND FIELD_ID = '##DropDownCityChina' AND CMR_ISSUING_CNTRY = '641' ORDER BY CD ASC FOR READ ONLY WITH UR
GET.PROCESSING_TYPE= SELECT PROCESSING_TYP from CREQCMR.SUPP_CNTRY where CNTRY_CD= :CNTRY and AUTO_PROC_ENABLED='Y'

CLONING.KNA1_MANDT_CMRNO=SELECT * FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND ZZKV_CUSNO =:CMR_NO \
AND AUFSD NOT IN ('93','CL') \
AND LOEVM <> 'X'

QUERY.VALIDATOR.LANDED_IT=select LAND_CNTRY, '' \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZI01' 

DATA.GETCMRNO.MT=select cmr_no from CREQCMR.DATA where REQ_ID=:REQ_ID
ADMIN.GETREQTYPE.MT=select req_type from CREQCMR.ADMIN where REQ_ID=:REQ_ID
ADDRESS.GETADDRSEQ.MT=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID
GET.ABBRLOC.DATLT=SELECT DATLT, MANDT, KUNNR, LAND1 FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
AND LAND1 = 'MT' \
WITH UR

ADMIN.GETREQTYPE.CA=select req_type from CREQCMR.ADMIN where REQ_ID=:REQ_ID
ADDR.UPDATE.CUSTNM1.CA=update CREQCMR.ADDR set CUST_NM1 = :CUST_NM1 where REQ_ID = :REQ_ID

GET.ORDER_BLOCK_BY_REQID=SELECT CUST_ACCT_TYP, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
DELETE_KNA1_COUNT=SELECT KATR10, '' from SAPR3.KNA1 where ZZKV_CUSNO= :CMR_NO and KATR6= :CNTRY and MANDT = :MANDT WITH UR

BATCH.GET_UPDATED_ADDR_FOR_UPDATE_ORDERED=select * \
from creqcmr.addr \
where req_id = :REQ_ID

#CN 2.0
QUERY.GET.ADDR_BY_REQID=SELECT REQ_ID, ADDR_TYPE, ADDR_SEQ, CUST_NM1, CUST_NM2, ADDR_TXT, ADDR_TXT_2, CITY1 FROM CREQCMR.ADDR WHERE REQ_ID = :REQ_ID
QUERY.GET.ADDRRDC_BY_REQID=SELECT REQ_ID, ADDR_TYPE, ADDR_SEQ, CUST_NM1, CUST_NM2, ADDR_TXT, ADDR_TXT_2, CITY1 FROM CREQCMR.ADDR_RDC WHERE REQ_ID = :REQ_ID
QUERY.GET.INTLADDR_BY_REQID=select REQ_ID, ADDR_TYPE, ADDR_SEQ, INTL_CUST_NM1, INTL_CUST_NM2, ADDR_TXT, INTL_CUST_NM4, CITY1 from CREQCMR.INTL_ADDR where REQ_ID = :REQ_ID
QUERY.GET.INTLADDRRDC_BY_REQID=select REQ_ID, ADDR_TYPE, ADDR_SEQ, INTL_CUST_NM1, INTL_CUST_NM2, ADDR_TXT, INTL_CUST_NM4, CITY1 from CREQCMR.INTL_ADDR_RDC where REQ_ID = :REQ_ID
QUERY.GET.SPECIAL_SEARCH_TERM=SELECT CD, '' FROM CREQCMR.LOV WHERE FIELD_ID = :FIELD_ID AND CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY
QUERY.GET.KNA1_BY_CMRNO=SELECT KUKLA, '' FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND MANDT = :MANDT AND KATR6 = :KATR6 AND KTOKD = 'ZS01' AND AUFSD <> '93' AND LOEVM <> 'X'
QUERY.ADDR.GET.INTLCUSTNM4.BY_REQID = select INTL_CUST_NM4,'' from CREQCMR.INTL_ADDR WHERE REQ_ID = :REQ_ID and ADDR_TYPE = 'ZS01'
QUERY.ADDR.GET.INTLINFO.BY_REQID=SELECT INTL_CUST_NM1, INTL_CUST_NM2, ADDR_TXT, INTL_CUST_NM4, CITY1, CITY2 FROM CREQCMR.INTL_ADDR_RDC WHERE REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'
QUERY.GET.VAT_DATA_RDC=SELECT VAT,'' FROM CREQCMR.DATA_RDC where REQ_ID=:REQ_ID 
QUERY.GET.CUSTNM_DATA_RDC=SELECT CUST_NM1 , CUST_NM2 FROM CREQCMR.ADDR_RDC WHERE REQ_ID=:REQ_ID AND ADDR_TYPE=:ADDR_TYPE

CN.FIND_GBG=select bg.BUYING_GROUP_ID, bg.BUYING_GROUP_NAME, gbg.GLOBAL_BUYING_GROUP_ID, gbg.GLOBAL_BUYING_GROUP_NAME, ext.REQUEST_ID, count(1) \
from SAPR3.BUYING_GROUP bg, SAPR3.BUYING_GROUP_EXT ext, SAPR3.GLOBAL_BUYING_GROUP gbg, SAPR3.KDUNS_NEW duns, SAPR3.KNA1 kna1 \
where duns.MANDT = bg.MANDT \
and duns.MANDT = ext.MANDT \
and duns.MANDT = gbg.MANDT \
and duns.MANDT = kna1.MANDT \
and duns.KUNNR = ext.KUNNR \
and duns.KUNNR = kna1.KUNNR \
and ext.BUYING_GROUP_ID = bg.BUYING_GROUP_ID \
and bg.GLOBAL_BUYING_GROUP_ID = gbg.GLOBAL_BUYING_GROUP_ID \
and duns.MANDT = :MANDT \
and duns.DUNS_NO = :DUNS_NO \
group by bg.BUYING_GROUP_ID, bg.BUYING_GROUP_NAME, gbg.GLOBAL_BUYING_GROUP_ID, gbg.GLOBAL_BUYING_GROUP_NAME, ext.REQUEST_ID \
order by 6 desc 

CN.FIND_DUPLICATE_BY_DUNS=select DISTINCT kna1.ZZKV_CUSNO, kna1.AUFSD, kna1.KUKLA, kna1.KTOKD, kna1.ZZKV_SEQNO, kna1.NAME1, KNA1.NAME2, KNA1.BRAN3, KNA1.SORTL, \
duns.DUNS_NO, sadr.ADRNR, sadr.NAME1, sadr.NAME2, sadr.ORT01, sadr.ORT02, sadr.STRAS, sadr.NAME4 \
from SAPR3.KNA1 kna1, SAPR3.KDUNS_NEW duns, SAPR3.SADR sadr \
where kna1.MANDT = duns.MANDT \
and sadr.MANDT = kna1.MANDT \
and kna1.KUNNR = duns.KUNNR \
and sadr.ADRNR = kna1.ADRNR \
and kna1.AUFSD != '93' \
and kna1.KTOKD = :KTOKD \
and sadr.LAND1 = :LAND1 \
and kna1.MANDT = :MANDT \
and duns.DUNS_NO 

CN.FIND_GBG=select bg.BUYING_GROUP_ID, bg.BUYING_GROUP_NAME, gbg.GLOBAL_BUYING_GROUP_ID, gbg.GLOBAL_BUYING_GROUP_NAME, ext.REQUEST_ID, count(1) \
from SAPR3.BUYING_GROUP bg, SAPR3.BUYING_GROUP_EXT ext, SAPR3.GLOBAL_BUYING_GROUP gbg, SAPR3.KDUNS_NEW duns, SAPR3.KNA1 kna1 \
where duns.MANDT = bg.MANDT \
and duns.MANDT = ext.MANDT \
and duns.MANDT = gbg.MANDT \
and duns.MANDT = kna1.MANDT \
and duns.KUNNR = ext.KUNNR \
and duns.KUNNR = kna1.KUNNR \
and ext.BUYING_GROUP_ID = bg.BUYING_GROUP_ID \
and bg.GLOBAL_BUYING_GROUP_ID = gbg.GLOBAL_BUYING_GROUP_ID \
and duns.MANDT = :MANDT \
and duns.DUNS_NO = :DUNS_NO \
group by bg.BUYING_GROUP_ID, bg.BUYING_GROUP_NAME, gbg.GLOBAL_BUYING_GROUP_ID, gbg.GLOBAL_BUYING_GROUP_NAME, ext.REQUEST_ID \
order by 6 desc 

CN.FIND_DUPLICATE_BY_DUNS=select DISTINCT kna1.ZZKV_CUSNO, kna1.AUFSD, kna1.KUKLA, kna1.KTOKD, kna1.ZZKV_SEQNO, kna1.NAME1, KNA1.NAME2, KNA1.BRAN3, KNA1.SORTL, \
duns.DUNS_NO, sadr.ADRNR, sadr.NAME1, sadr.NAME2, sadr.ORT01, sadr.ORT02, sadr.STRAS, sadr.NAME4 \
from SAPR3.KNA1 kna1, SAPR3.KDUNS_NEW duns, SAPR3.SADR sadr \
where kna1.MANDT = duns.MANDT \
and sadr.MANDT = kna1.MANDT \
and kna1.KUNNR = duns.KUNNR \
and sadr.ADRNR = kna1.ADRNR \
and kna1.AUFSD != '93' \
and kna1.KTOKD = :KTOKD \
and sadr.LAND1 = :LAND1 \
and kna1.MANDT = :MANDT \
and duns.DUNS_NO 

GET.ADDR.SEARCH_BY_REQID=select * FROM CREQCMR.ADDR where REQ_ID= :REQ_ID

#AP,CN Cov.
QUERY.GET.INAC_BY_CLUSTER = select CD, CMT from CREQCMR.LOV where FIELD_ID = '##INACCode' and CMR_ISSUING_CNTRY = :ISSUING_CNTRY and CMT like :CMT
QUERY.GET.ISULIST.BYISIC = select ISU_CD, '' from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and REP_TEAM_CD like :REP_TEAM_CD
QUERY.GET.DESC_BY_CLUSTER = SELECT CLUSTER_DESC, AP_CUST_CLUSTER_ID FROM CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY = :ISSUING_CNTRY AND AP_CUST_CLUSTER_ID = :CLUSTER
QUERY.GET_ZS01 = select CUST_NM1, ADDR_TXT, POST_CD, CITY1, STATE_PROV from CREQCMR.ADDR where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'
QUERY.GET_STATE_DESC = select STATE_PROV_DESC,'' from CMMA.REFT_STATE_PROV_W where STATE_PROV_CD = :STATE_PROV_CD and REFT_COUNTRY_KEY = '106'
QUERY.GET_ZS01_GST_VALIDATE = select CUST_NM1, CUST_NM2, ADDR_TXT, POST_CD, CITY1, STATE_PROV, LAND_CNTRY from CREQCMR.ADDR where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'

QUERY.CHECK.CLUSTER=SELECT 1,'' from CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY=:ISSUING_CNTRY AND AP_CUST_CLUSTER_ID=:AP_CUST_CLUSTER_ID
QUERY.GET.CLUSTER_BY_INACCD=SELECT AP_CUST_CLUSTER_ID,'' from CREQCMR.AP_CUST_CLUSTER_TIER_MAP WHERE ISSUING_CNTRY=:ISSUING_CNTRY AND UPDT_BY LIKE :INACCD
QUERY.GET.CLUSTER_DATA_RDC=SELECT AP_CUST_CLUSTER_ID,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID=:REQ_ID
QUERY.GET.SEARCH_TERM_DATA_RDC=SELECT SEARCH_TERM,'' FROM CREQCMR.DATA_RDC WHERE REQ_ID=:REQ_ID

QUERY.GET_PARTNER_VAT_EXCEPTIONS=select VAT_EXCEPTION,'' from CMMA.PARTNER_EXCEPTIONS where SERVICE_ID = :SERVICE_ID and CMR_ISSUING_CNTRY = :COUNTRY
QUERY.GET_COUNTRY_VAT_SETTINGS=select REQUIRED,'' from CREQCMR.FIELD_INFO where FIELD_ID = '##VAT' and CMR_ISSUING_CNTRY = :ISSUING_CNTRY

QUERY.GET_CLUSTER_BY_INDUSTRYCLASS=SELECT CD,'' FROM CREQCMR.LOV WHERE FIELD_ID = '##IndustryClassClusterMap' AND CMR_ISSUING_CNTRY = :CNTRY AND TXT LIKE :TXT

GBG.QUERY_BY_CMRNO = select gbg.GLOBAL_BUYING_GROUP_ID, gbg.GLOBAL_BUYING_GROUP_NAME, bg.BUYING_GROUP_ID, bg.BUYING_GROUP_NAME, ext.REQUEST_ID,info.INTL_ACCOUNT_TYPE, count(*) \
from SAPR3.BUYING_GROUP bg, SAPR3.GLOBAL_BUYING_GROUP gbg \
left outer join SAPR3.BUYING_GROUP_EXT ext \
  on bg.BUYING_GROUP_ID = ext.BUYING_GROUP_ID \
  and bg.MANDT = ext.MANDT \
left outer join SAPR3.GBG_SUPPL_INFO info \
  on gbg.MANDT = info.MANDT \
  and gbg.GLOBAL_BUYING_GROUP_ID = info.GLOBAL_BUYING_GROUP_ID \
left outer join SAPR3.KNA1 kna1 \
  on ext.KUNNR = kna1.KUNNR \
  and ext.MANDT = kna1.MANDT \
left outer join SAPR3.KDUNS_NEW duns \
  on kna1.KUNNR = duns.KUNNR \
  and kna1.MANDT = duns.MANDT \
where bg.MANDT = :MANDT  \
and bg.MANDT = gbg.MANDT \
and bg.GLOBAL_BUYING_GROUP_ID = gbg.GLOBAL_BUYING_GROUP_ID \
and kna1.KATR10 <> 'GTS' \
and bg.ACTIVE_STATUS = '1' \
and kna1.zzkv_cusno = :CMR_NO \
and kna1.katr6 = :KATR6 \
group by gbg.GLOBAL_BUYING_GROUP_ID, gbg.GLOBAL_BUYING_GROUP_NAME, bg.BUYING_GROUP_ID, bg.BUYING_GROUP_NAME, ext.REQUEST_ID,info.INTL_ACCOUNT_TYPE

GETADDRSEQ.NON_PG01.MAX=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID
QUERY.GET_STATE_DESC = select STATE_PROV_DESC,'' from CMMA.REFT_STATE_PROV_W where STATE_PROV_CD = :STATE_PROV_CD and REFT_COUNTRY_KEY = '106'
UPDATE.KEY_AUTO_GEN.LST_USED=UPDATE SAPR3.KEY_AUTO_GEN \
SET LST_USED = :LST_USED \
WHERE MANDT = :MANDT \
AND KATR6 = :KATR6 \
AND KEYID = :KEYID

CMR_NO.GENERATE_MA=with CMR_TABLE(id) as ( \
    select $MIN from SYSIBM.SYSDUMMY1     \
    union all \
    select id + 1 from CMR_TABLE where id < $MAX \
) \
select * from (select LPAD(id,6,'0') CMR_NO from CMR_TABLE) \
where CMR_NO not in (select ZZKV_CUSNO \
           from SAPR3.KNA1 \
                       where KATR6 = :LOC1 \
                       and MANDT = :MANDT) \
and CMR_NO not in (select ZZKV_CUSNO \
           from SAPR3.KNA1 \
                       where KATR6 = :LOC2 \
                       and MANDT = :MANDT) \
and CMR_NO not in (select CMR_NO \
			from CREQCMR.RESERVED_CMR_NOS \
					  where MANDT = :MANDT \
					  and CMR_ISSUING_CNTRY = :LOC1) \
and CMR_NO not in (select CMR_NO \
			from CREQCMR.RESERVED_CMR_NOS \
					  where MANDT = :MANDT \
					  and CMR_ISSUING_CNTRY = :LOC2) \
order by CMR_NO 

GET.ADDR.SEARCH_BY_REQID=select * FROM CREQCMR.ADDR where REQ_ID= :REQ_ID
LEGACYD.GETCUST_DUP_CREATE=select * from CMRDB2D.CMRTCUST cust where cust.RCYAA = :COUNTRY and cust.RCUXA = :CMR_NO and cust.STATUS='A' \
AND not exists (select 1  \
         from CREQCMR.CMR_CLONING_QUEUE q \
         where cust.RCYAA = q.CMR_ISSUING_CNTRY \
		 and cust.RCUXA = q.CMR_NO)
		 
GET.TRANS.SERVICE.RECORD= select * from SAPR3.TRANS_SERVICE where CMR_SYS_LOC_CD= :COUNTRY and MPP_NUM = :KUNNR	

SERVICE.TRANS_SERV.ID=SELECT CONCAT('CL',RIGHT(TRANSLATE(CHAR(TIMESTAMP(GENERATE_UNIQUE())),'AB','.-'),18)) FROM SYSIBM.SYSDUMMY1

LD.GET.IERP.SOLDTO.BRAN5=SELECT BRAN5, MANDT, KUNNR FROM SAPR3.KNA1 \
WHERE MANDT = :MANDT \
AND ZZKV_CUSNO = :CMR \
AND KATR6 = :KATR6 \
AND KTOKD = 'ZS01' \
AND AUFSD <> '90'	 

CLONING_LEGACY_CUST_COUNT=select count(*) from CMRDB2D.CMRTCUST where RCYAA = :COUNTRY and RCUXA = :CMR_NO

CLONING.KNVP.EXIST.RECORD=select count(1) from SAPR3.KNVP where KUNNR = :KUNNR and MANDT = :MANDT and PARVW = :PARVW and PARZA = :PARZA and VKORG = :VKORG and SPART = :SPART and VTWEG = :VTWEG

CLONING.KNVV.EXIST.RECORD=select count(1) from SAPR3.KNVV where KUNNR = :KUNNR and MANDT = :MANDT and VKORG = :VKORG and SPART = :SPART and VTWEG = :VTWEG

GET.KNVI.DEFAULT=select distinct KNVV.MANDT, KNVV.KUNNR, T001.LAND1, TSTL.TATYP, \
    case \
        when TSTL.TATYP = 'UTXJ' THEN 'X' \
        else '1' \
    end AS TAXKD \
from SAPR3.KNVV KNVV, SAPR3.TVKO TVKO, SAPR3.T001 T001, SAPR3.TSTL TSTL  \
where KNVV.MANDT = TVKO.MANDT  \
and KNVV.MANDT = T001.MANDT  \
and KNVV.VKORG = TVKO.VKORG  \
AND TVKO.BUKRS = T001.BUKRS  \
and TSTL.TALND = T001.LAND1  \
and KNVV.KUNNR = :KUNNR \
and KNVV.MANDT = :MANDT \
UNION \
select distinct KNVV.MANDT, KNVV.KUNNR, T001W.LAND1, TSTL.TATYP,  \
    case \
        when TSTL.TATYP = 'UTXJ' THEN 'X' \
        else '1' \
    end AS TAXKD \
from SAPR3.KNVV KNVV, SAPR3.T001W T001W, SAPR3.TVKWZ TVKWZ, SAPR3.TSTL TSTL \
where KNVV.VKORG = TVKWZ.VKORG  \
and KNVV.VTWEG = TVKWZ.VTWEG  \
and T001W.WERKS = TVKWZ.WERKS  \
AND TSTL.TALND = T001W.LAND1  \
and KNVV.KUNNR = :KUNNR \
and KNVV.MANDT = :MANDT \
ORDER BY 1, 2, 3, 4

CLONING.KNA1_MANDT_CMRNO_JP=SELECT * FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND ZZKV_CUSNO =:CMR_NO \
AND ZZKV_SEQNO in ('A','B','C','D','E','F','G','H') and KTOKD <> 'ZS01' \
AND AUFSD NOT IN ('93','CL') \
AND LOEVM <> 'X' \
AND not exists (select 1  \
FROM SAPR3.KNA1 \
WHERE KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND ZZKV_CUSNO =:CLONED_CMR_NO \
AND ZZKV_SEQNO in ('A','B','C','D','E','F','G','H') and KTOKD <> 'ZS01')
QUERY.CMR_CHECK_PAYGO=select 1,'' FROM SAPR3.KNA1 where ZZKV_CUSNO= :ZZKV_CUSNO and MANDT=:MANDT and KATR6= :KATR6 and KTOKD='ZS01' and AUFSD='PG'
QUERY.PAYGO.CHECK.CRN=select 1,'' from CMMA.FINDCMR_PARTNERS where SERVICE_ID = :SYST_ID and PAYGO_ACCREDITED = 'Y'
#CA
QUERY.GET.SBODESC=select SALES_BO_DESC,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and SALES_BO_CD = :SALES_BO_CD
QUERY.GET.CMRINFO.IMPORTED_CA = select SALES_BO_CD, REP_TEAM_MEMBER_NO, ISIC_CD, SUB_INDUSTRY_CD, INAC_CD, TAX_CD1, INSTALL_BRANCH_OFF, ADMIN_DEPT_CD, CREDIT_CD from creqcmr.data_rdc where REQ_ID=:REQ_ID
ADDRESS.GETAVAILSEQ= select DISTINCT(cast(substring(ADDR_SEQ,0,6) AS INT) + 1) AS AVAIL_SEQ FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND (cast(substring(ADDR_SEQ,0,6) AS INT) + 1) NOT IN (SELECT DISTINCT(cast(substring(ADDR_SEQ,0,6) AS INT)) FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID) \
ORDER BY AVAIL_SEQ fetch first 1 rows only
QUERY.GET.CA.CSBRANCH.LOVTXT=SELECT TXT, '' FROM CREQCMR.LOV WHERE FIELD_ID = '##CSBranch' AND CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY AND CD = :CD

ND.GET.ZS01KATR10=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND KTOKD='ZS01' \
AND LOEVM <> 'X' \
AND AUFSD NOT IN ('90','93') \

IL.GET.ZS01KATR10=SELECT K.* \
FROM SAPR3.KNA1 K \
WHERE MANDT=:MANDT \
AND KATR6=:KATR6 \
AND ZZKV_CUSNO=:CMR \
AND KTOKD='ZS01' \
AND LOEVM <> 'X' \
AND AUFSD NOT IN ('90','93') \
AND EXISTS (SELECT RCUXA FROM CMRDB2D.CMRTADDR WHERE RCYAA=:KATR6 AND RCUXA=:CMR AND ADDRMAIL='Y')

QUERY.CHECK.ADDR.UPDATED_IL=select 1,'' \
from CREQCMR.ADDR curr \
left outer join CREQCMR.ADDR_RDC old \
on curr.REQ_ID = old.REQ_ID \
and curr.ADDR_TYPE = old.ADDR_TYPE and curr.ADDR_SEQ = old.ADDR_SEQ \
where curr.REQ_ID = :REQ_ID \
and curr.addr_type = :ADDR_TYPE \
and (curr.cust_nm1 <> old.cust_nm1 or curr.cust_nm2 <> old.cust_nm2) \

QUERY.ND.MASS_ADDR.DPL_CHECK=SELECT DPL_CHK_RESULT, '' FROM CREQCMR.MASS_UPDT_ADDR WHERE PAR_REQ_ID = :REQ_ID and ITERATION_ID = :ITER_ID \
AND ((CUST_NM1 <> '' OR CUST_NM1 <> NULL) OR (CUST_NM2 <> '' OR CUST_NM2 <> NULL))

ND.GET.KNVP.PARVW=SELECT PARVW,MANDT,KUNNR FROM SAPR3.KNVP WHERE KUNNR = :KUNNR AND MANDT = :MANDT

ND.ISSHAREZP01=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDRBILL = 'Y'
ND.ISSHAREZS02=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDREPL = 'Y'
ND.ISSHAREZD01=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDRSHIP = 'Y'
ND.ISSHAREZI01=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ AND ADDRINST = 'Y'
ND.GET_SOLDTO_SEQ_FROM_LEGACY=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRMAIL = 'Y'
ND.GET.ADRND.FROMKNA1=SELECT ZZKV_SEQNO FROM sapr3.kna1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT and ZZKV_CUSNO = :ZZKV_CUSNO and KTOKD = 'ZS01' and AUFSD = '90'
ND.ISSECONDARYINST=SELECT ADDRINST FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ
ND.ISSECONDARYBILL=SELECT ADDRBILL FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ
ND.ISSECONDARYSHIP=SELECT ADDRSHIP FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ
ND.ISSECONDARYEPL=SELECT ADDREPL FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ
ND.ADDR.UPDATE.ZI01SHARE.Y.CHANGEINCD=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'Y' WHERE REQ_ID=:REQ_ID AND ADDR_SEQ =:SEQ
ND.GETLEGACYADDRESSSEQ=SELECT ADDRNO FROM CMRDB2D.CMRTADDR WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA AND ADDRNO = :SEQ
ND.GETSOURCEIDFROMADMIN=SELECT SOURCE_SYST_ID FROM CREQCMR.ADMIN WHERE REQ_ID=:REQ_ID
ND.ADDR.UPDATE.SHARE.TRCE=DELETE from CREQCMR.ADDR where REQ_ID = :REQ_ID AND ADDR_SEQ NOT IN (SELECT ZZKV_SEQNO FROM SAPR3.KNA1 WHERE KATR6 = :KATR6 AND MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO)
ND.ADDR.UPDATE.N.CHANGEINCD.TRCE=UPDATE CREQCMR.ADDR set CHANGED_INDC = 'N' WHERE REQ_ID=:REQ_ID and ROL is NULL
ND.ADDR.Y.IMPORTIND=update CREQCMR.ADDR set IMPORT_IND = 'Y' where REQ_ID = :REQ_ID
#get ACAdmin/salesRep from LEGACY
ND.GETSALESREP=SELECT REMXA FROM CMRDB2D.CMRTCUST WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA 
ND.GETACADMIN=SELECT RACDS FROM CMRDB2D.CMRTCEXT WHERE RCYAA = :RCYAA AND RCUXA = :RCUXA 
QUERY.GET.ND.USER_ROLE=SELECT COUNT(1) AS CNT, '' FROM CMMA.USER_ROLES WHERE USER_ID = :USERID AND ROLE_ID IN('ADMIN', 'PROCESSOR', 'CMDE')
QUERY.GET.ND.USER_PROC_CENTER_NM=SELECT PROC_CENTER_NM, '' FROM CREQCMR.USER_PREF WHERE REQUESTER_ID = :USERID
QUERY.GET.ND.MODE_OF_PAYMENT_FOR_DATA_RDC=SELECT MODE_OF_PAYMENT, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
GET.KNA1.SPRAS=SELECT SPRAS, ZZKV_CUSNO FROM SAPR3.KNA1 WHERE ZZKV_CUSNO = :ZZKV_CUSNO AND KATR6 = :KATR6 AND MANDT = :MANDT AND KTOKD = 'ZS01' AND AUFSD = :AUFSD AND LOEVM != 'X'
NORDX.GETMADDRSEQ_CREATECMR=select MAX(cast(ADDR_SEQ as int))||'','DUMMY' from CREQCMR.ADDR where REQ_ID=:REQ_ID \
AND ADDR_SEQ NOT IN ('598', '599') \
AND trim(translate(ADDR_SEQ,'', '0123456789')) = ''

#KUNNR_U_NORDX
GET.KNA1.KUNNR_U_NORDX=SELECT KUNNR,ZZKV_CUSNO FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
AND KATR6 = :KATR6 \
AND MANDT = :MANDT \
AND KTOKD = 'ZS01' \
AND AUFSD = :AUFSD \
AND LOEVM != 'X' \
WITH UR

CLONING.GET_STXL_BYPARNR=select * from SAPR3.STXL where MANDT = :MANDT and TDNAME = :PARNR and TDOBJECT = 'KNVK'

#CA
QUERY.GET.SBODESC=select SALES_BO_DESC,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and SALES_BO_CD = :SALES_BO_CD
QUERY.GET.CMRINFO.IMPORTED_CA = select SALES_BO_CD, REP_TEAM_MEMBER_NO, ISIC_CD, SUB_INDUSTRY_CD, INAC_CD, TAX_CD1, INSTALL_BRANCH_OFF, ADMIN_DEPT_CD, CREDIT_CD from creqcmr.data_rdc where REQ_ID=:REQ_ID
ADDRESS.GETAVAILSEQ= select DISTINCT(cast(substring(ADDR_SEQ,0,6) AS INT) + 1) AS AVAIL_SEQ FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND (cast(substring(ADDR_SEQ,0,6) AS INT) + 1) NOT IN (SELECT DISTINCT(cast(substring(ADDR_SEQ,0,6) AS INT)) FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID) \
ORDER BY AVAIL_SEQ fetch first 1 rows only

QUERY.GET.SBODESC=select SALES_BO_DESC,'' from CREQCMR.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and SALES_BO_CD = :SALES_BO_CD
CA.QUERY.GET.CUSTSCENARIOS_BY_CUSTTYP=SELECT * FROM CREQCMR.CUST_SCENARIOS WHERE LOC_CD = '649' AND CUST_TYP = :CUST_TYP
AUTO.US.CHECK_IF_ADDRESS_EXIST_ZP01PAYGO=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ \
and LAND_CNTRY = :LAND_CNTRY and CITY1= :CITY and ADDR_TYPE IN ('PG01', 'ZI01')

CA.GET.KNA1_ZZKV_SEQNO=select ZZKV_SEQNO from sapr3.kna1 where MANDT = :MANDT and katr6 = :KATR6 AND zzkv_cusno = :ZZKV_CUSNO with ur
CA.GET.ADDRSEQ.BY_REQID=select ADDR_SEQ from CREQCMR.ADDR where REQ_ID = :REQ_ID
QUERY.CA.CMR_NO_EXIST=SELECT 'Y', '' from SAPR3.KNA1 where MANDT = :MANDT and ZZKV_CUSNO = :CMR_NO and KATR6= :CNTRY
QUERY.GET.CUSTCLASS_BY_EFC = select CD, CMT from CREQCMR.LOV where FIELD_ID = '##CustClass' and CMR_ISSUING_CNTRY = :ISSUING_CNTRY and CMT like :CMT

#Batch Mass Create
BATCH.MD.GET.MASS_CREATE=SELECT MASS_CREATE.* FROM CREQCMR.MASS_CREATE MASS_CREATE WHERE PAR_REQ_ID = :REQ_ID AND ITERATION_ID = :ITER_ID AND ROW_STATUS_CD NOT IN ('DONE')

AUTO.CA.GETSBO_BY_COVID=select x.COVID, x.COVTYPE, ke.SELLING_BO_NUM, count(1) FROM SAPR3.KNA1 k, SAPR3.KNA1EXT x, SAPR3.KNVV_EXT ke \
WHERE k.MANDT = x.MANDT \
AND k.KUNNR = x.KUNNR \
AND k.KUNNR = ke.KUNNR \
AND k.KATR6 = '649' \
AND k.MANDT = :MANDT \
AND k.KTOKD = 'ZS01' and k.AUFSD not in ('93', '90') \
AND x.COVTYPE = :COVTYPE \
AND x.COVID = :COVID \
GROUP BY x.COVID, x.COVTYPE, ke.SELLING_BO_NUM ORDER BY count(1) DESC \
WITH UR

QUERY.CMR_CHECK_PAYGO=select 1,'' FROM SAPR3.KNA1 where ZZKV_CUSNO= :ZZKV_CUSNO and MANDT=:MANDT and KATR6= :KATR6 and KTOKD='ZS01' and AUFSD='PG'
QUERY.PAYGO.CHECK.CRN=select 1,'' from CMMA.FINDCMR_PARTNERS where SERVICE_ID = :SYST_ID and PAYGO_ACCREDITED = 'Y'
AUTO.US.CHECK_IF_ADDRESS_EXIST_ZP01PAYGO=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ \
and LAND_CNTRY = :LAND_CNTRY and CITY1= :CITY and ADDR_TYPE IN ('PG01', 'ZI01')

IL.GET.KUNNREXT_CAPIND=SELECT CAP_IND FROM SAPR3.KUNNR_EXT WHERE MANDT = :MANDT AND (KUNNR IN (SELECT KUNNR FROM SAPR3.KNA1 WHERE MANDT=:MANDT AND ZZKV_CUSNO=:ZZKV_CUSNO AND KATR6=:KATR6 AND KTOKD = 'ZS01'))
IL.GET.KNA1_ZS01DUNS=SELECT ZZKV_DUNS, '' FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND ZZKV_CUSNO = :ZZKV_CUSNO AND KATR6 = '755' AND KTOKD = 'ZS01'
QUERY.VAT.IL_ADDR_BY_TYPE=select LAND_CNTRY,'' from CREQCMR.ADDR where REQ_ID = :REQID and ADDR_TYPE = :TYPE order by ADDR_SEQ
IL.GET.COUNTRYCODE_BYCOUNTRYDESC=SELECT COUNTRY_CD, COUNTRY_DESC from CMMA.REFT_COUNTRY_W WHERE UPPER(COUNTRY_DESC) = UPPER(:COUNTRY_DESC)
IL.GET.COUNGTRYCODE_BYLOCALCOUNTRYDESC=SELECT CD, TXT from CREQCMR.LOV where FIELD_ID = '##LandedCountryIsrael' AND TXT = :COUNTRY_DESC
AUTO.GET_PROCESSING_TYPE= SELECT PROCESSING_TYP from CREQCMR.SUPP_CNTRY where CNTRY_CD= :CNTRY and AUTO_PROC_ENABLED='Y'
QUERY.GET.MX_TAX_CODE = select CD, CMT from CREQCMR.LOV where FIELD_ID = '##LocalTax3' and CMR_ISSUING_CNTRY = :ISSUING_CNTRY  and CMT like :CMT
QUERY.CREATE_BY_MODEL_DISABLED=select DISABLE_CREATE_BY_MODEL,'' from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY_CD
QUERY.HIDE_LOCAL_LANG_DATA=select HIDE_LOCAL_LANG_DATA,'' from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY_CD
QUERY.CHECK_CMR_AUFSD_KNA1=SELECT 1, '' FROM SAPR3.KNA1 WHERE MANDT=:MANDT AND ZZKV_CUSNO=:CMR_NO AND KATR6=:CNTRY_CD AND AUFSD=:EMBARGO_CD

BATCH.FIND_MISSING_SAP_NUMBER=SELECT ad.REQ_ID, ad.SAP_NO, ad.ADDR_SEQ ,ad.ADDR_TYPE,d.CMR_NO,ad.LAND_CNTRY, d.CMR_ISSUING_CNTRY FROM CREQCMR.ADMIN a, CREQCMR.SUPP_CNTRY s, CREQCMR.DATA d, CREQCMR.ADDR ad WHERE a.REQ_ID = d.REQ_ID AND ad.REQ_ID = d.REQ_ID AND d.CMR_ISSUING_CNTRY = s.CNTRY_CD AND s.CNTRY_CD = '897' AND s.PROCESSING_TYP IN ('TC','US') AND a.CREATE_TS >= timestamp(current timestamp - 5) AND (nvl(ad.SAP_NO,'') = '') AND a.REQ_STATUS = 'COM'
BATCH.FIND_KUNNR=SELECT * FROM SAPR3.KNA1 WHERE ZZKV_CUSNO=:ZZKV_CUSNO AND KTOKD=:KTOKD AND MANDT=:MANDT
BATCH.GET_ADDR_RECORDS=SELECT * FROM CREQCMR.ADDR WHERE REQ_ID=:REQ_ID AND ADDR_TYPE = :ADDR_TYPE AND ADDR_SEQ=:ADDR_SEQ
QUERY.GET.MX_TAX_CODE = select CD, CMT from CREQCMR.LOV where FIELD_ID = '##LocalTax3' and CMR_ISSUING_CNTRY = :ISSUING_CNTRY and CMT like :CMT

AUTO.CHECK_IF_ADDRESS_EXIST_ON_SOLDTO=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ and lower(CUST_NM1) like lower(:NAME1) \
and LAND_CNTRY = :LAND_CNTRY and lower(CITY1) like lower(:CITY) and ADDR_TYPE= :ADDR_TYPE

#LA
LA.GET.ADDRSEQ.BY_REQID=select cast(ADDR_SEQ as int) from CREQCMR.ADDR where REQ_ID = :REQ_ID

LA.GETCOUNT_COM_NOTIFY = SELECT COUNT(*) \
FROM CREQCMR.ADMIN ADMIN \
LEFT OUTER JOIN TRANSCONN.NOTIFY_REQ NOTIFY_REQ ON ADMIN.REQ_ID=NOTIFY_REQ.REQ_ID \
WHERE NOTIFIED_IND = 'Y' \
AND NOTIFY_REQ.REQ_STATUS = 'COM' \
AND ADMIN.REQ_ID = :REQ_ID

#LA.ARGENTINA
AR.GET_GEOTAXINFORECORDS = select * \
from CREQCMR.GEO_TAX_INFO \
where REQ_ID = :REQ_ID

QUERY.GET.CMRINFO.IMPORTED_LA=select ISIC_CD, SUB_INDUSTRY_CD from creqcmr.data_rdc where REQ_ID=:REQ_ID

GET.LOV.CD_BY_TXT=SELECT CD FROM CREQCMR.LOV WHERE CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY and FIELD_ID = :FIELD_ID and TXT = :TXT
GET.LOV.CD_BY_UPPER_TXT=SELECT CD FROM CREQCMR.LOV WHERE CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY and FIELD_ID = :FIELD_ID and UPPER(TXT) = :TXT
GET.GEO_CITIES.ID_BY_DESC=SELECT CITY_ID FROM CREQCMR.GEO_CITIES WHERE CITY_DESC = :CITY_DESC AND ISSUING_CNTRY = :CMR_ISSUING_CNTRY

LA.GET_LAINTERIM_TAXDATA_BY_KUNNR = SELECT * \
FROM LAINTERIM.TAX_DATA \
WHERE MANDT = :MANDT \
AND KUNNR = :KUNNR \
WITH UR

LA.GET_STXL_ADDL_CONTACTS = SELECT * FROM SAPR3.STXL WHERE MANDT = :MANDT AND TDNAME LIKE (:TDNAME) AND TDID IN ('ZOA1', 'ZOA2', 'ZOA3')

BATCH.MONITOR.LA_RDC_REPROCESS = select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d \
where a.REQ_TYPE IN ('C','U') \
and a.DISABLE_AUTO_PROC ='N' \
and a.REQ_STATUS ='PCO' \
and a.REQ_ID = d.REQ_ID \
and a.RDC_PROCESSING_STATUS = 'N' \
and a.LOCK_IND = 'N' \
and d.CMR_ISSUING_CNTRY in (select CNTRY_CD from CREQCMR.SUPP_CNTRY where PROCESSING_TYP = 'TC' and HOST_SYS_TYP in ('CROS_SSA-Mex', 'CROS_Brazil'))

QUERY.GET.ISU.CTC.BY_SBO=select SALES_BO_CD, ISU_CD, CLIENT_TIER, MRC_CD, REP_TEAM_CD from creqcmr.SALES_BRANCH_OFF where ISSUING_CNTRY = :ISSUING_CNTRY and SALES_BO_CD = :SALES_BO_CD and REP_TEAM_CD not in ('222222', '111222')
GET.SBO.CD.BY.GBG=SELECT CD, TXT, CMT FROM CREQCMR.LOV WHERE CMR_ISSUING_CNTRY = :CMR_ISSUING_CNTRY and FIELD_ID = :FIELD_ID and CD = :CD

LA.GET_MASS_PROCESS_PENDING.RDC=select a.* \
from CREQCMR.ADMIN a, CREQCMR.DATA d, CREQCMR.SUPP_CNTRY s \
where a.LOCK_IND ='N' \
and a.REQ_ID = d.REQ_ID \
and a.REQ_TYPE in ('M', 'N') \
and a.REQ_STATUS= 'PCP' \
and d.CMR_ISSUING_CNTRY = s.CNTRY_CD \
and s.AUTO_PROC_ENABLED = 'Y' \
and (a.DISABLE_AUTO_PROC is null or a.DISABLE_AUTO_PROC = 'N') \
and s.SUPP_REQ_TYPE NOT LIKE('%M0%') \
and s.PROCESSING_TYP ='TC'\
and s.HOST_SYS_TYP in ('CROS_SSA-Mex', 'CROS_Brazil')

GCARS.GET_PENDING.RDC=SELECT * FROM CREQCMR.MASS_FTP_QUEUE WHERE PROC_STATUS IN ('P','E') AND KATR10 = '' \
order by SEQ_NO, SOURCE_NAME
GCARS.GET_RECORDS.RDC=SELECT * FROM SAPR3.KNA1_ADDL_BILLING \
WHERE KUNNR IN (SELECT KUNNR FROM SAPR3.KNA1 WHERE ZZKV_CUSNO= :ZZKV_CUSNO and KATR6 = :KATR6 AND MANDT = :MANDT AND LOEVM = '' AND AUFSD NOT IN ('93','75') AND KTOKD='ZS01')
GCARS.GET_LAST_SEQ.QUEUE=SELECT * FROM CREQCMR.MASS_FTP_QUEUE ORDER BY CREATE_DT DESC FETCH FIRST 1 ROWS ONLY
BR.GET.GCARS_UPDT_QUEUE=SELECT * FROM CREQCMR.MASS_FTP_QUEUE WHERE SOURCE_NAME LIKE :SOURCE_NAME AND PROC_STATUS IN ('P','E','C') ORDER BY CREATE_DT DESC
BR.GET.GCARS_UPDT_QUEUE_BY_SOURCE_NAME_AND_SEQ_NO=SELECT * FROM CREQCMR.MASS_FTP_QUEUE WHERE SOURCE_NAME = :SOURCE_NAME AND SEQ_NO = :SEQ_NO
BR.GET.GCARS_UPDT_QUEUE_BY_PROC_STATUS=SELECT * FROM CREQCMR.MASS_FTP_QUEUE WHERE PROC_STATUS = :PROC_STATUS
BR.GET.GCARS_UPDT_QUEUE_BY_CMR_NO=SELECT * FROM CREQCMR.MASS_FTP_QUEUE WHERE CMR_NO = :CMR_NO
BR.GET.GCARS_UPDT_QUEUE_BY_CREATE_DT=SELECT * FROM CREQCMR.MASS_FTP_QUEUE WHERE CREATE_DT LIKE :CREATE_DT

LA.GET_COLLECTORNO_ON_IMPORT= SELECT NAME1,* FROM SAPR3.KNVK \
WHERE MANDT = :MANDT \
AND KUNNR IN (SELECT KUNNR \
FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :ZZKV_CUSNO \
and katr6 = :KATR6 \
AND KTOKD = :KTOKD)

AUTO.CHECK_IF_ADDRESS_EXIST_ON_SOLDTO=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ and lower(CUST_NM1) like lower(:NAME1) \
and LAND_CNTRY = :LAND_CNTRY and lower(CITY1) like lower(:CITY) and ADDR_TYPE= :ADDR_TYPE

AUTO.DUP_ADDR_EXIST_WITH_SAMETYPE_OR_SOLDTO=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ and lower(CUST_NM1) like lower(:NAME1) \
and LAND_CNTRY = :LAND_CNTRY and lower(CITY1) like lower(:CITY) and (ADDR_TYPE= :ADDR_TYPE OR ADDR_TYPE='ZS01')

AUTO.DUP_ADDR_EXIST_WITH_SAMETYPE=select 1 from CREQCMR.ADDR where REQ_ID= :REQ_ID and ADDR_SEQ != :ADDR_SEQ and lower(CUST_NM1) like lower(:NAME1) \
and LAND_CNTRY = :LAND_CNTRY and lower(CITY1) like lower(:CITY) and (ADDR_TYPE= :ADDR_TYPE)

PDF.GET_MASS_UPDT_DATA=select admin.*, mass_updt.*  ,mass_updt_data.* \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.MASS_UPDT mass_updt \
 on admin.REQ_ID=mass_updt.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt.ITERATION_ID \
left outer join CREQCMR.MASS_UPDT_DATA mass_updt_data \
 on admin.REQ_ID=mass_updt_data.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt_data.ITERATION_ID \
and mass_updt.PAR_REQ_ID=mass_updt_data.PAR_REQ_ID  and mass_updt.seq_No=mass_updt_data.seq_no \
WHERE admin.REQ_ID = :REQ_ID and admin.ITERATION_ID = :ITERATION_ID 

PDF.MASS_UPDATE_ADDR_RECORDS=select admin.*, mass_updt.* ,mass_updt_addr.* \
from CREQCMR.ADMIN admin \
left outer join CREQCMR.MASS_UPDT mass_updt \
 on admin.REQ_ID=mass_updt.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt.ITERATION_ID \
left outer join CREQCMR.MASS_UPDT_ADDR mass_updt_addr \
 on admin.REQ_ID=mass_updt_addr.PAR_REQ_ID   and admin.ITERATION_ID=mass_updt_addr.ITERATION_ID \
 and mass_updt.PAR_REQ_ID=mass_updt_addr.PAR_REQ_ID  and mass_updt.seq_No=mass_updt_addr.seq_no \
WHERE admin.REQ_ID = :REQ_ID and admin.ITERATION_ID = :ITERATION_ID

PDF.MASS_UPTD_CHANGELOG=select DISTINCT c.FIELD, c."OLD", c."NEW" \
from SAPR3.KNA1 k, SAPR3.CHANGELOG c \
left outer join CREQCMR.ADMIN a \
on a.REQ_ID||'' = c.LINENUMBER  \
where k.MANDT = c.MANDT \
and k.KUNNR = c.KUNNR \
and k.KATR6 = :COUNTRY \
and k.ZZKV_CUSNO = :CMR_NO \
and a.REQ_ID= :REQ_ID \
order by c.FIELD desc

GET_TELF2= SELECT TELF2 \
FROM SAPR3.KNA1 \
WHERE ZZKV_CUSNO = :CMR \
and MANDT = :MANDT \
and katr6 = :KATR6 \
AND KTOKD = :KTOKD \
AND ZZKV_SEQNO = :ZZKV_SEQNO

AUTOMATION.HIGH_CONF_CNTY=select NVL2(ACCEPT_HIGH_CONF, 'Y', 'N') from CREQCMR.SUPP_CNTRY where CNTRY_CD = :CNTRY

QUERY.GET_SEQ_NO =select distinct b.zzkv_seqno from SAPR3.KNA1 b left outer join  CMRDB2D.CMRTADDR a \
on a.RCUXA = b.ZZKV_CUSNO \
WHERE a.RCYAA= :RCYAA \
and a.RCUXA = :RCUXA \
and b.KTOKD = 'ZS01' \
and b.MANDT = :MANDT \
and a.RCYAA = b.KATR6

QUERY.GET_SEQ_NO_IE =select distinct b.zzkv_seqno from SAPR3.KNA1 b left outer join  CMRDB2D.CMRTADDR a \
on a.RCUXA = b.ZZKV_CUSNO \
WHERE a.RCYAA= '866' \
and a.RCUXA = :RCUXA \
and b.KTOKD = 'ZS01' \
and b.MANDT = :MANDT \
and b.KATR6 = :RCYAA

LOAD_LANDCNTRY=select CNTRY_CD, DEFAULT_LANDED_CNTRY from CREQCMR.SUPP_CNTRY WITH UR

QUERY.GET.OLD.VAT.VALUE=select vat,'' from CREQCMR.DATA_RDC where REQ_ID = :REQ_ID
QUERY.GET.OLD.VATIND.VALUE=select vat_ind,'' from CREQCMR.DATA_RDC where REQ_ID = :REQ_ID

QUERY.GET.ISSUING.CNTRY.NAME=select sys_loc_desc,SYS_LOC_CD from CMMA.REFT_SYS_LOC_W where SYS_LOC_CD = :SYS_LOC_CD
QUERY.GET_POST_LAND_CNTRY=select POST_CD,LAND_CNTRY \
from CREQCMR.ADDR \
where REQ_ID = :REQID \
and ADDR_TYPE = 'ZS01'

QUERY.GET_CUST_SCENARIOS_BASEDON_CNTRY_CUSTSUBGRP_FIELDID=select LOC_CD,CUST_TYP,FIELD_ID,FIELD_NAME,VALUE,RETAIN_VAL_IND,REQ_IND,PAR_TAB_ID,LOCKED_INDC FROM  CREQCMR.CUST_SCENARIOS \
where LOC_CD = :CNTRY \
and CUST_TYP = :CUSTSUBGRP \
AND FIELD_ID = :FIELDID

QUERY.GET_CLUSTER_BY_GLC=SELECT CD,'' FROM CREQCMR.LOV WHERE CMR_ISSUING_CNTRY = '744' AND FIELD_ID='##Cluster' AND TXT= :TXT 
QUERY.GETZS01STATECITYBYREQID=select STATE_PROV,CITY1, '' from CREQCMR.ADDR where REQ_ID=:REQ_ID and ADDR_TYPE='ZS01'

US.GET.US_COMPANY=SELECT * FROM SAPR3.US_COMPANY WHERE MANDT = :MANDT AND TRIM(COMP_NO) LIKE :COMP_NO ORDER BY UPDATE_DT DESC fetch first 5000 rows only
US.GET.US_COMPANY_BY_COMP_NO=SELECT * FROM SAPR3.US_COMPANY WHERE MANDT = :MANDT AND COMP_NO = :COMP_NO
QUERY.US.US_COMPANY_EXISTS=SELECT 1, '' FROM SAPR3.US_COMPANY WHERE MANDT = :MANDT AND COMP_NO = :COMP_NO
QUERY.US.US_COMPANY_ACTIVE_CMR=SELECT 1, '' FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND ZZKV_NODE1 = :COMP_NO AND LOEVM != 'X' and KATR6='897'
QUERY.US.US_ENTERPRISE_ACTIVE_CMR=SELECT 1, '' FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND ZZKV_NODE2 = :ENT_NO AND LOEVM != 'X' and KATR6='897'

US.GET.US_ENTERPRISE = SELECT * FROM SAPR3.US_ENTERPRISE WHERE MANDT = :MANDT AND TRIM(ENT_NO) LIKE :ENT_NO ORDER BY UPDATE_DT DESC fetch first 5000 rows only
US.GET.US_ENTERPRISE_BY_ENT_NO=SELECT * FROM SAPR3.US_ENTERPRISE WHERE MANDT = :MANDT AND ENT_NO = :ENT_NO

QUERY.GET_IF_REQ_IS_REJECT_BEFORE=SELECT REQ_ID FROM CREQCMR.WF_HIST \
WHERE REQ_ID = :REQID \
AND REQ_STATUS = 'PRJ' LIMIT 1

US.GET.US_COMPANY=SELECT * FROM SAPR3.US_COMPANY WHERE MANDT = :MANDT AND TRIM(COMP_NO) LIKE :COMP_NO ORDER BY UPDATE_DT DESC fetch first 5000 rows only
US.GET.US_COMPANY_BY_COMP_NO=SELECT * FROM SAPR3.US_COMPANY WHERE MANDT = :MANDT AND COMP_NO = :COMP_NO
QUERY.US.US_COMPANY_EXISTS=SELECT 1, '' FROM SAPR3.US_COMPANY WHERE MANDT = :MANDT AND COMP_NO = :COMP_NO
QUERY.US.US_COMPANY_ACTIVE_CMR=SELECT 1, '' FROM SAPR3.KNA1 WHERE MANDT = :MANDT AND ZZKV_NODE1 = :COMP_NO AND LOEVM != 'X' and KATR6='897'

QUERY.WW.GET_REQ_STATUS=SELECT REQ_STATUS, '' from CREQCMR.ADMIN where REQ_ID = :REQ_ID

QUERY.JP.CRISREPORT.RAREPORT=SELECT BILL.ZZKV_CUSNO CPNO, \
CASE WHEN LOCATE('@',PAY.LAST_UPDT_BY) > 0 THEN LEFT(PAY.LAST_UPDT_BY,LOCATE('@',PAY.LAST_UPDT_BY)-1) ELSE PAY.LAST_UPDT_BY END USERID, \
VARCHAR_FORMAT(PAY.LAST_UPDT_TS + 9 HOURS, 'YYMMDDHH24MISS') DATE, \
CASE WHEN LEFT(BILL.ZZKV_CUSNO,1) = 'C' THEN 'BQ' \
WHEN BILL.AUFSD = '99' THEN BILL.SORTL \
ELSE 'AA' \
END CC, \
CUST.ZZKV_CUSNO PAY_FROM, \
BILL.ZZKV_CUSNO BILL_TO, \
PAY.* \
FROM JPINTERIM.SALES_PAYMENT PAY, SAPR3.KNA1 BILL \
LEFT OUTER JOIN SAPR3.KNB1 B1 \
ON BILL.MANDT = B1.MANDT \
AND B1.BUKRS = '7600' \
AND B1.KNRZB = BILL.ZZKV_CUSNO \
LEFT OUTER JOIN SAPR3.KNA1 CUST \
ON BILL.MANDT = CUST.MANDT \
AND B1.KUNNR = CUST.KUNNR \
AND B1.MANDT = CUST.MANDT \
AND CUST.KATR6 = '760' \
AND CUST.KTOKD = 'ZS01' \
AND CUST.AUFSD NOT IN ('75', 'CL','93', 'PG') \
WHERE BILL.MANDT = :MANDT \
AND BILL.MANDT = PAY.MANDT \
AND BILL.KUNNR = PAY.KUNNR \
AND BILL.KTOKD = 'ZS01' \
AND BILL.KATR6 = '760' \
AND BILL.AUFSD NOT IN ('75', 'CL','93', 'PG') \
AND ((PAY.LAST_UPDT_TS >= :DATEFROM \
AND PAY.LAST_UPDT_TS < :DATETO) \
OR (B1.SHAD_UPDATE_TS >= :DATEFROM \
AND B1.SHAD_UPDATE_TS < :DATETO)) \
ORDER BY LAST_UPDT_TS DESC \
WITH UR

QUERY.JP.CRISREPORT.TAIGADAILY=SELECT KNA1.KUNNR, LOG.CHGTS, KNA1.ZZKV_CUSNO RECORD_NO, CASE WHEN KNA1.KTOKD = 'ZORG' THEN 'COMPANY' ELSE 'ACCOUNT' END REC_TYPE, \
LOG.OLD OLD_VALUE, LOG.NEW NEW_VALUE, TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME1)))||TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME2))) NAME, \
COMP.ZZKV_CUSNO COMPANY_NO, TRIM(B X'E38080' FROM (TRIM(B X'20' FROM COMP_SADR.NAME1)))||TRIM(B X'E38080' FROM (TRIM(B X'20' FROM COMP_SADR.NAME2))) COMP_NAME \
FROM SAPR3.KNA1 KNA1, SAPR3.CHANGELOG LOG, SAPR3.SADR SADR, SAPR3.KNVV_EXT EXT \
LEFT OUTER JOIN SAPR3.KNA1 COMP \
ON KNA1.MANDT = COMP.MANDT \
AND KNA1.ZZKV_NODE1 = COMP.ZZKV_CUSNO \
AND COMP.KTOKD = 'ZORG' \
LEFT OUTER JOIN SAPR3.SADR COMP_SADR \
ON COMP.MANDT = COMP_SADR.MANDT \
AND COMP.ADRNR = COMP_SADR.ADRNR \
AND COMP_SADR.NATIO = '0' \
WHERE KNA1.MANDT = :MANDT \
AND KNA1.KTOKD = 'ZS01' \
AND KNA1.MANDT = SADR.MANDT \
AND KNA1.ADRNR = SADR.ADRNR \
AND KNA1.MANDT = EXT.MANDT \
AND KNA1.KUNNR = EXT.KUNNR \
AND NVL(LOG.OLD,'') <> NVL(LOG.NEW,'') \
AND SADR.NATIO = '0' \
AND KNA1.MANDT = LOG.MANDT \
AND KNA1.KUNNR = LOG.KUNNR \
AND LOG.TAB = 'KNVV_EXT' \
AND LOG.FIELD = 'JP_TAIGA_CD' \
AND LOG.CHGTS >= :DATEFROM \
AND LOG.CHGTS < :DATETO \
ORDER BY LOG.CHGTS DESC \
WITH UR

QUERY.JP.CRISREPORT.TAIGAMONTHLY=SELECT KNA1.ZZKV_CUSNO COMP_NO, TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME1)))||TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME2))), EXT.JP_TAIGA_CD \
FROM SAPR3.KNA1 KNA1, SAPR3.SADR SADR, SAPR3.KNVV_EXT EXT \
WHERE KNA1.MANDT = :MANDT \
AND KNA1.KATR6 = '760' \
AND KNA1.MANDT = SADR.MANDT \
AND KNA1.MANDT = EXT.MANDT \
AND KNA1.KUNNR = EXT.KUNNR \
AND KNA1.MANDT = SADR.MANDT \
AND EXT.VKORG = '7600' \
AND KNA1.ADRNR = SADR.ADRNR \
AND SADR.NATIO = '0' \
AND KNA1.AUFSD NOT IN ('75','CL','PG','93') \
AND KNA1.LOEVM <> 'X' \
AND NVL(EXT.JP_TAIGA_CD,'') <> '' \
AND KNA1.KTOKD = 'ZORG' \
ORDER BY KNA1.ZZKV_CUSNO \
WITH UR

QUERY.JP.CRISREPORT.ROLDAILY=SELECT KNA1.KUNNR, LOG.CHGTS, KNA1.ZZKV_CUSNO RECORD_NO, CASE WHEN KNA1.KTOKD = 'ZORG' THEN 'COMPANY' ELSE 'ACCOUNT' END REC_TYPE, \
LOG.OLD OLD_VALUE, LOG.NEW NEW_VALUE, TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME1)))||TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME2))) NAME, \
COMP.ZZKV_CUSNO COMPANY_NO, TRIM(B X'E38080' FROM (TRIM(B X'20' FROM COMP_SADR.NAME1)))||TRIM(B X'E38080' FROM (TRIM(B X'20' FROM COMP_SADR.NAME2))) COMP_NAME \
FROM SAPR3.KNA1 KNA1, SAPR3.CHANGELOG LOG, SAPR3.SADR SADR \
LEFT OUTER JOIN SAPR3.KNA1 COMP \
ON KNA1.MANDT = COMP.MANDT \
AND KNA1.ZZKV_NODE1 = COMP.ZZKV_CUSNO \
AND COMP.KTOKD = 'ZORG' \
LEFT OUTER JOIN SAPR3.SADR COMP_SADR \
ON COMP.MANDT = COMP_SADR.MANDT \
AND COMP.ADRNR = COMP_SADR.ADRNR \
AND COMP_SADR.NATIO = '0' \
WHERE KNA1.MANDT = :MANDT \
AND KNA1.KTOKD = 'ZS01' \
AND KNA1.MANDT = SADR.MANDT \
AND KNA1.ADRNR = SADR.ADRNR \
AND SADR.NATIO = '0' \
AND KNA1.MANDT = LOG.MANDT \
AND NVL(LOG.OLD,'') <> NVL(LOG.NEW,'') \
AND KNA1.KUNNR = LOG.KUNNR \
AND LOG.TAB = 'KNA1' \
AND LOG.FIELD = 'INSPBYDEBI' \
AND LOG.CHGTS >= :DATEFROM \
AND LOG.CHGTS < :DATETO \
ORDER BY LOG.CHGTS DESC \
WITH UR

QUERY.JP.CRISREPORT.ROLMONTHLY=SELECT KNA1.ZZKV_CUSNO COMP_NO, TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME1)))||TRIM(B X'E38080' FROM (TRIM(B X'20' FROM SADR.NAME2))), KNA1.INSPBYDEBI ROL \
FROM SAPR3.KNA1 KNA1, SAPR3.SADR SADR \
WHERE KNA1.MANDT = :MANDT \
AND KNA1.KATR6 = '760' \
AND KNA1.MANDT = SADR.MANDT \
AND KNA1.ADRNR = SADR.ADRNR \
AND SADR.NATIO = '0' \
AND KNA1.AUFSD NOT IN ('75','CL','PG','93') \
AND KNA1.LOEVM <> 'X' \
AND KNA1.INSPBYDEBI = 'N' \
AND KNA1.KTOKD = 'ZORG' \
ORDER BY KNA1.ZZKV_CUSNO \
WITH UR


#KSC Reports
KSC.INIT.DAILY=select trunc(current_timestamp + 9 hours), trunc(current_timestamp + 9 hours + 1 day) from sysibm.sysdummy1
KSC.INIT.MONTHLY=select date_trunc('MONTH', current_timestamp + 9 hours), date_trunc('MONTH', current_timestamp + 9 hours + 1 month) from sysibm.sysdummy1

KSC.RPT.ACCT=\
select kna1.shad_update_ts DRXCN, kna1.zzkv_cusno RCUXA, kna1.zzkv_estab RESXA, \
        trim(B X'E38080' from (trim(B X'20' from kanji.name1)))||trim(B X'E38080' from (trim(B X'20' from kanji.name2))) UNCUX01, \
        trim(B X'E38080' from (trim(B X'20' from kana.name1)))||trim(B X'E38080' from (trim(B X'20' from kana.name2))) UNCUX02, \
        kna1.telx1 NCUXB, kna1.stcd2 CTXXA, case when ext.goe_ind = 'Y' then 'G' else 'M' end CLGXA, pay.sales_team_no REMXA, \
        pay.sales_team_updt_dt DVOXA, ext.hangar RLCXB, knvvx.bo_division UBOCD, kna1.zzkv_lic CIYXA, knvv.kvgr1 ccrxa, \
        knvv.kdgrp UGPID, pay.pay_cycle_cd_1 CPCAE, '' BLANK, pay.pay_day_1 DBYAA, '' BLANK, pay.contract_sign_dt DMAXA, knvvx.jp_taiga_cd UTGCD \
from sapr3.kna1 kna1, sapr3.sadr kanji, sapr3.sadr kana, sapr3.kunnr_ext ext, sapr3.knvv knvv, sapr3.knvv_ext knvvx \
left outer join jpinterim.sales_payment pay \
  on kna1.mandt = pay.mandt \
  and kna1.kunnr = pay.kunnr \
where kna1.mandt = :MANDT \
and kna1.katr6 = '760' \
and kna1.loevm <> 'X' \
and kna1.aufsd = '99' \
and kna1.sortl = 'BF' \
and kna1.mandt = ext.mandt \
and kna1.kunnr = ext.kunnr \
and kna1.mandt = knvv.mandt \
and kna1.kunnr = knvv.kunnr \
and knvv.vkorg = '7600' \
and knvv.vtweg = '00' \
and knvv.spart = '00' \
and kna1.mandt = knvvx.mandt \
and kna1.kunnr = knvvx.kunnr \
and knvvx.vkorg = '7600' \
and knvvx.vtweg = '00' \
and knvvx.spart = '00' \
and kna1.mandt = kanji.mandt \
and kna1.mandt = kana.mandt \
and kna1.adrnr = kanji.adrnr \
and kna1.adrnr = kana.adrnr \
and kanji.natio = '0' \
and kana.natio = '1' \
and kna1.ktokd = 'ZS01' 

KSC.RPT.ACCT.DAILY=\
and ( \
  (kna1.shad_update_ts >= :DATE_FROM and kna1.shad_update_ts < :DATE_TO) \
  or  \
  (pay.last_updt_ts >= :DATE_FROM and pay.last_updt_ts < :DATE_TO) \
  or  \
  (knvv.shad_update_ts >= :DATE_FROM and knvv.shad_update_ts < :DATE_TO) \
  or  \
  (knvvx.update_dt >= :DATE_FROM and knvvx.update_dt < :DATE_TO) \
  or  \
  (ext.update_ts >= :DATE_FROM and ext.update_ts < :DATE_TO) \
  or  \
  (kanji.shad_update_ts >= :DATE_FROM and kanji.shad_update_ts < :DATE_TO) \
  or  \
  (kana.shad_update_ts >= :DATE_FROM and kana.shad_update_ts < :DATE_TO) \
) 

KSC.RPT.ACCT.ORDER=order by kna1.zzkv_cusno, kna1.zzkv_estab 


KSC.RPT.ADDR=\
select  \
       maxdet.shad_update_ts DRXCN, kna1.pier RASXA, kna1.zzkv_cusno RCUXA,  \
       translate(VARGRAPHIC(case when length(kna1.pstlz) = 7 and locate(kna1.pstlz, '-') = 0 then left(kna1.pstlz,3)||'-'||right(kna1.pstlz,4) else kna1.pstlz end), '\uFF0D\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19', '-0123456789') CZIPA,  \
       trim(B X'E38080' from (trim(B X'20' from kanji.ort01)))||trim(B X'E38080' from (trim(B X'20' from kanji.ort02))) TXTBA01, \
       trim(B X'E38080' from (trim(B X'20' from kanji.stras)))||trim(B X'E38080' from (trim(B X'20' from kanji.name3))) TXTBA02, \
       trim(B X'E38080' from (trim(B X'20' from kanji.name1)))||trim(B X'E38080' from (trim(B X'20' from kanji.name2))) TXTBA03, \
       trim(translate(vargraphic(trim(B X'E38080' from (trim(B X'20' from kana.name1)))||trim(B X'E38080' from (trim(B X'20' from kana.name2)))),'','\uFF0A')) TXTBA04, \
       trim(B X'E38080' from (trim(B X'20' from stxl.clustd))) TXTBA05, trim(B X'E38080' from (trim(B X'20' from knvk.name1))) NRPAA, \
       kna1.telf1 RPHAS, kna1.telfx RFAX, ext.adu UADUX \
from \
  (select kna1.mandt, kna1.pier, kna1.zzkv_cusno, kunnr.kunnr, kunnr.telfx, kunnr.telf1, kna1.pstlz \
                 from (select kna1.mandt, ext.pier, kna1.zzkv_cusno, kna1.katr6,min(ext.kunnr) kunnr, max(kna1.telfx) telfx, max(kna1.telf1) telf1 \
          from sapr3.kna1 kna1, sapr3.kunnr_ext ext \
          where kna1.katr6 = '760' \
          and kna1.loevm <> 'X' \
          and kna1.ktokd <> 'ZORG' \
          and kna1.aufsd = '99'  \
          and kna1.sortl = 'BF'  \
          and kna1.mandt = :MANDT \
          and kna1.mandt = ext.mandt \
          and kna1.kunnr = ext.kunnr  \
          and nvl(ext.pier,'') <> '' \
          group by kna1.mandt,ext.pier,kna1.zzkv_cusno, kna1.katr6) kunnr,  \
          (select distinct kna1.mandt, kna1.zzkv_cusno, case when length(kna1.pstlz) = 7 and locate(kna1.pstlz, '-') = 0 then left(kna1.pstlz,3)||'-'||right(kna1.pstlz,4) else kna1.pstlz end pstlz, ext.pier \
          from sapr3.kna1 kna1, sapr3.kunnr_ext ext \
          where kna1.katr6 = '760' \
          and kna1.loevm <> 'X' \
          and kna1.ktokd <> 'ZORG' \
          and kna1.aufsd = '99'  \
          and kna1.sortl = 'BF'  \
          and kna1.mandt = :MANDT \
          and kna1.mandt = ext.mandt \
          and kna1.kunnr = ext.kunnr \
          and nvl(ext.pier,'') <> '') kna1 \
        where kna1.mandt = :MANDT  \
        and kna1.mandt = kunnr.mandt \
        and kna1.zzkv_cusno = kunnr.zzkv_cusno \
        and kna1.pier = kunnr.pier ) kna1,  \
  sapr3.kna1 ref, sapr3.sadr kanji, sapr3.sadr kana, sapr3.knvk knvk, sapr3.stxl stxl, \
     (select kna1.zzkv_cusno,  max(kna1.shad_update_ts) shad_update_ts \
   from sapr3.kna1 kna1 \
   where kna1.katr6 = '760' \
   and kna1.loevm <> 'X' \
   and kna1.ktokd <> 'ZORG' \
   and kna1.aufsd = '99' \
   and kna1.mandt = :MANDT  \
   and kna1.sortl = 'BF'  \
   group by kna1.zzkv_cusno) maxdet, \
  (select kna1.zzkv_cusno, ext.pier, listagg(kna1.zzkv_seqno) within group(order by kna1.zzkv_seqno) adu \
  from sapr3.kna1 kna1, sapr3.kunnr_ext ext \
  where kna1.mandt = ext.mandt \
  and kna1.kunnr = ext.kunnr \
  and kna1.katr6 = '760' \
  and kna1.loevm <> 'X' \
  and kna1.ktokd <> 'ZORG' \
  and kna1.aufsd = '99'  \
  and kna1.sortl = 'BF'  \
  and kna1.mandt = :MANDT \
  group by kna1.zzkv_cusno,  ext.pier) ext \
where kna1.mandt = ref.mandt \
and kna1.kunnr = ref.kunnr \
and kna1.mandt = kanji.mandt  \
and kna1.zzkv_cusno = maxdet.zzkv_cusno \
and kna1.zzkv_cusno = ext.zzkv_cusno \
and ref.adrnr = kanji.adrnr  \
and kanji.natio = '0'  \
and kna1.mandt = kana.mandt  \
and ref.adrnr = kana.adrnr  \
and kana.natio = '1'  \
and kna1.mandt = knvk.mandt  \
and kna1.kunnr = knvk.kunnr  \
and knvk.mandt = stxl.mandt \
and knvk.parnr = stxl.tdname \
and stxl.tdobject = 'KNVK' \
and stxl.tdid = 'ZLEG'  

KSC.RPT.ADDR.DAILY=\
and ( \
  (maxdet.shad_update_ts >= :DATE_FROM and maxdet.shad_update_ts < :DATE_TO) \
  or  \
  (knvk.shad_update_ts >= :DATE_FROM and knvk.shad_update_ts < :DATE_TO) \
  or  \
  (kanji.shad_update_ts >= :DATE_FROM and kanji.shad_update_ts < :DATE_TO) \
  or  \
  (kana.shad_update_ts >= :DATE_FROM and kana.shad_update_ts < :DATE_TO) \
) 

KSC.RPT.ADDR.ORDER=order by kna1.zzkv_cusno, kna1.pier

KSC.RPT.COMP=\
select kna1.shad_update_ts DRXCN, kna1.zzkv_cusno RCOXA, '' RCOCS, \
        trim(B X'E38080' from (trim(B X'20' from kanji.name1)))||trim(B X'E38080' from (trim(B X'20' from kanji.name2))) UNCUX01, \
        trim(B X'E38080' from (trim(B X'20' from kana.name1)))||trim(B X'E38080' from (trim(B X'20' from kana.name2))) UNCUX02,  \
        kna1.telx1 NCUXB, ext.hangar RLCXB, kna1.zzkv_lic CIYXA \
from sapr3.kna1 kna1, sapr3.sadr kanji, sapr3.sadr kana, sapr3.kunnr_ext ext \
where kna1.mandt = :MANDT \
and kna1.mandt = ext.mandt \
and kna1.kunnr = ext.kunnr \
and kna1.mandt = kanji.mandt \
and kna1.adrnr = kanji.adrnr \
and kanji.natio = '0' \
and kna1.mandt = kana.mandt \
and kna1.adrnr = kana.adrnr \
and kana.natio = '1' \
and kna1.katr6 = '760' \
and kna1.ktokd = 'ZORG' \
and kna1.loevm <> 'X' \
and exists (select 1 \
           from sapr3.kna1 ref \
           where ref.mandt = kna1.mandt \
           and ref.zzkv_node1 = kna1.zzkv_cusno \
           and ref.loevm <> 'X' \
           and ref.aufsd = '99' \
           and ref.sortl = 'BF')

KSC.RPT.COMP.DAILY=\
and ( \
  (kna1.shad_update_ts >= :DATE_FROM and kna1.shad_update_ts < :DATE_TO) \
  or  \
  (kanji.shad_update_ts >= :DATE_FROM and kanji.shad_update_ts < :DATE_TO) \
  or  \
  (kana.shad_update_ts >= :DATE_FROM and kana.shad_update_ts < :DATE_TO) \
) 

KSC.RPT.COMP.ORDER=order by kna1.zzkv_cusno

KSC.RPT.ESTAB=\
select  kna1.shad_update_ts DRXCN, kna1.zzkv_estab RESXA, kna1.zzkv_node1 RCOXA, \
        trim(B X'E38080' from (trim(B X'20' from kanji.name1)))||trim(B X'E38080' from (trim(B X'20' from kanji.name2))) UNCUX01, \
        trim(B X'E38080' from (trim(B X'20' from kana.name1)))||trim(B X'E38080' from (trim(B X'20' from kana.name2))) UNCUX02,  \
        kna1.telx1 NCUXB \
from sapr3.kna1 kna1, sapr3.sadr kanji, sapr3.sadr kana \
where kna1.mandt = :MANDT \
and kna1.mandt = kanji.mandt \
and kna1.adrnr = kanji.adrnr \
and kanji.natio = '0'  \
and kna1.mandt = kana.mandt \
and kna1.adrnr = kana.adrnr \
and kana.natio = '1'  \
and kna1.katr6 = '760' \
and kna1.ktokd = 'ZS01' \
and kna1.loevm <> 'X' \
and kna1.aufsd = '99' \
and kna1.sortl = 'BF' \
and not exists (select 1  \
                from sapr3.kna1 ref  \
                where kna1.mandt = ref.mandt  \
                and kna1.zzkv_estab = ref.zzkv_estab  \
                and kna1.zzkv_node1 = ref.zzkv_node1  \
                and ref.ktokd = 'ZS01'  \
                and ref.aufsd = '99'  \
                and ref.sortl = 'BF'  \
                and ref.kunnr < kna1.kunnr) 

KSC.RPT.ESTAB.DAILY=\
and ( \
  (kna1.shad_update_ts >= :DATE_FROM and kna1.shad_update_ts < :DATE_TO) \
  or  \
  (kanji.shad_update_ts >= :DATE_FROM and kanji.shad_update_ts < :DATE_TO) \
  or  \
  (kana.shad_update_ts >= :DATE_FROM and kana.shad_update_ts < :DATE_TO) \
) 

KSC.RPT.ESTAB.ORDER=order by kna1.zzkv_estab

#BP
QUERY.GET.SOURCESYSTID=SELECT SOURCE_SYST_ID FROM CREQCMR.ADMIN WHERE REQ_ID=:REQ_ID

#IE Licenses
GET.LICENSES_BY_REQ_ID=select * from CREQCMR.LICENSES where REQ_ID = :REQ_ID
GET.LICENSES_BY_REQ_ID_INDC=select * from CREQCMR.LICENSES where REQ_ID = :REQ_ID and CURRENT_INDC = :INDC
GET.LICENSES_BY_REQ_ID_INDC_LICENSE_NUM=select * from CREQCMR.LICENSES where REQ_ID = :REQ_ID and CURRENT_INDC = :INDC and LICENSE_NUM = :LICENSE_NUM
QUERY.GET_SPECIAL_TAX_CD_OLD=SELECT SPECIAL_TAX_CD, '' FROM CREQCMR.DATA_RDC WHERE REQ_ID = :REQ_ID
QUERY.CHECK_TAX_LICENSE_ATTACHMENT=select 1,'' from CREQCMR.ATTACHMENT where DOC_CONTENT = 'LIC' and REQ_ID = :REQ_ID
ADDR.UPDATE.CHANGED_INDC.IE=update CREQCMR.ADDR set CHANGED_INDC = :CHANGED_INDC where REQ_ID = :REQ_ID AND ADDR_TYPE = 'ZS01'
GET.LEGACYTAXCD.IE=select CTXXA from CMRDB2D.CMRTCUST where RCYAA = '866' and RCUXA = :RCUXA
COUNT.VALID.LICENSEDATE=SELECT count(*) FROM SAPR3.KNVL \
WHERE MANDT = :MANDT \
and KUNNR in (select KUNNR from SAPR3.KNA1 where MANDT = :MANDT and KATR6 = :KATR6 and ZZKV_CUSNO = :ZZKV_CUSNO and KTOKD = 'ZS01') \
and VARCHAR_FORMAT(CURRENT DATE, 'YYYYMMDD') < DATBI \

#DONOT ADD ANYTHING AFTER THIS LINE
